{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/actions/logger.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\nvar INFO = '[EJ2TreeGrid.Info]';\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid');\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                console[item.logType](message);\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop) {\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function (args, parent, field) {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields are missing which are ' +\n                'required for the hierarchy relation of records in Tree Grid.\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    },\n};\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact) {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = void 0;\n                    result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        this.loggerModule ? this.loggerModule.treeLog(types, args, this) : (function () { return 0; })();\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            isAddBorder ? addClass([visiblerow.cells[j]], 'e-lastrowcell') : removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n        }\n    };\n    ;\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ;\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var totalRows = void 0;\n                var rows = _this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            _this.loggerModule ? _this.loggerModule.log(type, args) : (function () { return 0; })();\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (i === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && !isNullOrUndefined(gridColumns[this.treeColumnIndex].template)) {\n            temp = gridColumns[this.treeColumnIndex].template;\n            field = gridColumns[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.convertTreeData(this.dataSource);\n        this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n            this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this)) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (draggedRecord_1.hasOwnProperty(tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        recordIndex = args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            var index = getObject('index', summaryParent);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = void 0;\n            items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n                    this.keyPress = null;\n                }\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","Logger","Grid","Inject","GridLogger","call","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","console","logType","treeLog","treeGrid","allowRowDragAndDrop","treeGridDetails","mapping_fields_missing","opt","field","ERROR","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","treeColumn","templateFn","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","sHeight","scrollHeight","clientHeight","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","srcControlFlatData","actualIndex","selectedRecord","isByMethod","fromIndex","isMultipleGrid","dragLength","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"shBAIO,SAASA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAEX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAKhD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAEX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,SAAgBG,EAAkBC,GAC9B,IAAIC,EACJA,KAEA,IAAK,IAAId,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EAKX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAEX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAEX,SAAgBE,EAAaC,GAMzB,cALOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,MACNF,EAEX,SAAgBlB,EAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,OAAO1D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GAG1B,SAAgBI,EAASC,GACrB,IAAIC,EAAQC,OAAOC,iBAAiBH,GACpC,MAA2B,SAAlBC,EAAMG,SAA6C,WAArBH,EAAMI,WCrJ1C,SAASC,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGI9D,EACA0C,EAEAqB,EANAnB,EAAQY,EAAQZ,MAChBoB,EAASR,EAAQQ,OAMjBxD,EAAMiD,EAAQnD,KAAK2D,0BAA0B,GAC7CC,EAAWT,EAAQnE,sBAAsBC,cACzCkE,EAAQnE,WAAWA,WAAW6E,KAAOV,EAAQnE,WAC7C8E,KACAC,EAAezB,EACf0B,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQnD,KAAKmE,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAE7D,OAAU,CACxC,IAAIyE,EAuGZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAIlB,EACA0B,GAAS,EACTM,EAAqBnB,EAAQnD,KAAKuE,wBAGtC,OAFAjC,EAAQkC,YAAWtB,EAAQZ,OAC3BA,EAAQD,EAAaC,GACba,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQpC,GACjB0B,GAAS,EACT,MACJ,IAAK,SACDJ,EAAS/C,KAAKyB,GACd0B,GAAS,EACT,MACJ,IAAK,QAOG1B,EANCvC,oBAAkByD,GAMXnB,EADRC,EAAQkC,YAAWF,EAAmBjB,EAAc,KAH5ChB,EADRC,EAAQkC,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAKzD,oBAAkByD,GAIlB,CACD,IAAImB,EAAcxB,EAAQnD,KAAK2D,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrCf,EAAQD,EALJC,GADCvC,oBAAkB6E,IAAgBA,EAAYD,KAAiBzB,EAAQZ,MAAMqC,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQZ,aAT/BA,EAAQD,EADRC,EAAQkC,YAAWhB,KAcA,IAAnBF,IACAM,EAASc,QAAQpC,GACjB0B,GAAS,GAGrB,OAAS1B,MAAOA,EAAO0B,OAAQA,GAtJda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGlB,EAAQ+B,EAAO/B,MACf0B,EAASK,EAAOL,OAQpB,GANI1B,aAAiBwC,MACjBhB,EAAe9B,EAAYM,GAG3BwB,EAAajD,KAAK2D,YAAWlC,KAE5B0B,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAalE,OAAQmF,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAG7E,KACxB4D,EAAaiB,GAAKjB,EAAaiB,GAAG7E,IAEtC,IAAIS,EAAOmD,EAAaiB,GAAGC,SAAWtE,OAAOC,KAAKmD,EAAaiB,GAAGC,UAC9DtE,OAAOC,KAAKmD,EAAaiB,IAC7BrF,EAAIkE,EAAShE,OA6Eb,IA5EA,IAAIqF,EAAU,WACV,GAAIrB,EAASlE,GAAGQ,KAAS4D,EAAaiB,GAAG7E,GAAM,CAC3C,GAAe,WAAXwD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKtB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIwB,EAASlE,GAAGwF,eAAevE,EAAKyB,MAAuC,SAA9Be,EAAQc,aAAaC,OACzDnE,oBAAkB0D,IAAyD,IAAxCA,EAA2B,eAAE7D,QAClEe,EAAKyB,KAAOmB,GAAa,CAC5B,IAAI4B,EAAa/D,EAAc+B,EAASW,EAAaiB,GAAG1D,UACxDuC,EAASlE,GAAGiB,EAAKyB,IAAM0B,EAAaiB,GAAGpE,EAAKyB,IACxC+C,GAAcA,EAAWH,WACzBG,EAAWH,SAASrE,EAAKyB,IAAM+C,EAAWxE,EAAKyB,IAAMwB,EAASlE,GAAGiB,EAAKyB,WAKjF,GAAe,QAAXsB,GAA+B,cAAXA,EAAwB,CACjD,IAAInB,OAAQ,EACgC,UAAxCY,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaiB,SAAS7B,EAAQiC,iBAAmBxB,EAASlE,GAAGyD,EAAQkC,WACrEzB,EAAS0B,OAAO5F,EAAI,EAAG,EAAGqE,EAAaiB,YAGlCpB,EAASlE,GAAGwF,eAAe/B,EAAQoC,gBACpC3B,EAASlE,GAAGyD,EAAQoC,kBAExB3B,EAASlE,GAAGyD,EAAQoC,cAAc1E,KAAKkD,EAAaiB,UACpDQ,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAAS0B,OAAO5F,EAAI,EAAG,EAAGqE,EAAaiB,UACvCQ,EAAgBtF,EAAK0D,EAASlE,EAAI,GAAIgE,EAAQP,EAASC,EAAiBW,IAElEV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAAS0B,OAAO5F,EAAG,EAAGqE,EAAaiB,UACnCQ,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,EAAiBW,KALpExB,EAAQ,EACRqB,EAAS0B,OAAO/C,EAAO,EAAGwB,EAAaiB,WAO/C,MAAO,QAhEP,IAAIS,EAAgB7B,EAASlE,GAE7B,GADAkE,EAAS0B,OAAO5F,EAAG,GACf0D,EAAiB,CACjB,IAAKrD,oBAAkB0F,EAActC,EAAQiC,kBAKzC,IAAK,IAJDM,EAAavC,EAAQwC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAE1C,EAAQkC,aAAeI,EAActC,EAAQiC,mBACvD,GACCzD,EAAe+D,EAAaA,EAAWvC,EAAQoC,iBAC1CO,EAAInE,EAAa/B,OAAS,EAAGkG,GAAK,EAAGA,IAC1C,GAAInE,EAAamE,GAAG3C,EAAQkC,aAAeI,EAActC,EAAQkC,WAAY,CACzE1D,EAAa2D,OAAOQ,EAAG,GAClBnE,EAAa/B,SACd8F,EAAWhE,iBAAkB,EAC7B8D,EAAgBtF,EAAKwF,EAAYhC,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cAgDTrD,oBAAkB6D,EAASlE,GAAGyD,EAAQoC,gBACxCQ,EAAmBnC,EAASlE,GAAGyD,EAAQoC,cAAezB,EAAaiB,GAAIrB,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC5HiC,EAAgBtF,EAAK0D,EAASlE,GAAIgE,EAAQP,EAASC,IAIxD1D,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFuF,IAEV,QAsDpB,SAAgBc,EAAmBpE,EAAcmC,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAIyC,GAAa,EACb5D,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAAS4D,EAAa5D,IACrCkD,GAAmBzB,EAAaS,GAAGe,EAAQiC,mBAAqBtB,EAAaX,EAAQkC,WAAa,CACnG,GAAe,SAAX3B,EAAmB,CAGnB,IAAK,IAFD/C,EAAOD,OAAOC,KAAKmD,GACnBqB,EAAa/D,EAAc+B,EAASW,EAAazC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,IAC7B,GAAIiC,EAAaS,GAAG8C,eAAevE,EAAKjB,MAAsC,SAA9ByD,EAAQc,aAAaC,MAAmBvD,EAAKjB,KAAO6D,KAChG4B,EAAWxE,EAAKjB,IAAMyF,EAAWH,SAASrE,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAMoE,EAAanD,EAAKjB,IAChE,SAA9ByD,EAAQc,aAAaC,MAAiB,CAEtCf,EAAQnD,KAAKmE,WAAqB,WAAE8B,aAAenC,EAAavB,MAChEY,EAAQnD,KAAKmE,WAAqB,WAAE+B,sBAAsBpC,GAItE,MAEC,GAAe,QAAXJ,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQiC,iBAAmBzD,EAAaS,GAAGe,EAAQkC,WAChE1D,EAAa2D,OAAOlD,EAAI,EAAG,EAAG2B,GAC9ByB,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,KAGnEpC,EAAaS,GAAG8C,eAAe/B,EAAQoC,gBACxC5D,EAAaS,GAAGe,EAAQoC,kBAE5B5D,EAAaS,GAAGe,EAAQoC,cAAc1E,KAAKkD,EAAaiB,UACxDQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1B9C,EAAa2D,OAAOlD,EAAG,EAAG2B,EAAaiB,UACvCQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1B9C,EAAa2D,OAAOlD,EAAI,EAAG,EAAG2B,EAAaiB,UAC3CQ,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,EAAiBW,QAG3E,CACgBpC,EAAaS,GAAGjB,WACjCQ,EAAa2D,OAAOlD,EAAG,GAClBT,EAAa/B,SACdoG,GAAa,SAIfjG,oBAAkB4B,EAAaS,GAAGe,EAAQoC,gBAC5CQ,EAAmBpE,EAAaS,GAAGe,EAAQoC,cAAezB,EAAcJ,EAAQxD,EAAKiD,EAASC,EAAiBW,EAAcR,IAC7HiC,EAAgBtF,EAAKyB,EAAaS,GAAIsB,EAAQP,EAASC,GAInE,OAAO4C,EAEX,SAAgBR,EAAgBtF,EAAKa,EAAQ2C,EAAQP,EAASC,EAAiB+C,GAC3E,GAA6C,UAAxChD,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6B3D,oBAAkBoG,EAAMhF,YAI7E,CACD,IACIiF,EADAC,EAAiBlD,EAAQnD,KAAKuE,wBAalC,GAXA8B,EAAeC,IAAI,SAAUT,EAAGnG,GAASmG,EAAE3F,KAASa,EAAOb,KACvDkG,EAAU1G,KAGTK,oBAAkBqG,KACnBrF,EAASsF,EAAeD,IAExBjD,EAAQoD,sBAAwBxG,oBAAkBgB,KAAYhB,oBAAkBoG,KAChFpF,EAASyF,WAAS,sBAAwBL,EAAMM,eAAgBtD,IAEpEpC,EAAOW,iBAAkB,EACV,QAAXgC,GAA+B,cAAXA,EAAwB,CAC5C3C,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrByB,EAAQuD,aAAa/G,QAAQC,QAAUG,oBAAkBoG,KACzDA,EAAQE,EAAeT,OAAO,SAAUC,GACpC,OAAIA,EAAEY,iBAAmB1F,EAAOM,SACrBwE,EAGA,QAInB,IAAIlE,EAAewE,EAAQA,aAAiBrB,MAAQqB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxCjD,EAAQc,aAAaQ,iBAChB1D,EAAOmE,eAAe,gBAIlBnF,oBAAkBoG,IAAUpF,EAAOb,KAASiG,EAAMjG,IACnDa,EAAOY,aAAad,KAAKsF,GAJ7BpF,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAagF,QAAQhF,IAAwBZ,EAAOb,KAASiG,EAAMjG,IAC1Ea,EAAOY,aAAa+C,QAAQ/C,GAE5ByB,IACKrC,EAAOmE,eAAe/B,EAAQoC,gBAC/BxE,EAAOoC,EAAQoC,mBAEyC,IAAxDxE,EAAOoC,EAAQoC,cAAcoB,QAAQhF,IAAwBZ,EAAOb,KAASiG,EAAMjG,IACnFa,EAAOoC,EAAQoC,cAAcb,QAAQ/C,KAQrD,IAAK,IAHDgD,EAAcxB,EAAQnD,KAAK2D,0BAA0B,GACrDiD,EAAOzD,EAAQnD,KAAKhB,sBAAsBC,cAC1CkE,EAAQnD,KAAKhB,WAAWA,WAAW6E,KAAOV,EAAQnD,KAAKhB,WAClDU,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAC7B,GAAIkH,EAAKlH,GAAGiF,KAAiB5D,EAAO4D,GAAc,CAC9CiC,EAAKlH,GAAKqB,EACV,MAGRoC,EAAQnD,KAAK6G,WAAW3G,EAAKa,GAC7B,IAAI+F,EAAM3D,EAAQ4D,cAAcX,GACE,UAA9BjD,EAAQc,aAAaC,OACrB4C,EAAM3D,EAAQ6D,UAAU7D,EAAQnD,KAAKiH,wBAAwBlG,EAAOb,MAExE,IAAIgH,OAAa,GACb/D,EAAQgE,YAAchE,EAAQiE,sBAC9BF,EAAa/D,EAAQkE,qBAAqBjB,KAEzCjD,EAAQoD,sBAAyBxG,oBAAkB+G,KAAS/G,oBAAkBmH,IAC/E/D,EAAQmE,aAAaC,YACjBX,KAAM7F,EAAQyG,KAAMV,EAAIW,MAAMtE,EAAQuE,iBAAmBZ,EAAIW,MAAMtE,EAAQuE,iBACrER,EAAWO,MAAMtE,EAAQuE,gBAAkBvE,EAAQwE,eACzDC,OAAQzE,EAAQnD,KAAK6H,aAAa1E,EAAQuE,iBAC1CI,YAAapE,QA7EsE,CAC1EtC,EAAc+B,EAASgD,EAAMhF,WAAWE,UAC9CM,aAAad,KAAKsF,IC3OrC,IAAI4B,EAAwB,WA6DxB,OA5DA,SAAgBC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAK7H,gBAAiB,EAMtB6H,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKrC,UACL6C,QAAMR,KAAMD,OC/DhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,OAxCAS,EAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAY,GACpCE,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACxCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,gBACDH,EAAUb,UAAW,yBAAqB,GAC7CE,GACIc,gBACDH,EAAUb,UAAW,sBAAkB,GAC1CE,GACIc,cACDH,EAAUb,UAAW,YAAQ,GAChCE,GACIc,cACDH,EAAUb,UAAW,mBAAe,GACvCE,GACIc,cACDH,EAAUb,UAAW,WAAO,GAC/BE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,EAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,eAAW,GACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,cACDE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,2BAAuB,GACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,0BAAsB,GACnDE,GACIc,cACDE,EAAelB,UAAW,iBAAa,GAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,oBAAgB,GAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,qBAAiB,GACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,EAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,gBAAY,GACpCoB,GACTH,iBChCEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCuB,EAAU,oDACVC,EAAe,2CAIfC,EAAwB,SAAUT,GAElC,SAASS,EAAO1L,GAIZ,OAFA2L,OAAKC,OAAOC,UACJZ,EAAOa,KAAK5C,KAAMlJ,IAAWkJ,KA8DzC,OAlEAS,EAAU+B,EAAQT,GAWlBS,EAAOvB,UAAU4B,cAAgB,WAC7B,MAAO,UAEXL,EAAOvB,UAAU6B,IAAM,SAAUC,EAAOC,GAC9BD,aAAiBlG,QACnBkG,GAASA,IAGb,IAAK,IADDE,EAAOF,EACFtL,EAAI,EAAGA,EAAIwL,EAAKtL,OAAQF,IAAK,CAClC,IAAIyL,EAAOC,cAAYF,EAAKxL,IACxB2L,EAAMF,EAAKG,MAAML,EAAMhD,KAAKlJ,QAChC,GAAIsM,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMhD,KAAKlJ,OAAQsM,EAAIrD,SAEtDzF,GADJiJ,EAAUA,EAAQE,QAAQ,UAAW,gBACjB/E,QAAQ,SACxBgF,EAAUH,EAAQI,UAAUrJ,GAChB,mBAAZ2I,EAAKxL,GACL8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,2BAAZW,EAAKxL,IAA+C,0BAAZwL,EAAKxL,GAClD8L,EAAUA,EAAQE,QAAQC,EAASnB,EAAe,sCAEjC,qBAAZU,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,SAE5B,mBAAZW,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,6BAAZW,EAAKxL,GACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,YAE5B,mBAAZW,EAAKxL,KACV8L,EAAUA,EAAQE,QAAQC,EAASpB,EAAU,gCAEjDsB,QAAQV,EAAKW,SAASN,MAIlCf,EAAOvB,UAAU6C,QAAU,SAAUf,EAAOC,EAAMe,GACxChB,aAAiBlG,QACnBkG,GAASA,IAEb,IAAIE,EAAOF,EACPgB,EAASC,qBACThE,KAAK8C,IAAI,yBAA0BE,GAEvC,IAAK,IAAIvL,EAAI,EAAGA,EAAIwL,EAAKtL,OAAQF,IAAK,CAClC,IAAIyL,EAAOe,EAAgBhB,EAAKxL,IAC5B2L,EAAMF,EAAKG,MAAML,EAAMe,GAC3B,GAAIX,EAAIE,QAAS,CACb,IAAIC,EAAUL,EAAKM,gBAAgBR,EAAMe,EAAUX,EAAIrD,SACvD6D,QAAQV,EAAKW,SAASN,MAI3Bf,GACTG,UAESsB,GACPC,wBACIjB,KAAM,yBACNY,QAAS,QACTR,MAAO,SAAUL,EAAMlM,GACnB,IAAIqN,GAAQb,SAAS,GAOrB,OANKxL,oBAAkBhB,EAAOsG,YAActF,oBAAkBhB,EAAOwG,eAC9DxF,oBAAkBhB,EAAOqG,mBAC1BrF,oBAAkBhB,EAAOsG,YAActF,oBAAkBhB,EAAOqG,kBACjErF,oBAAkBhB,EAAOsG,aAAetF,oBAAkBhB,EAAOqG,oBAClEgH,GAAQb,SAAS,IAEda,GAEXX,gBAAiB,SAAUR,EAAMlM,EAAQsN,GACrC,MAAOC,8QAIF9B,EAAe,+BACfA,EAAe,4BACfA,EAAe,oCC9GrB+B,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAkB,kBAElBC,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAIlB1L,EAAW,WAIX2L,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,EAAmB,mBAQnBC,GAAa,aAEbC,GAAY,YAEZC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpB1G,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCqG,GAA+B,SAAUrF,GAEzC,SAASqF,EAActQ,GACnB,IAAIuQ,EAAQtF,EAAOa,KAAK5C,KAAMlJ,EAAOiB,OAASiI,KAI9C,OAHAqH,EAAMC,gBAAkB,GACxBD,EAAME,4BACNF,EAAMG,eAAiB1Q,EAChBuQ,EAsJX,OA5JA5G,GAAU2G,EAAerF,GAQzBqF,EAAcnG,UAAUwG,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdvJ,EAAiB4B,KAAKwH,eAAelL,wBACzC,GAAyC,KAArC1B,OAAOgN,eAAeC,WAAmB,CACzC7H,KAAK8H,kBAAkBzN,MAAQ2F,KAAK2H,GAAe,GACnD,IAAII,EAAO/H,KAAKwH,eAAezP,KAAKgH,UACpC,GAAmD,SAA/CiB,KAAKwH,eAAeQ,kBAAkB/L,KAAiB,CAIvD,IAAK,IAHDgM,EAAkBjI,KAAKwH,eAAeU,wBAAwBC,KAAK,SAAUC,EAAGxH,GAChF,OAAOwH,EAAIxH,IAENnJ,EAAI,EAAGA,EAAIwQ,EAAgBtQ,OAAQF,IAIxC,GAHIA,EAAI,IACJuI,KAAKsH,iBAAmB,OAEvBS,EAAKE,EAAgBxQ,IAAI4Q,UAAUC,SAAS,gBAAiB,CAC9D,IAAI9I,KAAW+I,MAAM3F,KAAKmF,EAAKE,EAAgBxQ,IAAI+Q,iBAAiB,eAChEC,EAAWzI,KAAKwH,eAAekB,qBAAqBjR,GAAW,UACV,IAArDuI,KAAKuH,yBAAyB7I,QAAQ+J,KACQ,WAA1CzI,KAAKwH,eAAemB,mBAA4E,SAA1C3I,KAAKwH,eAAemB,mBAC1E3I,KAAK4I,kBAAkBxK,EAAgB6J,EAAgBxQ,GAAIsQ,EAAML,EAAYjQ,GAEjFuI,KAAgB,YAAER,GAAO,EAAO,KAAMkI,GACtC1H,KAAKsH,iBAAmBtH,KAAK2H,GAC7B3H,KAAKuH,yBAAyB3O,KAAK6P,GACnCzI,KAAK2H,GAAe,GAC0B,UAA1C3H,KAAKwH,eAAemB,mBAA2E,SAA1C3I,KAAKwH,eAAemB,mBACzE3I,KAAK6I,iBAAiBzK,EAAgB6J,EAAgBxQ,GAAIsQ,EAAML,IAKhF,GAAIA,EAAY,CAEP,IADDoB,KACJ,IAASrR,EAAI,EAAGA,EAAIuI,KAAKwH,eAAeuB,oBAAoBpR,OAAQF,IAChEqR,EAAgBrR,GAAKuI,KAAKwH,eAAeuB,oBAAoBtR,GAAGuR,WAEpEhJ,KAAgB,YAAE8I,GAAiB,EAAO,KAAMpB,GAChD1H,KAAKsH,gBAAkBtH,KAAK2H,GAAe,KAAO3H,KAAKsH,gBAE3D,IAAItE,GACArE,KAAMqB,KAAKsH,gBACX2B,QAAQ,GAGZ,GADAjJ,KAAKwH,eAAe0B,QDnBZ,aCmBuClG,GAC3CA,EAAKiG,OACL,OAEJjJ,KAAK8H,kBAAkBzN,MAAQ2F,KAAK2H,GAAe3E,EAAKrE,KACnDwK,UAAQC,UAAUC,MAAM,qBAIzBrJ,KAAK8H,kBAAkBwB,kBAAkB,EAAGtJ,KAAK8H,kBAAkBzN,MAAM1C,QAHzEqI,KAAK8H,kBAAkByB,SAK3BvJ,KAAa,UAAI,EACjBA,KAAKuH,4BACLvH,KAAKsH,gBAAkB,QAGvBvF,EAAOd,UAAUwG,YAAY7E,KAAK5C,KAAM0H,KAIpDN,EAAcnG,UAAU2H,kBAAoB,SAAUxK,EAAgB/C,EAAe0M,EAAML,EAAYpN,GACnG,IACIqN,EAAc,cACdzO,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkBsG,EAAe/C,GAAenC,IAEjD,IAAK,IADDsQ,EAAYpL,EAAe/C,GAAenC,GAAiB,MACtDzB,EAAI,EAAGA,EAAI+R,EAAY,EAAG/R,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAIiE,EAAezG,OAAQwC,IACvC,IAAKrC,oBAAkBsG,EAAe/C,GAAenC,KACjDkF,EAAejE,GAAGf,KAAcgF,EAAe/C,GAAenC,GAAYE,GAAW,CACrFiC,EAAgBlB,EAChB,IAAIqF,KAAW+I,MAAM3F,KAAKmF,EAAK1M,GAAemN,iBAAiB,eAC3DC,EAAWrK,EAAejE,GAAGf,GACjC,IAAyD,IAArD4G,KAAKuH,yBAAyB7I,QAAQ+J,GAAkB,CACxDzI,KAAgB,YAAER,GAAO,EAAO,KAAMkI,GAElC1H,KAAKsH,gBADLhN,EAAQ,EACe0F,KAAKsH,gBAAkBtH,KAAK2H,GAAe,KAG3C3H,KAAK2H,GAAe,KAAO3H,KAAKsH,gBAE3DtH,KAAKuH,yBAAyB3O,KAAK6P,GACnCzI,KAAK2H,GAAe,GACpB,SAOxBP,EAAcnG,UAAUwI,KAAO,SAAU/B,GACrC3F,EAAOd,UAAUwI,KAAK7G,KAAK5C,KAAM0H,IAErCN,EAAcnG,UAAUyI,MAAQ,SAAU/K,EAAMgL,EAAUC,GACtD7H,EAAOd,UAAUyI,MAAM9G,KAAK5C,KAAMrB,EAAMgL,EAAUC,IAMtDxC,EAAcnG,UAAU4B,cAAgB,WACpC,MAAO,aAQXuE,EAAcnG,UAAU4I,QAAU,WAC9B9H,EAAOd,UAAU4I,QAAQjH,KAAK5C,OAElCoH,EAAcnG,UAAU4H,iBAAmB,SAAUzK,EAAgB/C,EAAe0M,EAAML,GACtF,IAIItO,EAAW,WACf,GAAIgF,EAAe/C,GAA8B,gBAE7C,IAAK,IADDyO,EAAY1L,EAAe/C,GAA2B,aACjD5D,EAAI,EAAGA,EAAIqS,EAAUnS,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAIiE,EAAezG,OAAQwC,IACvC,IAAKrC,oBAAkBgS,EAAUrS,GAAG2B,KAAcgF,EAAejE,GAAGf,KAAc0Q,EAAUrS,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkBiQ,EAAK5N,MAAS4N,EAAK5N,GAAGkO,UAAUC,SAAS,gBAAiB,CAC9E,IAAI9I,KAAW+I,MAAM3F,KAAKmF,EAAK5N,GAAGqO,iBAAiB,eAC/CC,EAAWrK,EAAejE,GAAGf,IACwB,IAArD4G,KAAKuH,yBAAyB7I,QAAQ+J,KACtCzI,KAAgB,YAAER,GAAO,EAAO,KAAMkI,GACtC1H,KAAKsH,iBAAoB,KAAOtH,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKuH,yBAAyB3O,KAAK6P,GACnCzI,KAAK6I,iBAAiBzK,EAAgBjE,EAAG4N,EAAML,IAGvD,QAMbN,GACT2C,aCxKEC,GAA2B,WAI3B,SAASA,EAAUlT,GACfkJ,KAAKlJ,OAASA,EACdkJ,KAAKiK,iBACLjK,KAAKiI,mBACLjI,KAAKkK,mBA2aT,OAraAF,EAAU/I,UAAU4B,cAAgB,WAChC,MAAO,aAEXmH,EAAU/I,UAAUiJ,iBAAmB,WACnClK,KAAKlJ,OAAOqT,GAAG,eAAgBnK,KAAKoK,eAAgBpK,MACpDA,KAAKlJ,OAAOqT,GAAG,iBAAkBnK,KAAKqK,eAAgBrK,MACtDA,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAKsK,kBAAmBtK,MAC5DA,KAAKlJ,OAAOiB,KAAKoS,GAAG,mBAAoBnK,KAAKoK,eAAgBpK,MAC7DA,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAKuK,kBAAmBvK,OAEhEgK,EAAU/I,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,eAAgB1K,KAAKoK,gBACrCpK,KAAKlJ,OAAO4T,IAAI,iBAAkB1K,KAAKqK,gBACvCrK,KAAKlJ,OAAOiB,KAAK2S,IAAI,mBAAoB1K,KAAKoK,gBAC9CpK,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAKuK,mBAC1CvK,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAKsK,qBAO9CN,EAAU/I,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAETR,EAAU/I,UAAUsJ,kBAAoB,SAAUvH,GAC9C,IAEI2H,EAFAtJ,EAAS1I,YAAU,SAAUqK,GAC7B4H,EAAYC,eAAaxJ,EAAQ,sBAErC,GAAIuJ,GAAaA,EAAUpC,iBAAiB,sBAAsB7Q,OAAS,EAAG,CAC1EgT,EAAWC,EAAUE,cAAc,0BACnC,IAAInB,OAAW,GACfA,MACS/Q,KAAKyI,EAAO0J,QAAQ,MAAMpB,UACnC3J,KAAKgL,iBAAiBrB,GACtB3J,KAAKiL,sBAAsBN,EAAUA,EAASO,mBAAmB7C,UAAUC,SAAS,WAAYjH,EAAO0J,QAAQ,YAE9G,GAAIH,GAAaA,EAAUpC,iBAAiB,oBAAoB7Q,OAAS,GAAKqI,KAAKlJ,OAAOqU,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,aACpEsC,EAAUE,cAAc,YAAYzC,UAAUC,SAAS,UAC/DtI,KAAKqL,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnC9K,KAAKiL,sBAAsBN,EAAUS,EAAe/J,EAAO0J,QAAQ,SAG3Ef,EAAU/I,UAAUgK,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAI5M,EAAOqB,KAAKlJ,OAAOwF,wBAAwBiP,EAAW5B,UACtD3G,GAASwI,QAASF,EAAYjK,OAAQsJ,EAAUY,WAAYA,EAC5DE,QAASd,EAAStC,UAAUC,SAAS,mBAC/BtI,KAAKlJ,OAAO4U,oBAAsB/M,GAC5CqB,KAAKlJ,OAAOoS,QAAQyC,EAAuB3I,IAE/CgH,EAAU/I,UAAU2K,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACApU,EAAWsI,KAAKlJ,OAAc,QACzBiV,EAAM,EAAGA,EAAMrU,EAAQC,OAAQoU,IAChCrU,EAAQqU,GAAKnU,eACbiU,EAAa7L,KAAKlJ,OAAOY,QAAQqU,GAAKC,KAI9C,IAAK,IADDC,EAAmBjM,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,oBAAoB7Q,OAClFwC,EAAI,EAAGA,EAAI8R,EAAkB9R,IAAK,CACtB6F,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,oBAAoBrO,GACtEgS,aAAa,kBAAoBN,IAC5CC,EAAc3R,GAGtB,OAAO2R,GAEX9B,EAAU/I,UAAUmJ,eAAiB,WAEjC,GADApK,KAAK8L,YAAc9L,KAAK4L,yBACpB5L,KAAK8L,aAAe,GAAoF,IAA/E9L,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,oBAAoB7Q,OAAc,CAC3G,IAAIyU,EAAgBpM,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,oBAAoBxI,KAAK8L,aACzFlB,OAAY,EAEZyB,EAAYrM,KAAKlJ,OAAOwV,cAAc,SAAWC,UAAW,kBAAmBC,OAASvJ,KAAQ,eACpG2H,EAAY6B,iBAAezM,KAAKlJ,OAAOwV,eAAe,GAASd,SAFnD,EAEmEkB,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYnQ,MAAMiS,MAAQ,OAClDhC,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACnDjV,oBAAkBsU,IACnBA,EAAcS,aAAajC,EAAWwB,EAAcW,YAEpD/M,KAAKlJ,OAAOqU,oBACZnL,KAAKqL,uBAGR,GAAIrL,KAAK8L,aAAe,GAAK9L,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,oBAAoB7Q,OAAS,EAAG,CAC9G,IACIyT,GADAR,EAAY5K,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,uBAAuB,IACzDsC,cAAc,YAAYzC,UAAUC,SAAS,WACvEtI,KAAKlJ,OAAOqU,oBAAsBC,GAClCpL,KAAKqL,gBAAgBD,KAIjCpB,EAAU/I,UAAU+L,qBAAuB,SAAUhK,GACjD,IAAI4H,EACAyB,EAAYrM,KAAKlJ,OAAOwV,cAAc,SAAWC,UAAW,oBAAqBC,OAASvJ,KAAQ,cAClGtE,EAAOqE,EAAKrE,KAChBqE,EAAKzD,KAAK8I,UAAUsE,IAAI,sBACxB3J,EAAKzD,KAAK0N,aAAa,aAAc,YACrC,IAAI5S,GAASvC,oBAAkB6G,EAAKuO,gBAAyC,YAAvBvO,EAAKuO,cAI3D,IAHAtC,EAAY6B,iBAAezM,KAAKlJ,OAAOwV,eAAe,GAASd,QAASnR,EAAOqS,MAAO,OAC5ErE,UAAUsE,IAAI,uBACxB/B,EAAUE,cAAc,YAAYnQ,MAAMiS,MAAQ,OACvB,kBAAvBjO,EAAKuO,cAAmC,CACxC,IAAIC,EAAWvC,EAAUpC,iBAAiB,YAAY,GACtD4E,eAAaD,IAAY,UAAW,SAAU,cAC9CvC,EAAUE,cAAc,YAAYzC,UAAUsE,IAAI,UAGtD,OADA/B,EAAUiC,aAAaR,EAAUS,YAAalC,EAAUmC,YACjDnC,GAEXZ,EAAU/I,UAAUoJ,eAAiB,SAAUgD,GAC3C,IAAIzC,EAAY5K,KAAKgN,qBAAqBK,GACtCC,EAAeD,EAAU9N,KAAKuL,cAAc,2BAChD,GAAKhT,oBAAkBwV,GAKlB,CACD,IAAIC,EAAUvN,KAAKlJ,OAAOwV,cAAc,QAAUC,UAAW,mBACzD5N,EAAO0O,EAAU9N,KAAKiO,UAC1BH,EAAU9N,KAAKiO,UAAY,GAC3BD,EAAQC,UAAY7O,EACpB,IAAI8O,EAASzN,KAAKlJ,OAAOwV,cAAc,OAASC,UAAW,6BAC3DkB,EAAOC,YAAY9C,GACnB6C,EAAOC,YAAYH,GACnBF,EAAU9N,KAAKmO,YAAYD,QAZtBJ,EAAU9N,KAAKuL,cAAc,yBAC9BwC,EAAaT,aAAajC,EAAW0C,EAAa9E,iBAAiB,eAAe,KAc9FwB,EAAU/I,UAAU+J,iBAAmB,SAAU2C,GAE7C,IAAK,IAAIlW,EAAI,EAAGA,EAAIkW,EAAWhW,OAAQF,IAAK,CACxC,IAAIqB,EAASkH,KAAKlJ,OAAOwF,wBAAwBqR,EAAWlW,IACxDmW,EAAazU,EAAc6G,KAAKlJ,OAAQgC,EAAOM,UAG/C8T,EAA0C,aAF9CpU,EAAU+U,cAAsD,kBAAxC7N,KAAKlJ,OAAOC,WAAsB,YACtD+B,EAAS8U,GACeV,cAA+B,QAAU,UACrEpU,EAAOoU,cAAgBA,EAEvB,IAAK,IADDxU,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzByT,EAAW3Q,eAAevE,EAAKyB,MAC/ByT,EAAWlV,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1C6F,KAAK8N,gBAAgBhV,EAAQoU,GAAe,GACxClN,KAAKlJ,OAAOqU,oBACZnL,KAAKqL,oBAIjBrB,EAAU/I,UAAU6M,gBAAkB,SAAUhV,EAAQoU,EAAea,GACnE,IAAIpW,EAAS,EAKb,GAJAqI,KAAKgO,oBAAoBlV,EAAQoU,IAC5Ba,GAAejV,EAAOI,YAAc8G,KAAKlJ,OAAOqU,oBACjDnL,KAAKiO,sBAAsBnV,EAAOI,YAElCJ,EAAOY,cAAgBsG,KAAKlJ,OAAOqU,mBAAoB,CACvD,IAAIzR,EAAeZ,EAAOY,cACrB5B,oBAAkBkI,KAAKlJ,OAAOoX,eAC/BlO,KAAKlJ,OAAOoX,aAAaC,eAAexW,OAAS,GAAKqI,KAAKlJ,OAAOqU,qBAClEzR,EAAesG,KAAKoO,wBAAwB1U,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAI0W,EAAQ,EAAGA,EAAQ1W,EAAQ0W,IAC3B3U,EAAa2U,GAAOC,eACjB5U,EAAa2U,GAAO5U,gBACpBuG,KAAK8N,gBAAgBpU,EAAa2U,GAAQnB,GAAe,GAGzDlN,KAAKgO,oBAAoBtU,EAAa2U,GAAQnB,MAMlElD,EAAU/I,UAAUmN,wBAA0B,SAAU1U,GACpD,IAAI2N,EAAQrH,KAIZ,OAH2BtG,EAAaiE,OAAO,SAAUC,GACrD,OAAOyJ,EAAMvQ,OAAOoX,aAAaC,eAAezP,QAAQd,IAAM,KAItEoM,EAAU/I,UAAUgN,sBAAwB,SAAUhV,GAClD,IACItB,EAAS,EACT+B,KACAZ,EAASK,EAAc6G,KAAKlJ,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkBkI,KAAKlJ,OAAOoX,eAC/BlO,KAAKlJ,OAAOoX,aAAaC,eAAexW,OAAS,GAAKqI,KAAKlJ,OAAOqU,qBAClEzR,EAAesG,KAAKoO,wBAAwB1U,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAI4W,EAAU,EACVC,EAAoB,EACxB,IAAK1W,oBAAkBgB,GAAS,CAkB5B,IAAK,IAjBDkE,EAAU,SAAUvF,GACpB,IAAIgX,EAAcC,EAAO5X,OAAOwF,wBAAwBqB,OAAO,SAAUC,GACrE,OAAOA,EAAExE,WAAaM,EAAajC,GAAG2B,WAEtCuV,EAAgBxV,EAAcuV,EAAO5X,OAAQ4C,EAAajC,GAAG2B,UAC7DwV,EAAkBf,cAAwD,kBAA1Ca,EAAO5X,OAAOC,WAAsB,YACpE0X,EAAY,GAAKE,EAChB7W,oBAAkB8W,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAIRE,EAAS1O,KACJvI,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCuF,EAAQvF,GAGRqB,EAAOoU,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsB7W,EACxC,gBAEI,IAAtB6W,GAAuC,IAAZD,EACT,UAGA,QAE3BvO,KAAKgO,oBAAoBlV,EAAQA,EAAOoU,eACpCpU,EAAOI,YACP8G,KAAKiO,sBAAsBnV,EAAOI,cAI9C8Q,EAAU/I,UAAUoK,gBAAkB,SAAUwD,GAC5C,IAAIxH,EAAQrH,KAGRrI,EAAS,EACTgH,GAAS7G,oBAAkBkI,KAAKlJ,OAAOoX,eACvClO,KAAKlJ,OAAOoX,aAAaC,eAAexW,OAAS,EAAKqI,KAAKlJ,OAAOoX,aAAaC,eAC/EnO,KAAKlJ,OAAO4G,SAGhB,GAFAiB,EAAQkP,cAAsD,kBAAxC7N,KAAKlJ,OAAOC,WAAsB,aAA0BF,EAAamJ,KAAKlJ,QAChGkJ,KAAKlJ,OAAOwF,wBAA0BqC,GACrC7G,oBAAkB+W,GACnB,IAAK,IAAIpX,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAC7B,GAAIoX,EAAU,CACV,GAA8B,UAA1BlQ,EAAKlH,GAAGyV,cACR,SAEJvO,EAAKlH,GAAGyV,cAAgB,QACxBlN,KAAKgO,oBAAoBrP,EAAKlH,GAAIkH,EAAKlH,GAAGyV,oBAGlClN,KAAKiK,cAAcvL,QAAQC,EAAKlH,KAC3B,IACTkH,EAAKlH,GAAGyV,cAAgB,UACxBlN,KAAKgO,oBAAoBrP,EAAKlH,GAAIkH,EAAKlH,GAAGyV,eACtClN,KAAKlJ,OAAOqU,oBACZnL,KAAKiO,sBAAsBtP,EAAKlH,MAMnC,IAAboX,GAAsB7O,KAAKlJ,OAAOwH,uBAClC0B,KAAKiK,iBACLjK,KAAKiI,mBACLtJ,EAAKhB,OAAO,SAAUmR,GAClBA,EAAI5B,cAAgB,UACpB7F,EAAM2G,oBAAoBc,EAAKA,EAAI5B,kBAG3CvV,EAASqI,KAAKiK,cAActS,OAC5B,IAAIwV,EAAWnN,KAAKlJ,OAAOoV,mBAAmB1D,iBAAiB,YAAY,GACvE7Q,EAAS,GAAKgH,EAAKhH,OAAS,EACxBA,IAAWgH,EAAKhH,QAAWkX,GAK3BzB,eAAaD,IAAY,WACzBA,EAAS9E,UAAUsE,IAAI,aALvBS,eAAaD,IAAY,YACzBA,EAAS9E,UAAUsE,IAAI,WAQ3BS,eAAaD,IAAY,UAAW,YAG5CnD,EAAU/I,UAAU+M,oBAAsB,SAAUW,EAAerD,EAAY3N,GAC3E,IAGIoR,EAIA5B,EAPArU,EAASkH,KAAKlJ,OAAOwF,wBAAwBqB,OAAO,SAAUC,GAC9D,OAAOA,EAAExE,WAAauV,EAAcvV,WAIpC4V,EAAchP,KAAKlJ,OAAOwF,wBAAwBoC,QAAQ5F,EAAO,IACjEmW,EAAiB9V,EAAc6G,KAAKlJ,OAAQ6X,EAAcvV,UAE9D,GAAI4V,GAAe,EAAG,CAClB,IAAIE,EAAKlP,KAAKlJ,OAAOiI,UAAUiQ,GAC3BG,OAAY,GACZnP,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,sBACtCgQ,EAAYnP,KAAKlJ,OAAOsY,qBAAqBJ,IAEjD7B,EAAW+B,EAAG1G,iBAAiB,YAAY,GAAK0G,EAAG1G,iBAAiB,YAAY,GAC1E2G,EAAU3G,iBAAiB,YAAY,GACxC1Q,oBAAkBqV,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA4B,EAAiBlB,cAAsD,kBAAxC7N,KAAKlJ,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKmW,EACZnX,oBAAkBiX,KAClBA,EAAgBJ,GAEpBI,EAAc7B,cAAgB5B,EACX,UAAfA,GAA0BxT,oBAAkB6W,EAAcL,eACrC,IAAjBU,IAAqE,IAA/ChP,KAAKiI,gBAAgBvJ,QAAQsQ,IACnDhP,KAAKiI,gBAAgBrP,KAAKoW,IAEqB,IAA/ChP,KAAKiK,cAAcvL,QAAQqQ,KAA2C,IAAjBC,IACnDlX,oBAAkBkI,KAAKlJ,OAAOoX,eAAiBlO,KAAKlJ,OAAOoX,aAAaC,eAAexW,OAAS,GAClGqI,KAAKiK,cAAcrR,KAAKmW,IAEuB,IAA/C/O,KAAKiK,cAAcvL,QAAQqQ,IAA2BjX,oBAAkBkI,KAAKlJ,OAAOoX,eACjC,IAAnDlO,KAAKlJ,OAAOoX,aAAaC,eAAexW,QACxCqI,KAAKiK,cAAcrR,KAAKmW,IAEuB,IAA/C/O,KAAKiK,cAAcvL,QAAQqQ,IAAyBjX,oBAAkBkI,KAAKlJ,OAAOoX,eAClFlO,KAAKiK,cAAcrR,KAAKmW,QAG3B,IAAoB,YAAfzD,GAA2C,kBAAfA,IAAmCxT,oBAAkB6W,EAAcL,cAAe,CACpH,IAAIhU,EAAQ0F,KAAKiK,cAAcvL,QAAQqQ,GAIvC,IAHe,IAAXzU,GACA0F,KAAKiK,cAAc5M,OAAO/C,EAAO,IAEc,IAA/C0F,KAAKiI,gBAAgBvJ,QAAQsQ,GAAqB,CAClD,IAAIK,EAAerP,KAAKiI,gBAAgBvJ,QAAQsQ,GAChDhP,KAAKiI,gBAAgB5K,OAAOgS,EAAc,IAGlD,IAAIC,EAA+B,kBAAfhE,EAAiC,SAAW,KAAOA,EACnE0D,GAAe,IACVlX,oBAAkBqV,IACnBA,EAAS9E,UAAUsE,IAAI2C,KAInCtF,EAAU/I,UAAUqJ,kBAAoB,SAAUtH,GAC9C,IAEI8G,EACAyF,EAHAlI,EAAQrH,KACRH,EAAcmD,EAAKnD,YAGvB,GAAIrI,EAAiBwI,KAAKlJ,SAClBkJ,KAAKlJ,OAAOqU,mBACZ,GAAqB,YAAhBtL,GAA6C,WAAhBA,EAA2B,CACzD,IAAIkI,EAAO/H,KAAKlJ,OAAOiB,KAAKgH,UAE5BwQ,GADAzF,EAAY9J,KAAKlJ,OAAOwF,yBACA3E,OACxBqI,KAAKiI,mBACL,IAAK,IAAIxQ,EAAI,EAAGA,EAAI8X,EAAa9X,IACxBsQ,EAAKtQ,GAAG4Q,UAAUC,SAAS,iBAC5BtI,KAAKgO,oBAAoBlE,EAAUrS,GAAIqS,EAAUrS,GAAGyV,eAAe,QAI1E,GAAoB,WAAhBrN,GAA4C,QAAhBmD,EAAKvH,OAAkB,CACxD,IAAI+T,KACgB,WAAhB3P,EACA2P,EAAcxM,EAAKrE,KAGnB6Q,EAAY5W,KAAKoK,EAAKrE,MAE1B,IAASlH,EAAI,EAAGA,EAAI+X,EAAY7X,OAAQF,IAAK,CACzC,GAAoB,WAAhBoI,EAA0B,CAC1B,IAAIvF,EAAQ0F,KAAKlJ,OAAO4G,SAASgB,QAAQ8Q,EAAY/X,IACjD4X,EAAerP,KAAKiI,gBAAgBvJ,QAAQpE,GAChD0F,KAAKiI,gBAAgB5K,OAAOgS,EAAc,GAC1CrP,KAAKgO,oBAAoBwB,EAAY/X,GAAI,WAExCK,oBAAkB0X,EAAY/X,GAAGyB,aAClC8G,KAAKiO,sBAAsBuB,EAAY/X,GAAGyB,iBAIxB,QAArB8J,EAAKnD,aAAyBG,KAAKlJ,OAAOqU,mBAC/CnI,EAAKrE,KAAKuO,cAAgB,WAEL,cAAhBrN,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DhJ,EAAamJ,KAAKlJ,WACtBkJ,KAAKiK,iBACLjK,KAAKiI,oBACL6B,GAAchS,oBAAkBkI,KAAKlJ,OAAOoX,eAAiBlO,KAAKlJ,OAAOoX,aAAaC,eAAexW,OAAS,EAC1GqI,KAAKlJ,OAAOwF,wBAA0B0D,KAAKlJ,OAAO4G,UAC5C+R,QAAQ,SAAU3W,GACpBA,EAAOW,gBACP4N,EAAM4G,sBAAsBnV,GAG5BuO,EAAM2G,oBAAoBlV,EAAQA,EAAOoU,iBAGjDlN,KAAKqL,oBAKrBrB,EAAU/I,UAAUyO,kBAAoB,WACpC,OAAO1P,KAAKiK,eAEhBD,EAAU/I,UAAU0O,qBAAuB,WACvC,OAAO3P,KAAKiI,iBAET+B,KCrbP4F,GAAuB,WAIvB,SAASA,EAAM9Y,GACXkJ,KAAKlJ,OAASA,EACd2L,OAAKC,OAAOmN,SACZ7P,KAAKkK,mBAqCT,OA/BA0F,EAAM3O,UAAU4B,cAAgB,WAC5B,MAAO,SAKX+M,EAAM3O,UAAUiJ,iBAAmB,WAC/BlK,KAAKlJ,OAAOiB,KAAKoS,GAAG2F,EAAsB9P,KAAK+P,cAAe/P,OAElE4P,EAAM3O,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAOiB,KAAK2S,IAAIoF,EAAsB9P,KAAK+P,gBAEpDH,EAAM3O,UAAU8O,cAAgB,SAAUC,GACtC,IAAIjY,EAAOY,YAAU,YAAaqX,GAC9BC,EAActX,YAAU,UAAWqX,GACvCjY,EAAKmS,iBAAiBgG,EAAsBlQ,KAAKlJ,OAAOiB,KAAKwM,eAC7DxM,EAAKmS,iBAAiBiG,EAAqBnQ,KAAKlJ,OAAOiB,KAAKuM,cAC5DvM,EAAKmS,iBAAiBkG,EAAwBpQ,KAAKlJ,OAAOiB,KAAKyM,iBAC/D6L,YAAUJ,GAAc,eAE5BL,EAAM3O,UAAUqP,MAAQ,WACpBtQ,KAAKlJ,OAAOiB,KAAKuY,SAOrBV,EAAM3O,UAAU4I,QAAU,WACtB7J,KAAKwK,uBAEFoF,KCnDPnP,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5D8O,GAAgC,SAAUxO,GAE1C,SAASwO,IACL,OAAkB,OAAXxO,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,OAnBAS,GAAU8P,EAAgBxO,GAI1BZ,IACIc,cACDsO,EAAetP,UAAW,cAAU,GACvCE,IACIc,YAAS,IACVsO,EAAetP,UAAW,kBAAc,GAC3CE,IACIc,WAAS,aACVsO,EAAetP,UAAW,gBAAY,GACzCE,IACIc,cACDsO,EAAetP,UAAW,WAAO,GACpCE,IACIc,cACDsO,EAAetP,UAAW,qBAAiB,GACvCsP,GACTrO,iBC5CEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5D+O,GAAmC,SAAUzO,GAE7C,SAASyO,IACL,OAAkB,OAAXzO,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,OAzBAS,GAAU+P,EAAmBzO,GAI7BZ,IACIc,WAAS,QACVuO,EAAkBvP,UAAW,YAAQ,GACxCE,IACIc,WAAS,SACVuO,EAAkBvP,UAAW,yBAAqB,GACrDE,IACIc,WAAS,WACVuO,EAAkBvP,UAAW,YAAQ,GACxCE,IACIc,YAAS,IACVuO,EAAkBvP,UAAW,wBAAoB,GACpDE,IACIc,WAAS,YACVuO,EAAkBvP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVuO,EAAkBvP,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVuO,EAAkBvP,UAAW,oBAAgB,GACzCuP,GACTtO,iBCzCEuO,GAAwB,WAIxB,SAASA,EAAO3Z,GACZkJ,KAAKlJ,OAASA,EACdkJ,KAAK0Q,eAAiB,KACtB1Q,KAAKlJ,OAAOiB,KAAKoS,GAAG,kBAAmBnK,KAAK2Q,qBAAsB3Q,MAClEA,KAAKlJ,OAAOiB,KAAKoS,GAAG,sBAAuBnK,KAAK4Q,oBAAqB5Q,MAmOzE,OA9NAyQ,EAAOxP,UAAU4P,YAAc,SAAU7N,GACrC,GAAKA,EAAKrE,KAAV,CAGA,IAAIA,EAAOqE,EAAKrE,KACZlB,EAAakB,EAAKzF,WAEtB,GAAKpB,oBAAkB6G,EAAKzF,aAAgBrB,EAAuBmI,KAAKlJ,SACjEkJ,KAAKlJ,OAAOga,aAA2D,SAA1C9Q,KAAKlJ,OAAOia,aAAaC,gBACpDna,EAAamJ,KAAKlJ,SAAY8C,EAAUoG,KAAKlJ,UAUzCkM,EAAKnE,IAAIsN,aAAa,qBAV8B,CACrDxN,EAAKzF,WAAWoB,OACP0F,KAAKlJ,OAAOuC,kBAAoBvB,oBAAkB2F,EAAWuC,KAAKlJ,OAAOwC,sBACtFmE,EAAWuC,KAAKlJ,OAAOwC,sBAAwB0G,KAAKlJ,OAAOma,qBAC1DpY,EAAgBmH,KAAKlJ,OAAQkM,EAAKrE,KAAMqB,KAAKlJ,OAAOiB,KAAKuE,4BAE1D0G,EAAKnE,IAAIlE,MAAMG,QAAU,QAMjC,GAAIjE,EAAamJ,KAAKlJ,UAAY8C,EAAUoG,KAAKlJ,QAAS,CACtD,IAAIoa,EAAUlR,KAAKlJ,OACfqa,EAAYnR,KAAKlJ,OAAOwF,wBAAwBqB,OAAO,SAAUmR,GACjE,OAAOvQ,WAAS2S,EAAQ9T,UAAW0R,KAASvQ,WAAS2S,EAAQ/T,gBAAiBwB,KAElF,GAAIwS,EAAUxZ,OAAS,EAAG,CACtB,IAAImD,EAAUqW,EAAU,GAAG5X,SAAW,YAAc,OACpDyJ,EAAKnE,IAAIoO,aAAa,QAAS,YAAcnS,EAAU,MAI9CnC,YAAU,eAAgBqK,EAAKrE,OAE5C0R,YAAUrN,EAAKnE,KAAM,gBAErBmE,EAAKnE,IAAIiM,cAAc,qBACvB9H,EAAKnE,IAAIoO,aAAa,gBAAiB,QAElCjK,EAAKnE,IAAIiM,cAAc,wBAC5B9H,EAAKnE,IAAIoO,aAAa,gBAAiB,SAEvCjN,KAAKlJ,OAAOma,mBAAqBjR,KAAKlJ,OAAOuC,gBACxCvB,oBAAkB6G,EAAKzF,cACxB8J,EAAKnE,IAAIlE,MAAMG,QAAU,SAGjCkF,KAAKlJ,OAAOoS,QAAQiH,EAAqBnN,KAK7CyN,EAAOxP,UAAU3B,WAAa,SAAU0D,GACpC,GAAKA,EAAKrE,KAAV,CAGA,IAEIrE,EAIA8W,EANArZ,EAAOiI,KAAKlJ,OAAOiB,KACnB4G,EAAOqE,EAAKrE,KAGZ0S,EADcvZ,oBAAkB6G,EAAK2S,aACjB3S,EAAKpE,MAAQoE,EAAK2S,YACtCC,EAAkB,EAElB5R,EAASK,KAAKlJ,OAAO0a,eAAexO,EAAKrD,OAAOqM,KAChDyF,EAAa9S,EAAK2P,aAOtB,GAFIhU,EAJCxC,oBAAkB6G,EAAKzF,YAIhByF,EAAKrE,MAHLqE,EAAKzF,WAAWoB,MAKxBvC,EAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO2I,kBACjC,QAArBuD,EAAKnD,aAA8C,WAArBmD,EAAKnD,aAA4B/H,oBAAkBkL,EAAKzD,KAAKuL,cAAc,iBAAkB,CAM/H,IAAK,IALDuC,EAAYf,gBAAc,OAASC,UAAW,2BAC9CoF,EAAkBrF,gBAAc,QAChCC,UAAW,iBACXqF,OAAQ,uCAEHC,EAAI,EAAGA,EAAIR,EAAKQ,IACrBN,GAAmB,GACnBlE,EAAUK,YAAYiE,EAAgB7E,aAE1C,IAAIgF,EAAgBha,oBAAkB6G,EAAKoT,yBACNpT,EAAKlF,gBAApCkF,EAAKoT,wBAIX,GAHID,IAAiBha,oBAAkB6G,EAAKjF,gBACxCoY,IAA8C,IAA7BnT,EAAKjF,aAAa/B,SAEnCma,EAAc,CACdzB,YAAUrN,EAAKzD,MAAO,iBACtB,IAAIyS,EAAa1F,gBAAc,QAAUC,UAAW,YAChD0F,OAAS,EAETA,EADAjS,KAAKlJ,OAAOuC,cACHsF,EAAKpF,WACTzB,oBAAkB6G,EAAKqB,KAAKlJ,OAAOwC,sBAAwBqF,EAAKqB,KAAKlJ,OAAOwC,uBAC5E0G,KAAKlJ,OAAOma,qBAGLtS,EAAKpF,WAAaV,EAAgBmH,KAAKlJ,OAAQ6H,EAAMqB,KAAKlJ,OAAOiB,KAAKuE,0BAEtF+T,YAAU2B,GAAa,EAAW,mBAAqB,sBACvDT,GAAmB,GACnBlE,EAAUK,YAAYsE,GACtBL,EAAgBhX,MAAMiS,MAAQ,MAC9B2E,GAAmB,EACnBlE,EAAUK,YAAYiE,EAAgB7E,kBAEjCuE,IAAQA,IAAQ1S,EAAKpE,SAE1BgX,GAAmB,GACnBlE,EAAUK,YAAYiE,EAAgB7E,aACtCO,EAAUK,YAAYiE,EAAgB7E,cAM1CsE,EAAc9E,gBAAc,QAAUC,UAAW,eAC7CvM,KAAKlJ,OAAOob,gBACZd,EAAYzW,MAAMiS,MAAQ,eAAiB2E,EAAkB,OAEjElB,YAAUrN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,OAChEyF,KAAKmS,eAAenP,EAAMoO,EAAa/D,GACvCA,EAAUK,YAAY0D,GACtBpO,EAAKzD,KAAKmO,YAAYL,GAU1B,GARIrN,KAAKlJ,OAAO4I,cAAgBM,KAAKlJ,OAAO2I,iBACxC1H,EAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO4I,cAAgB,EAC1E2Q,YAAUrN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,OAE3DyF,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAO2I,iBAC9C1H,EAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO4I,cAAgB,GAC1E2Q,YAAUrN,EAAKzD,MAAO,iBAAmBjF,EAAQ,QAAUqE,EAAKpE,QAE/DzC,oBAAkB6H,IAAWA,EAAO/H,eACrCoI,KAAKlJ,OAAOsb,OAAO,iBAAkBpP,GACjChD,KAAKlJ,OAAOob,eAAe,CAC3B,IAAIG,EAAkBrP,EAAKzD,KAAKiJ,iBAAiB,YAAY,GAE7D+I,GADYe,SAASD,EAAgB1X,MAAMiS,MAAO,IAElD2E,GAAmB,IAEfH,EADArZ,EAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO2I,gBAC5CuD,EAAKzD,KAAKuL,cAAc,eAGxB9H,EAAKzD,KAAKuL,cAAc,oBAE9BnQ,MAAMiS,MAAQ,eAAiB2E,EAAkB,MAGrE,GAAIE,EAAY,CACZpB,YAAUrN,EAAKzD,MAAO,iBACtB,IAAIgT,EAAc5Z,YAAUqK,EAAKrD,OAAOyE,MAAOpB,EAAKrE,MACV,MAA1CqE,EAAKzD,KAAKuL,cAAc,eACpB9H,EAAKzD,KAAKuL,cAAc,eAAe0C,UAAY+E,EAAcvP,EAAKzD,KAAKiO,UAAY+E,EAE3Fza,oBAAkBkI,KAAKlJ,OAAO0b,cAC9BxS,KAAKlJ,OAAOoS,QAAQgH,EAAsBlN,KAGlDyN,EAAOxP,UAAUkR,eAAiB,SAAUnP,EAAMoO,EAAa/D,GAC3D,IAAIoF,EAAazS,KAAKlJ,OAAOY,QAAQsI,KAAKlJ,OAAO2I,iBAC7CiT,EAAa,aACbD,EAAWrO,QAAUpB,EAAKrD,OAAOyE,OAAUtM,oBAAkB2a,EAAWE,YACxE3P,EAAKrD,OAAOgT,SAAWF,EAAWE,SAClC3P,EAAKrD,OAAO+S,GAAcE,mBAAiB5P,EAAKrD,OAAOgT,UACvD3P,EAAKzD,KAAK8I,UAAUsE,IAAI,mBAE5B,IAAIkG,EAAwD,MAA1C7P,EAAKzD,KAAKuL,cAAc,eACtC9H,EAAKzD,KAAKuL,cAAc,eAAe0C,UAAYxK,EAAKzD,KAAKiO,UACjE,GAAsC,iBAA1BxK,EAAKrD,OAAe,UAAkBK,KAAK0Q,eACnDoC,iBAAe1B,EAAapR,KAAK0Q,gBACjC1Q,KAAK0Q,eAAiB,KACtB1N,EAAKzD,KAAKiO,UAAY,QAErB,GAAIxK,EAAKzD,KAAK8I,UAAUC,SAAS,kBAAmB,CACrD,IAAI9P,EAAMwK,EAAKzD,KAAKwT,SAASpb,OACzBqb,EAAShT,KAAKlJ,OAAOmc,QAAQC,GAAKlQ,EAAKrD,OAAOqM,IAClD,GAAIyG,EAAWrO,QAAUpB,EAAKrD,OAAOyE,OAAUtM,oBAAkB2a,EAAWE,UAqBxE,KAAa,EAAOna,EAAKA,EAAMwK,EAAKzD,KAAKwT,SAASpb,OAC9CyZ,EAAY1D,YAAY1K,EAAKzD,KAAKwT,SADzB,QArBsE,CAGnF,GAAI/S,KAAKlJ,OAAOqc,QACZnQ,EAAKrD,OAAO+S,GAAY1P,EAAKrE,KAAMqB,KAAKlJ,OAAQ,WAAYkc,EAAQ,KAAM,KAAM5B,GAC5EtZ,oBAAkBkI,KAAKlJ,OAAOiB,KAAY,WAC1CiI,KAAKlJ,OAAOiB,KAAY,QAAIiI,KAAKlJ,OAAc,SAEnDkJ,KAAKlJ,OAA2B,2BAE/B,CACD,IACIsc,OAAS,EACbA,EAASpQ,EAAKrD,OAAO+S,GAAYnW,UAASjC,MAAS,IAAM0I,EAAKrE,MAAOqB,KAAKlJ,OAAQ,WAAYkc,EAAQhT,KAAKlJ,OAAU,kBACrHgc,iBAAe1B,EAAagC,UAEzBpQ,EAAKrD,OAAOgT,gBACZ3P,EAAKrD,OAAO+S,GACnB1P,EAAKzD,KAAKiO,UAAY,SAS1B4D,EAAY5D,UAAYqF,EACxB7P,EAAKzD,KAAKiO,UAAY,IAG9BiD,EAAOxP,UAAU0P,qBAAuB,SAAU3N,GAC9ChD,KAAK0Q,eAAiB1N,EAAK2P,UAE/BlC,EAAOxP,UAAU2P,oBAAsB,SAAU5N,GAG7ChD,KAAKlJ,OAAc,QAAIkM,EACvBhD,KAAKlJ,OAAOsb,OAAO,sBAAuBpS,KAAKlJ,OAAc,SAC7DkJ,KAAKlJ,OAA2B,wBAEpC2Z,EAAOxP,UAAU4I,QAAU,WACvB7J,KAAKlJ,OAAOiB,KAAK2S,IAAI,kBAAmB1K,KAAK2Q,sBAC7C3Q,KAAKlJ,OAAOiB,KAAK2S,IAAI,sBAAuB1K,KAAK4Q,sBAE9CH,KC1OP4C,GAAkC,WAClC,SAASA,EAAiBtb,GACtBiI,KAAKsT,aAAe,eACpBtT,KAAKlJ,OAASiB,EACdiI,KAAKuT,eACLvT,KAAKwT,WACLxT,KAAKyT,iBACLzT,KAAK0T,aAAe,EACpB1T,KAAK2T,cACL3T,KAAK4T,cAAe,EACpB5T,KAAKkK,mBACLlK,KAAK6T,eACL7T,KAAK7E,iBAAmBrD,oBAAkBkI,KAAKlJ,OAAOqG,iBAuhB1D,OAlhBAkW,EAAiBpS,UAAUiJ,iBAAmB,WAC1ClK,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAK8T,uBAAwB9T,MACjEA,KAAKlJ,OAAOiB,KAAKoS,GAAG,gBAAiBnK,KAAK+T,aAAc/T,MACxDA,KAAKlJ,OAAOqT,GAAG,eAAgBnK,KAAKgU,WAAYhU,MAChDA,KAAKlJ,OAAOqT,GAAG8J,EAAqBjU,KAAKkU,qBAAsBlU,MAC/DA,KAAKlJ,OAAOqT,GAAG,gBAAiBnK,KAAKmU,cAAenU,OAKxDqT,EAAiBpS,UAAUuJ,oBAAsB,WACzCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAIuJ,EAAqBjU,KAAKkU,sBAC1ClU,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAK8T,wBAC1C9T,KAAKlJ,OAAO4T,IAAI,eAAgB1K,KAAKgU,YACrChU,KAAKlJ,OAAO4T,IAAI,gBAAiB1K,KAAKmU,eACtCnU,KAAKlJ,OAAOiB,KAAK2S,IAAI,gBAAiB1K,KAAK+T,gBAO/CV,EAAiBpS,UAAU4I,QAAU,WACjC7J,KAAKwK,uBAGT6I,EAAiBpS,UAAUmT,SAAW,WAClC,OAAMpU,KAAKlJ,OAAOC,sBAAsBC,eAW5Cqc,EAAiBpS,UAAUoT,kBAAoB,SAAU1V,GACrD,IAAI0I,EAAQrH,KACZA,KAAKlJ,OAAO4G,SAAyC,IAA7BjF,OAAOC,KAAKiG,GAAMhH,QAAkBqI,KAAKlJ,OAAOC,sBAAsBC,iBAC1FgJ,KAAKlJ,OAAOC,WAChBiJ,KAAKlJ,OAAO2G,cAEZ,GAAK5G,EAAamJ,KAAKlJ,UAAY8C,EAAUoG,KAAKlJ,SAAY6H,aAAgB3H,iBAAiB2H,aAAgB9B,OAAQ,CACnH,IAAIhD,EAAKmG,KAAKlJ,OAAOC,WACrB,GAAIiJ,KAAKlJ,OAAOqG,gBAAiB,CAG7B,GAFA6C,KAAKlJ,OAAOwd,MAAQxc,oBAAkBkI,KAAKlJ,OAAOwd,OAC9C,IAAIC,QAAUvU,KAAKlJ,OAAOwd,MAC1BtU,KAAKlJ,OAAOqG,gBAAiB,CAC7B,IAAIqX,EAAYxU,KAAKlJ,OAAOwd,MAAMG,OAAO9W,OAAO,SAAU+W,GAAS,MAAqB,cAAdA,EAAMzc,MAC5E+H,KAAKlJ,OAAOuC,gBAAkBmb,EAAU7c,SACxCqI,KAAKlJ,OAAOwd,MAAMK,MAAM3U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAC9D6C,KAAKlJ,OAAOwd,MAAMM,UAAU,YAAa5U,KAAKlJ,OAAOsG,YAI7D,IAAK4C,KAAKlJ,OAAO+d,kBAA6D,kBAAxC7U,KAAKlJ,OAAOC,WAAsB,aAA0BiJ,KAAKlJ,OAAmB,gBAAI,CAC1H,IAAIge,EAAM9U,KAAKlJ,OAAOwd,MAAMS,QAC5BD,EAAIE,YACJF,EAAMA,EAAIvL,QAAQvJ,KAAKlJ,OAAOqG,mBAC1B5F,iBAAkB,EACtBsC,EAAGob,aAAaH,GAAKI,KAAK,SAAUtX,GAChCyJ,EAAMkM,YAAc4B,WAASC,SAASxX,EAAEwV,OAAQ/L,EAAMvQ,OAAOqG,iBAAiB,GAIlE,IAHFxE,YAAU,sBAAuB0O,EAAMvQ,QAAQ6G,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAEyX,YAAYC,aACtB3d,SAEC4d,WAAS,+BAA+B,EAAMlO,EAAMvQ,QAC/CgB,oBAAkBuP,EAAMmO,mBACzBD,WAAS,UAAU,EAAOlO,EAAMmO,iBAChCjX,WAAS,oBAAqB8I,EAAMvQ,QAAQ2e,mBAAmBpO,EAAMmO,iBACrEnO,EAAMmO,gBAAkB,MAE5BnO,EAAMvQ,OAAOiB,KAAK2d,wBAM7B/W,aAAgB9B,OACrBmD,KAAK2V,gBAAgBhX,IAG7B0U,EAAiBpS,UAAU0U,gBAAkB,SAAUhX,GAGnD,GAFAqB,KAAKyT,iBACLzT,KAAKwT,WACAxT,KAAKlJ,OAAOsG,UAIb,IAAK,IAAI3F,EAAI,EAAGA,EAAIgB,OAAOC,KAAKiG,GAAMhH,OAAQF,IAAK,CAC/C,IAAIme,EAAWjX,EAAKlH,GACpBuI,KAAKyT,cAAc7a,KAAK2D,YAAWqZ,IAC9B9d,oBAAkB8d,EAAS5V,KAAKlJ,OAAOsG,aACxC4C,KAAKwT,QAAQ5a,KAAKgd,EAAS5V,KAAKlJ,OAAOsG,iBAP/C4C,KAAKyT,cAAgB9U,EAWzB,GAAIqB,KAAK7E,gBAAiB,CAIjB,IAHD0a,KACAC,EAAc,IAAI9e,cAAYgJ,KAAKyT,eAAesC,cAAa,IAAIxB,SAClEyB,MAAMhW,KAAKlJ,OAAOqG,kBACvB,IAAS1F,EAAI,EAAGA,EAAIqe,EAAYne,OAAQF,IAAK,CACzC,IAAIwe,EAAYH,EAAYre,GACxB6C,EAAQ0F,KAAKwT,QAAQ9U,QAAQuX,EAAUhe,KAC3C,IAAKH,oBAAkBme,EAAUhe,MACzBqC,GAAS,EADjB,CAEQ,IAAIwP,EAAamM,EAAe,MAChCjW,KAAKyT,cAAcnZ,GAAO0F,KAAKlJ,OAAOwG,cAAgBwM,OAI9D+L,EAASjd,KAAKoJ,MAAM6T,EAAUI,EAAUC,OAE5ClW,KAAKyT,cAAgBzT,KAAKmW,oBAAoBN,GAElD,GAAKpd,OAAOC,KAAKsH,KAAKyT,eAAe9b,OAMjCqI,KAAKoW,cAAcpW,KAAKyT,mBANiB,CACzC,IACI4C,IAAkBrW,KAAKlJ,OAAOC,sBAAsBC,gBAAgBgJ,KAAKlJ,OAAc,QAC3FkJ,KAAKlJ,OAAO4G,SAAW2Y,EAAiBrW,KAAKlJ,OAAiB,cAKlEkJ,KAAK0T,aAAe,GAYxBL,EAAiBpS,UAAUkV,oBAAsB,SAAUN,GAEvD,IADA,IAAIzC,KACGpT,KAAKyT,cAAc9b,OAAS,GAAKke,EAASle,OAAS,GAAG,CACzD,IAAI2C,EAAQub,EAASnX,QAAQsB,KAAKyT,cAAc,KACjC,IAAXnZ,EACA0F,KAAKyT,cAAc6C,SAGnBlD,EAAOxa,KAAKoH,KAAKyT,cAAc6C,SAC/BT,EAASxY,OAAO/C,EAAO,IAG/B,OAAO8Y,GAMXC,EAAiBpS,UAAU6S,uBAAyB,SAAU9Q,GAC1D,IAAI1K,EAAU0K,EAAKoQ,OACfmD,EAAc,cACdC,EAAe,iBACnB,GAAKxW,KAAKlJ,OAAO+d,iBAAoB7U,KAAKuT,YAAY5b,QACP,kBAAxCqI,KAAKlJ,OAAOC,WAAWwf,KAAqCvW,KAAKlJ,OAAO0f,IAAmBxW,KAAKlJ,OAAO2f,kBAK1G,GAA8C,kBAAxCzW,KAAKlJ,OAAOC,WAAWwf,KAAqCvW,KAAKlJ,OAAO0f,IAAmBxW,KAAKlJ,OAAO2f,kBAgBpG3e,oBAAkBQ,IACnB0H,KAAKqU,kBAAkB/b,QAhB3B,IAAK,IAAIwW,EAAM,EAAGA,EAAMxW,EAAQX,OAAQmX,IAChChX,oBAAkBQ,EAAQwW,GAAKxU,SAC/BhC,EAAQwW,GAAK/R,SAAWR,YAAWjE,EAAQwW,IAC3CxW,EAAQwW,GAAK1V,SAAWsd,SAAO1W,KAAKlJ,OAAOmc,QAAQC,GAAK,UACxDqC,WAAS,sBAAwBjd,EAAQwW,GAAK1V,SAAUd,EAAQwW,GAAM9O,KAAKlJ,QAC3EwB,EAAQwW,GAAKvU,MAAQ,EACrBjC,EAAQwW,GAAKxU,MAAQqc,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bve,EAAQwW,GAAK9O,KAAKlJ,OAAO+d,mBAAuF,IAAnE7U,KAAKuT,YAAY7U,QAAQpG,EAAQwW,GAAK9O,KAAKlJ,OAAOsG,eAChG9E,EAAQwW,GAAKrV,iBAAkB,GAEnCnB,EAAQwW,GAAK5B,cAAgB,gBAfzClN,KAAKwV,gBAAkBxS,EACvBuS,WAAS,UAAU,EAAMvS,GAwB7BA,EAAKoQ,OAAkD,kBAAxCpT,KAAKlJ,OAAOC,WAAWwf,KAAqCvW,KAAKlJ,OAAO0f,KAAkB1e,oBAAkBQ,IACpH0H,KAAKlJ,OAAO2f,kBAAoBzW,KAAKlJ,OAAO4G,SAAWpF,EAC9D0H,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,IAMxCqQ,EAAiBpS,UAAUiT,qBAAuB,SAAU4C,EAAYC,GACpE,IAAIC,EAAWhX,KAAKlJ,OAAOiI,UAC3B,GAAIiB,KAAKlJ,OAAO0b,YAAa,CACzB,IAAIzK,EAAO/H,KAAKlJ,OAAOmgB,kBAAkBlP,KACzCiP,KAAczO,MAAM3F,KAAKmF,GAE7B,IAAI0G,EAGJ,GAAIqI,EAAW/O,KAAKpQ,OAAS,EAAG,CACvBof,IACDD,EAAWhe,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAIqf,EAAW/O,KAAKpQ,OAAQF,IAAK,CAQ7C,GAPIoW,cAAc7N,KAAKlJ,OAAOogB,kBAC1B9J,eAAa0J,EAAW/O,KAAKtQ,IAAK,sBAClC4Y,YAAUyG,EAAW/O,KAAKtQ,IAAK,sBAG/Bqf,EAAW/O,KAAKtQ,GAAGkD,MAAMG,QAAU,YAElC+S,cAAuD,kBAAxC7N,KAAKlJ,OAAOC,WAAsB,cAA0BiJ,KAAKlJ,OAAmB,gBACjGkJ,KAAKlJ,OAAO2f,kBAAmB,CAClC,IAAIU,EAAYL,EAAW/O,KAAKtQ,GAAG2f,uBAAuB,sBAAsB,GAChF3I,EAAczO,KAAKlJ,OAAO0b,YAAcxS,KAAKlJ,OAAOiB,KAAKuE,wBAAwBwa,EAAW/O,KAAKtQ,GAAGkS,UAChG3J,KAAKlJ,OAAOiB,KAAKsf,oBAAoBP,EAAW/O,KAAKtQ,GAAG0U,aAAa,aAAaxN,MACjF7G,oBAAkBqf,IAAc1I,EAAYlV,WAC7C8W,YAAU8G,GAAY,oBACtB/J,eAAa+J,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASrZ,OAAO,SAAU8D,GAClC,OAAOA,EAAEqJ,cAAc,kBAAoB2D,EAAYnU,MAAQ,SAAWmU,EAAYlU,MAAQ,OAEpF5C,QAAU8W,EAAYlV,UAChCyG,KAAKkU,sBAAuBpb,OAAQ2V,EAAa1G,KAAMuP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAW/O,KAAKtQ,GAAGqT,cAAc,wBAC9ChT,oBAAkB0f,IACnBxX,KAAKlJ,OAAOiB,KAAK0f,gBAAgBxF,OAAOuF,SAKhDxX,KAAK0X,sBAAuB5e,OAAQge,EAAWhe,OAAQiP,KAAM+O,EAAW/O,KAAMwP,UAAWT,EAAWS,aAG5GlE,EAAiBpS,UAAUyW,qBAAuB,SAAUZ,EAAYC,GACpE,IAAI1P,EAAQrH,KACRgD,GAASnE,IAAKiY,EAAWS,UAAW5Y,KAAMmY,EAAWhe,QACrDe,EAAKmG,KAAKlJ,OAAOC,WACjB+d,EAAM9U,KAAKlJ,OAAOiB,KAAK4f,gBAAgBC,gBACvCC,EAAc/C,EAAIE,QAAQrX,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEka,IAA4B,YAATla,EAAEka,KAClFhD,EAAIE,QAAU6C,EACd/C,EAAIvd,iBAAkB,EACtBud,EAAIH,MAAM3U,KAAKlJ,OAAOqG,gBAAiB,QAAS2Z,EAAWhe,OAAOkH,KAAKlJ,OAAOsG,YAC9E2a,cAAY/X,KAAKlJ,OAAOmc,SACxBpZ,EAAGob,aAAaH,GAAKI,KAAK,SAAUtX,GAChC,IAAIrF,EAAQ8O,EAAMvQ,OAAOiB,KAAKigB,gBAC1BC,EAAM1f,EAAMmG,QAAQoY,EAAWhe,QAC/Bof,EAAYvf,YAAU,mBAAoBiF,GAC1CwV,EAASxV,EAAEwV,OACf0D,EAAWhe,OAAOY,aAAe0Z,EACjC,IAAK,IAAI3R,EAAI,EAAGA,EAAI2R,EAAOzb,OAAQ8J,IAAK,CACpC2R,EAAO3R,GAAG1E,SAAWR,YAAW6W,EAAO3R,IACvC2R,EAAO3R,GAAGlH,MAAQuc,EAAWhe,OAAOyB,MAAQ,EAC5C6Y,EAAO3R,GAAGnH,MAAQqc,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAIpZ,EAAalB,YAAWua,EAAWhe,eAChC2E,EAAW/D,aAClB0Z,EAAO3R,GAAGvI,WAAauE,EACvB2V,EAAO3R,GAAGjD,eAAiBsY,EAAWhe,OAAOM,SAC7Cga,EAAO3R,GAAGrI,SAAWsd,SAAOrP,EAAMvQ,OAAOmc,QAAQC,GAAK,UACtDE,EAAO3R,GAAGyL,cAAgB,UAC1BqI,WAAS,sBAAwBnC,EAAO3R,GAAGrI,SAAUga,EAAO3R,GAAI4F,EAAMvQ,SAEjEsc,EAAO3R,GAAG4F,EAAMvQ,OAAO+d,mBAAsF,IAAlExN,EAAMkM,YAAY7U,QAAQ0U,EAAO3R,GAAG4F,EAAMvQ,OAAOsG,aACxF8a,IAAcA,EAAUzW,KAC7B2R,EAAO3R,GAAGhI,iBAAkB,EAC5B2Z,EAAO3R,GAAGlI,UAAW,GAEzBhB,EAAM8E,OAAO4a,EAAMxW,EAAI,EAAG,EAAG2R,EAAO3R,IAMxC,GAJA8T,WAAS,SAAUhd,EAAOqF,GAC1B2X,WAAS,SAAU,sBAAuB3X,GAC1CyJ,EAAMvQ,OAAOoS,QAAQiP,EAAuBva,GAC5C8X,cAAYrO,EAAMvQ,OAAOmc,SACrB5L,EAAMvQ,OAAOiB,KAAKqgB,WAAWzgB,OAAS,IAAM0P,EAAMvQ,OAAOwH,qBAAsB,CAC/E,IAAI+Z,EAAY1f,YAAU,QAASiF,GAKnC,GAHI9F,oBAAkBugB,KAClBA,EAAY9Z,WAAS,yBAA0B8I,EAAMvQ,QAAQwhB,eAAe,IAAI/D,WAE/Ezc,oBAAkBugB,GAAY,CAC/B,IAAIE,EAAeF,EAAUrD,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEV,KACpEla,EAAU,OAAIyJ,EAAMvQ,OAAO2hB,cAAcC,sBAAsBH,EAAc3a,EAAU,QAAG,IAGlGA,EAAEyQ,MAAQhH,EAAMvQ,OAAOiB,KAAKgZ,aAAa4H,kBACzC,IAAIC,KACAvR,EAAMvQ,OAAOwH,sBACb+I,EAAMwR,oBAAoBD,GAE9Bra,WAAS,oBAAqB8I,EAAMvQ,QAAQ2e,mBAAmB7X,EAAGgb,GAClEvR,EAAMvQ,OAAOoS,QAAQ4P,EAAiB9V,MAG9CqQ,EAAiBpS,UAAU4X,oBAAsB,SAAUD,GACvDA,EAAY/Y,YAAc,UAC1B0V,WAAS,oBAAoB,EAAMqD,GACnC,IAAIG,EAAgBxa,WAAS,qBAAsByB,KAAKlJ,QACpDkiB,EAAcza,WAAS,cAAewa,GACtCE,EAAW1a,WAAS,WAAYwa,GAChCC,EAAYE,UAAYlZ,KAAKlJ,OAAOiB,KAAKgZ,aAAaoI,cAAgBH,EAAYI,SAASC,OAC3FrZ,KAAKlJ,OAAOiB,KAAKgZ,aAAaoI,YAAcF,EAASI,OAG7DhG,EAAiBpS,UAAU8S,aAAe,WACtC/T,KAAK4T,cAAe,GAExBP,EAAiBpS,UAAUmV,cAAgB,SAAUzX,EAAM2a,GAEvD,IAAK,IADDC,KACK9hB,EAAI,EAAGe,EAAMC,OAAOC,KAAKiG,GAAMhH,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAI+hB,EAAcjd,YAAWoC,EAAKlH,IAClC+hB,EAAYzc,SAAW4B,EAAKlH,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBAyF,KAAK0T,cACA8F,EAAYvc,eAAe,WAC5Buc,EAAYlf,MAAQ0F,KAAK0T,eAExB5b,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOwG,gBAC1Ckc,EAAYxZ,KAAKlJ,OAAO+d,kBAAoBtd,EAAgByI,KAAKlJ,WAClE0iB,EAAY/f,iBAAkB,EAC1BuG,KAAKlJ,OAAOma,oBAAsBnZ,oBAAkBkI,KAAKlJ,OAAO4N,kBAC7D5M,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOwG,eAC7Ckc,EAAYjgB,UAAW,EAGvBigB,EAAYjgB,WAAYzB,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOwC,sBAC5DkgB,EAAYxZ,KAAKlJ,OAAOwC,qBAGjCkgB,EAAYvc,eAAe,WAC5Buc,EAAYlf,OAAQkf,EAAY/f,gBAAkBuG,KAAK0T,cAEvD1T,KAAK7E,iBAAmBrD,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOqG,mBAClE6C,KAAKlJ,OAAO2G,WAAW7E,KAAK4gB,GAEhCA,EAAYpgB,SAAWsd,SAAO1W,KAAKlJ,OAAOmc,QAAQC,GAAK,UACvDqC,WAAS,sBAAwBiE,EAAYpgB,SAAUogB,EAAaxZ,KAAKlJ,SACpEgB,oBAAkBwhB,GAAgB,CACnC,IAAI7b,EAAalB,YAAW+c,UACrB7b,EAAW/D,oBACX+D,EAAWuC,KAAKlJ,OAAOwG,cAC1B0C,KAAK7E,wBACEsC,EAAWV,SAASiD,KAAKlJ,OAAOwG,cAE3Ckc,EAAYtgB,WAAauE,EACzB+b,EAAYhb,eAAiBf,EAAWrE,SACxCmB,EAAQ+e,EAAc/e,MAAQ,EAYlC,GAVKif,EAAYvc,eAAe,WAC5Buc,EAAYjf,MAAQA,GAExBif,EAAYtM,cAAgB,WACxBpV,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOqG,mBAAqBqc,EAAYtgB,aAC3E8G,KAAKlJ,OAAO4G,SAAS9E,KAAK4gB,GAEzBxZ,KAAK7E,iBAAyC,IAAtBqe,EAAYjf,OACrCyF,KAAKlJ,OAAO2G,WAAW7E,KAAK4gB,IAE3B1hB,oBAAkB0hB,EAAYxZ,KAAKlJ,OAAOwG,eAAiBkc,EAAYxZ,KAAKlJ,OAAOwG,cAAc3F,QAAS,CAC3G,IAAImB,EAASkH,KAAKoW,cAAcoD,EAAYxZ,KAAKlJ,OAAOwG,cAAekc,GACvEA,EAAY9f,aAAeZ,EAE/BygB,EAAa3gB,KAAK4gB,GAEtB,OAAOD,GAMXlG,EAAiBpS,UAAUkT,cAAgB,SAAUnR,GACjD,IAIIyW,EAJAC,EAAW/gB,YAAU,WAAYqK,GACjC2W,EAAahhB,YAAU,aAAcqK,GACrC4W,EAAajhB,YAAU,aAAcqK,GACrC6W,EAAalhB,YAAU,aAAcqK,GAErC8W,EAAanhB,YAAU,aAAcqK,GACrCnD,EAAclH,YAAU,cAAeqK,GACvC+W,EAAaphB,YAAU,OAAQqK,GAC/BvH,EAAS9C,YAAU,SAAUqK,GAC7BgX,EAAgBF,EAChBG,EAAuBja,KAAKlJ,OAAO4E,0BAA0B,GAC7Dwe,EAAYvhB,YAAU,OAAQqhB,GAC5BliB,oBAAkBkiB,IAAqBliB,oBAAkBkiB,EAAcve,SAAsC,QAAzBue,EAAcve,QAC/F3D,oBAAkBkiB,EAAcrb,QAAU7G,oBAAkBkiB,EAAcrb,KAAKsb,MACpFD,EAAcrb,KAAKsb,GAAwBjX,EAAKoQ,OAAO4G,EAAc1f,OAAO2f,GAC5EC,EAAUnd,SAASkd,GAAwBjX,EAAKoQ,OAAO4G,EAAc1f,OAAO2f,MAE1EniB,oBAAkBgiB,IAAerhB,OAAOC,KAAKohB,GAAYniB,QAA2B,SAAhBkI,KACtEA,EAAcA,GAA4Bia,EAAWja,YACrDka,EAAaA,GAA0BphB,YAAU,OAAQmhB,GACzDre,EAASA,GAAkB9C,YAAU,SAAUmhB,GACT,UAAlC9Z,KAAKlJ,OAAOkF,aAAaC,OACzB+D,KAAKxE,aAAewE,KAAKlJ,OAAOiB,KAAKmE,WAAWC,oBAErC,QAAXV,GAAqC,cAAhBoE,GAAkE,UAAlCG,KAAKlJ,OAAOkF,aAAaC,MAC3E+D,KAAKxE,aAAawE,KAAKsT,cAAc3b,UACxCqI,KAAKlJ,OAAOiB,KAAKigB,gBAAkBhV,EAAKoQ,QAExCpT,KAAKlJ,OAAOqjB,aACZna,KAAKoa,aAAaL,EAAYte,EAAQoE,IAU9C,IAAIwa,GANAZ,EADAC,IAAa5hB,oBAAkB6hB,GACrBA,EAGApiB,EAAgByI,KAAKlJ,QAAUyH,WAAS,SAAUyB,KAAKlJ,OAAOiB,KAAKhB,YACvEiJ,KAAKlJ,OAAOiB,KAAKhB,sBAEMC,cAAcyiB,EAAQ1iB,WAAW6E,KAAO6d,EACrEpL,EAAQ9W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YACnEsjB,EAAQ1iB,OACd,GAAKqI,KAAKlJ,OAAOiB,KAAKI,gBAAkB6H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3EqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,IAAImd,EAAM,IAAIP,QACV8D,EAAY1f,YAAU,QAASqK,GAC/BlL,oBAAkBugB,KAClBA,EAAY,IAAI9D,QAChB8D,EAAY9Z,WAAS,yBAA0ByB,KAAKlJ,QAAQwjB,YAAYjC,GACxEA,EAAY9Z,WAAS,yBAA0ByB,KAAKlJ,QAAQyjB,YAAYlC,IAE5E,IAAImC,EAAYnC,EAAUrD,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,YAATA,EAAEV,KAC7D2C,EAAYpC,EAAUrD,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,aAATA,EAAEV,KACjEhD,EAAIE,QAAUwF,EAAU7gB,OAAO8gB,GAC/B,IAAIC,EAAe,IAAI1jB,cAAYqjB,GAAStE,aAAajB,GAIzD,GAHA9U,KAAKlJ,OAAOsb,OAAO,oBAAsBzT,KAAM+b,IAC/CL,EAAUra,KAAK6T,YAAYT,OAC3BpT,KAAK6T,YAAYT,OAAS,KACtBpT,KAAKlJ,OAAOiB,KAAKqgB,WAAWzgB,OAAS,EAAG,CACxC,IAAI2c,EAAQ3b,YAAU,QAASqK,GAI/B,GAHIlL,oBAAkBugB,KAClBA,EAAY9Z,WAAS,yBAA0ByB,KAAKlJ,QAAQwhB,eAAe,IAAI/D,WAE9Ezc,oBAAkBwc,GAAQ,CAC3B,IAAIiE,EAAejE,EAAMU,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEV,KAChEuC,EAAUra,KAAKlJ,OAAO2hB,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAIra,KAAKlJ,OAAOiB,KAAKqgB,WAAWzgB,QAA2D,IAAjDqI,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,QACtB,IAAnDqI,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiBqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpG0gB,EAAY1f,YAAU,QAASqK,GAC/BlL,oBAAkBugB,KAClBA,EAAY9Z,WAAS,yBAA0ByB,KAAKlJ,QAAQwhB,eAAe,IAAI/D,UAE/EgE,EAAeF,EAAUrD,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEV,KACpEuC,EAAUra,KAAKlJ,OAAO2hB,cAAcC,sBAAsBH,EAAcvY,KAAKlJ,OAAO4G,UAAU,GAElG,GAAIsC,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,OAAS,GAAKqI,KAAK4T,aAAc,CACvE5T,KAAK4T,cAAe,EACpB,IAAInW,OAAa,EACjBA,EAEauC,KAAKlJ,OAAO2G,WAErB6W,EAAQ3b,YAAU,QAASqK,GAE/B,IAAK,IADD2X,EAAS,IAAIpG,QACRqG,EAAM5a,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQC,OAAS,EAAGijB,GAAO,EAAGA,IAAO,CAC9E,IAAI7O,EAAM/L,KAAKlJ,OAAOiB,KAAK8iB,iBAAiB7a,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQkjB,GAAKxW,OACnF0W,EAAU/O,EAAIgP,cAAgBnhB,EAAUoG,KAAKlJ,QAC7CiV,EAAIgP,aAAaC,KAAKjP,GACtB/L,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQkjB,GAAKK,UAC/CN,EAAOO,OAAOlb,KAAKlJ,OAAOiB,KAAK0G,aAAa/G,QAAQkjB,GAAKxW,MAAO0W,GAEpE,IAEIK,GAAatf,aAFE,IAAI7E,cAAYyG,GAAYsY,aAAa4E,GAEfD,aAAcL,EAASM,OAAQA,GAM5E,GALA3a,KAAKlJ,OAAOsb,OAAO,aAAc+I,GACjCd,EAAUc,EAAStf,aACnBmE,KAAK6T,YAAYT,OAAS,KAC1BpT,KAAK2T,WAAa0G,EAClBra,KAAKlJ,OAAOsb,OAAO,kBACfpS,KAAKlJ,OAAOiB,KAAKqgB,WAAWzgB,OAAS,IAAMG,oBAAkBwc,GAAQ,CAGjEiE,EADU5f,YAAU,QAASqK,GACNgS,QAAQrX,OAAO,SAAU6a,GAAK,MAAgB,iBAATA,EAAEV,KAClEuC,EAAUra,KAAKlJ,OAAO2hB,cAAcC,sBAAsBH,EAAcvY,KAAK2T,YAHhE,IAMrBtF,EAAQ9W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YAC/DsjB,EAAQ1iB,OACd,IAAIyjB,EAAOpb,KAAKqb,OAAOhB,EAAShM,EAAOqL,EAAUG,EAAYD,EAAY5W,GACzEqX,EAAUe,EAAKhI,OACf/E,EAAQ+M,EAAK/M,MACbrL,EAAKoQ,OAASiH,EACdrX,EAAKqL,MAAQA,EACbrO,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,IAExCqQ,EAAiBpS,UAAUoa,OAAS,SAAUhB,EAAShM,EAAOqL,EAAUG,EAAYD,EAAY5W,IACxFhD,KAAKlJ,OAAOga,aAAiB4I,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1B7Z,KAAKlJ,OAAOwkB,WAM1Btb,KAAKlJ,OAAOwH,sBAA0Bob,GAA2B,gBAAfE,GAClB,SAAlCrb,WAAS,cAAeyE,KAC3BhD,KAAKlJ,OAAOsb,OAAOmJ,GAAwBnI,OAAQiH,EAAShM,MAAOA,EAAOyL,WAAYvb,WAAS,aAAcyE,KAC7GqX,EAAUra,KAAK6T,YAAYT,OAC3B/E,EAAQrO,KAAK6T,YAAYxF,QATzBrO,KAAKlJ,OAAOsb,OAAOmJ,GAAwBnI,OAAQiH,EAAShM,MAAOA,IACnEgM,EAAUra,KAAK6T,YAAYT,OAC3B/E,EAAQ9W,EAAgByI,KAAKlJ,QAAUyH,WAAS,QAASyB,KAAKlJ,OAAOC,YAC/DiJ,KAAK6T,YAAYxF,OAS3B,OADc+E,OAAQiH,EAAShM,MAAOA,IAM1CgF,EAAiBpS,UAAU+S,WAAa,SAAUwH,GAC9Cxb,KAAK6T,YAAc2H,GAEvBnI,EAAiBpS,UAAUmZ,aAAe,SAAUL,EAAYte,EAAQoE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKlJ,OAAOsb,OAAOqJ,IAAqBphB,MAAO0f,EAAYte,OAAQA,GAAUoE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKlJ,OAAOkF,aAAaC,MACxD+D,KAAKlJ,OAAOsb,OAAOsJ,QAGpBrI,MCxiBX,SAAWsI,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC3CxB,IAAInb,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Doa,GAA8B,SAAU9Z,GAExC,SAAS8Z,IACL,OAAkB,OAAX9Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,GAAUob,EAAc9Z,GAIxBZ,IACIc,WAAS,KACV4Z,EAAa5a,UAAW,gBAAY,GACvCE,IACIc,WAAS,IACV4Z,EAAa5a,UAAW,iBAAa,GACxCE,IACIc,WAAS,IACV4Z,EAAa5a,UAAW,mBAAe,GAC1CE,IACIc,cACD4Z,EAAa5a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,iBAAa,GACxCE,IACIc,WAAS,OACV4Z,EAAa5a,UAAW,gBAAY,GACvCE,IACIc,WAAS,QACV4Z,EAAa5a,UAAW,oBAAgB,GACpC4a,GACT3Z,iBCrDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAQ5Dqa,GAAiC,SAAU/Z,GAE3C,SAAS+Z,IACL,IAAIzU,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAGhE,OAFAqH,EAAM0U,KAAO,IAAIC,uBACjB3U,EAAMqL,cACCrL,EAmEX,OAxEA5G,GAAUqb,EAAiB/Z,GAU3B+Z,EAAgB7a,UAAUgb,aAAe,SAAUC,GAC3Clc,KAAKmc,SAAWnc,KAAKmc,OAAOC,UAAYpc,KAAKmc,OAAOA,UACpDnc,KAAKqc,SAAWrc,KAAKsc,kBAAkBtc,KAAKmc,UAMpDL,EAAgB7a,UAAUqb,kBAAoB,SAAUH,GACpD,OAAIA,EAAOlZ,KACAjD,KAAK+b,KAAKQ,cAAcJ,GAGxBnc,KAAK+b,KAAKS,gBAAgBL,IAMzCL,EAAgB7a,UAAUwb,aAAe,WACrC,OAAOzc,KAAKqc,UAKhBP,EAAgB7a,UAAUyb,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxB5c,KAAK6c,iBACL7c,KAAK0S,WAAWoK,eAAaC,WAAUA,WAASC,WAAclF,GAAImF,UAAQjd,KAAK6c,eAAgBF,GAC3FO,SAAU,oBAMtBpB,EAAgB7a,UAAUkc,YAAc,SAAUla,GAC9C,OAAOjD,KAAK0S,WAAWoK,eAAaC,WAAU9Z,KAKlD6Y,EAAgB7a,UAAUmc,oBAAsB,SAAUC,GACtDrd,KAAKsd,cAAcD,GAAM,IAE7Blc,IACIc,cACD6Z,EAAgB7a,UAAW,YAAQ,GACtCE,IACIc,cACD6Z,EAAgB7a,UAAW,sBAAkB,GAChDE,IACIc,cACD6Z,EAAgB7a,UAAW,aAAS,GACvCE,IACIc,cACD6Z,EAAgB7a,UAAW,cAAU,GACxCE,IACIc,cACD6Z,EAAgB7a,UAAW,kBAAc,GAC5CE,IACIc,cACD6Z,EAAgB7a,UAAW,uBAAmB,GAC1C6a,GACT5Z,iBAEEqb,GAA8B,SAAUxb,GAExC,SAASwb,IACL,OAAkB,OAAXxb,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAU8c,EAAcxb,GAIxBZ,IACIiB,gBAAe0Z,KAChByB,EAAatc,UAAW,eAAW,GACtCE,IACIc,YAAS,IACVsb,EAAatc,UAAW,wBAAoB,GACxCsc,GACTrb,iBCjHEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5D+b,GAA8B,SAAUzb,GAExC,SAASyb,IACL,OAAkB,OAAXzb,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,OAlCAS,GAAU+c,EAAczb,GAIxBZ,IACIc,YAAS,IACVub,EAAavc,UAAW,mBAAe,GAC1CE,IACIc,YAAS,IACVub,EAAavc,UAAW,oBAAgB,GAC3CE,IACIc,YAAS,IACVub,EAAavc,UAAW,qBAAiB,GAC5CE,IACIc,WAAS,SACVub,EAAavc,UAAW,YAAQ,GACnCE,IACIc,WAAS,QACVub,EAAavc,UAAW,sBAAkB,GAC7CE,IACIc,YAAS,IACVub,EAAavc,UAAW,2BAAuB,GAClDE,IACIc,YAAS,IACVub,EAAavc,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACVub,EAAavc,UAAW,+BAA2B,GACtDE,IACIc,WAAS,KACVub,EAAavc,UAAW,gBAAY,GACvCE,IACIc,gBACDub,EAAavc,UAAW,cAAU,GAC9Buc,GACTtb,iBC3DEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Dgc,GAAgC,SAAU1b,GAE1C,SAAS0b,IACL,OAAkB,OAAX1b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUgd,EAAgB1b,GAI1BZ,IACIc,cACDwb,EAAexc,UAAW,aAAS,GACtCE,IACIc,cACDwb,EAAexc,UAAW,iBAAa,GACnCwc,GACTvb,iBAKEwb,GAA8B,SAAU3b,GAExC,SAAS2b,IACL,OAAkB,OAAX3b,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUid,EAAc3b,GAIxBZ,IACIiB,gBAAeqb,KAChBC,EAAazc,UAAW,eAAW,GACtCE,IACIc,YAAS,IACVyb,EAAazc,UAAW,mBAAe,GACnCyc,GACTxb,iBCpDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAyC5Dkc,GAA0B,SAAU5b,GAEpC,SAAS4b,EAAS5d,EAASkT,GACvB,IAAI5L,EAAQtF,EAAOa,KAAK5C,KAAMD,EAASkT,IAAYjT,KACnDqH,EAAMwM,eACNxM,EAAMuW,sBACNvW,EAAMwW,4BACNxW,EAAMyW,eAAiB,iBACvBzW,EAAM0W,eAAiB,iBACvB1W,EAAMiM,aAAe,eACrB0K,EAAWtb,OAAOub,IAClB1I,WAAS,mBAAoBlO,EAAM6W,yBAA0B7W,GAM7D,OAJKvP,oBAAkBuP,EAAM8W,gBAAsB,SAC/C1b,OAAKC,OAAOF,UAEhB6E,EAAMtP,KAAO,IAAI0K,OACV4E,EAhBX5G,GAAUkd,EAAU5b,GAkBpBic,EAAaL,EAUbA,EAAS1c,UAAUmd,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,OAAI3Q,cACA7N,KAAKye,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJxe,KAAKye,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS1c,UAAU0d,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,OAAI3Q,cACA7N,KAAKye,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJxe,KAAKye,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGb,EAAS1c,UAAU2d,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,OAAI3Q,cACA7N,KAAK+e,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJxe,KAAK+e,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFb,EAAS1c,UAAU4B,cAAgB,WAC/B,MAAO,YAMX8a,EAAS1c,UAAU+d,UAAY,WAC3Bhf,KAAKif,iBACLjf,KAAKkf,iBACLlf,KAAKmf,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB1f,KAAK2f,KAAO,IAAIC,OAAK,WAAY5f,KAAKmf,cAAenf,KAAK6f,QACtD7f,KAAK7E,iBAAmBrD,oBAAkBkI,KAAK1C,gBAC/C0C,KAAK1C,aAAe,aAU5BqgB,EAAS1c,UAAU6e,aAAe,SAAUxkB,EAAY2f,EAAW8E,GAC/D/f,KAAKggB,WAAWC,WAAW3kB,EAAY2f,EAAW8E,IAMtDpC,EAAS1c,UAAUif,aAAe,WAC1BlgB,KAAKggB,YACLhgB,KAAKggB,WAAWE,gBASxBvC,EAAS1c,UAAUkf,iBAAmB,SAAU/b,GAC5CpE,KAAKggB,WAAWG,iBAAiB/b,IASrCuZ,EAAS1c,UAAUmf,OAAS,SAAUC,GAClCrgB,KAAKjI,KAAKqoB,OAAOC,IAYrB1C,EAAS1c,UAAUqf,eAAiB,SAAUC,GAC1CvgB,KAAKwgB,aAAaF,eAAeC,GACjCvgB,KAAKygB,qBAQT9C,EAAS1c,UAAUyf,eAAiB,SAAUC,EAAWC,GACrD5gB,KAAKjI,KAAK2oB,eAAeC,EAAWC,IAExCjD,EAAS1c,UAAUge,eAAiB,WAEhC,IACI4B,EADAhB,EAASD,OAAKC,OAElBgB,KACAtL,WAASvV,KAAK6f,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAanoB,YAAUqH,KAAK6f,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiBpoB,YAAUqH,KAAK6C,gBAAiBie,GACjDvL,WAAS,OAAQwL,EAAgBpoB,YAAUqH,KAAK6f,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdlD,EAAS1c,UAAUqP,MAAQ,WACvBtQ,KAAKihB,YAAY3Q,SAErBqN,EAAS1c,UAAUigB,yBAA2B,SAAUtjB,GACpD,GAAIoC,KAAKmhB,cACL,OAAQvjB,EAAEnC,QACN,IAAK,gBACDuE,KAAKohB,YACL,MACJ,IAAK,cACDphB,KAAKqhB,cACL,MACJ,IAAK,mBACD,IAEIC,EAFiB1jB,EAAEyD,OACa0J,QAAQ,cACXA,QAAQ,MACrCwW,EAAcD,EAAYxW,cAAc,qBACxB,OAAhByW,QAAwC3E,IAAhB2E,GACxBvhB,KAAKwhB,sBAAsBF,EAAYxW,cAAc,sBAEzD,MACJ,IAAK,qBACD,IAEI2W,EAFe7jB,EAAEyD,OACW0J,QAAQ,cACXA,QAAQ,MACjC2W,EAAYD,EAAU3W,cAAc,uBACtB,OAAd4W,QAAoC9E,IAAd8E,GACtB1hB,KAAKwhB,sBAAsBC,EAAU3W,cAAc,wBAEvD,MACJ,IAAK,YACD,IAAIzJ,EAASzD,EAAEyD,OAAOsgB,cAClBC,EAAiB5hB,KAAK6hB,mBAAmBxgB,GAC7C,GAAuB,OAAnBugB,EAAyB,CACzB,IAAIjY,EAAWiY,EAAejY,SAC9B3J,KAAK8hB,UAAUnY,GACf,IAAIoY,EAAYnkB,EAAEyD,OAAO0gB,UACrBljB,EAAM+iB,EAAe7O,SAASgP,GAClC1R,YAAUxR,GAAM,aAChBwR,YAAUxR,GAAM,gBAGhBmB,KAAKgiB,iBAET,MACJ,IAAK,UACD,IAAIC,EAAYrkB,EAAEyD,OAAOsgB,cACrBO,EAAoBliB,KAAKmiB,uBAAuBF,GACpD,GAA0B,OAAtBC,EAA4B,CAC5B,IAAIE,EAASF,EAAkBvY,SAC/B3J,KAAK8hB,UAAUM,GACf,IAAIC,EAASzkB,EAAEyD,OAAO0gB,UAClBha,EAAOma,EAAkBnP,SAASsP,GACtChS,YAAUtI,GAAO,aACjBsI,YAAUtI,GAAO,gBAGjB/H,KAAKgiB,mBAMzBrE,EAAS1c,UAAU4gB,mBAAqB,SAAUK,GAC9C,IAAI3W,EAAa2W,EAAkBhX,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAU7N,QAAQ,iBACxB,SAA7B6M,EAAW5Q,MAAMG,UACjByQ,EAAavL,KAAK6hB,mBAAmBtW,IAElCA,GAGXoS,EAAS1c,UAAUkhB,uBAAyB,SAAUD,GAClD,IAAI3W,EAAa2W,EAAkBI,uBAKnC,OAJmB,OAAf/W,IAA0E,IAAlDA,EAAWgB,UAAU7N,QAAQ,iBACxB,SAA7B6M,EAAW5Q,MAAMG,UACjByQ,EAAavL,KAAKmiB,uBAAuB5W,IAEtCA,GAEXoS,EAAS1c,UAAUie,eAAiB,WAChClf,KAAKmf,iBACLnf,KAAKtC,YACLsC,KAAKvC,cACLuC,KAAKuiB,eACLviB,KAAKwiB,aAAc,EACnBxiB,KAAKyiB,eAAgB,EACrBziB,KAAK0iB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbhjB,KAAKma,cAAiBna,KAAKjJ,sBAAsBC,gBAAgBgJ,KAAKjJ,WAAWA,WAAWksB,UACnFnrB,oBAAkBkI,KAAKjJ,WAAW+C,QAAWkG,KAAKjJ,WAAWE,mBAAmBisB,oBACzFljB,KAAK7E,iBAAmBrD,oBAAkBkI,KAAK7C,kBAMnDwgB,EAAS1c,UAAUkiB,WAAa,WAC5BC,eAAazW,IAAI3M,KAAKjI,KAAKkb,QAAS,QAASjT,KAAKqjB,kBAAmBrjB,MACrEojB,eAAazW,IAAI3M,KAAKiT,QAAS,WAAYjT,KAAKqjB,kBAAmBrjB,MACnEA,KAAKsjB,eAAiB,IAAIC,iBAAevjB,KAAKiT,SAC1CuQ,UAAWxjB,KAAKkhB,yBAAyBlG,KAAKhb,MAC9C0iB,WAAY1iB,KAAK0iB,WACjBe,UAAW,YAEXzjB,KAAKmhB,gBACLnhB,KAAKiT,QAAQyQ,UAAsC,IAA3B1jB,KAAKiT,QAAQyQ,SAAkB,EAAI1jB,KAAKiT,QAAQyQ,WAQhF/F,EAAS1c,UAAU0iB,gBAAkB,WACjC,IAAIC,KACJ,OAAI5jB,KAAKyK,YACEmZ,GAEXA,EAAQhrB,MACJirB,OAAQ,SAAU7gB,MAAOhD,KAAMA,KAAK5H,kBAEnCN,oBAAkBkI,KAAK8jB,UACxBF,EAAQhrB,MACJirB,OAAQ,UACR7gB,MAAOhD,QAGXA,KAAK+jB,kBACLH,EAAQhrB,MACJirB,OAAQ,cACR7gB,MAAOhD,QAGXA,KAAK8Q,aACL8S,EAAQhrB,MACJirB,OAAQ,QACR7gB,MAAOhD,KAAMA,KAAK+Q,gBAGtB/Q,KAAKI,iBACLwjB,EAAQhrB,MACJirB,OAAQ,UACR7gB,MAAOhD,QAGXA,KAAKM,cACLsjB,EAAQhrB,MACJirB,OAAQ,OACR7gB,MAAOhD,QAGXA,KAAKoY,WAAWzgB,OAAS,GACzBisB,EAAQhrB,MACJirB,OAAQ,UAAW7gB,MAAOhD,QAGlC4jB,EAAQhrB,MACJirB,OAAQ,SAAU7gB,MAAOhD,QAEzBA,KAAKgkB,kBACLJ,EAAQhrB,MACJirB,OAAQ,cAAe7gB,MAAOhD,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9CykB,EAAQhrB,MACJirB,OAAQ,SAAU7gB,MAAOhD,QAG7BA,KAAKikB,gBACLL,EAAQhrB,MACJirB,OAAQ,YAAa7gB,MAAOhD,QAGhCA,KAAKkkB,gBACLN,EAAQhrB,MACJirB,OAAQ,YAAa7gB,MAAOhD,QAGhCA,KAAKK,gBACLujB,EAAQhrB,MACJirB,OAAQ,aAAc7gB,MAAOhD,QAGjCA,KAAKmkB,mBACLP,EAAQhrB,MACJirB,OAAQ,gBAAiB7gB,MAAOhD,QAGxCA,KAAKokB,sBAAsBR,GACpBA,IAEXjG,EAAS1c,UAAUmjB,sBAAwB,SAAUR,GAC7C5jB,KAAKgE,qBACL4f,EAAQhrB,MACJirB,OAAQ,iBACR7gB,MAAOhD,SAGXA,KAAKhE,aAAaqoB,aAAerkB,KAAKhE,aAAasoB,eAAiBtkB,KAAKhE,aAAaiE,eACtF2jB,EAAQhrB,MACJirB,OAAQ,OACR7gB,MAAOhD,QAGXA,KAAKukB,gBAAgBvkB,KAAKtI,UAC1BksB,EAAQhrB,MACJirB,OAAQ,gBACR7gB,MAAOhD,QAGXA,KAAKwkB,gBACLZ,EAAQhrB,MACJirB,OAAQ,YACR7gB,MAAOhD,QAGXA,KAAK1B,sBACLslB,EAAQhrB,MACJirB,OAAQ,gBACR7gB,MAAOhD,QAGf4jB,EAAQhrB,MACJirB,OAAQ,SACR7gB,MAAOhD,KAAKjI,SAGpB4lB,EAAS1c,UAAUsjB,gBAAkB,SAAU7sB,GAC3C,IAAI2P,EAAQrH,KACZ,OAAOtI,EAAQ+sB,KAAK,SAAU1Y,GAC1B,OAAIA,EAAIrU,QACG2P,EAAMkd,gBAAgBxY,EAAIrU,YAE3BqU,EAAI2Y,WAAY3Y,EAAI4Y,qBAOtChH,EAAS1c,UAAU2jB,aAAe,WAC1B5kB,KAAKjI,MAAQiI,KAAKjI,KAAKkb,SACvBmQ,eAAayB,OAAO7kB,KAAKjI,KAAKkb,QAAS,QAASjT,KAAKqjB,oBAO7D1F,EAAS1c,UAAU6B,IAAM,SAAUC,EAAOC,GACtChD,KAAK8kB,cAAe9kB,KAAK8kB,aAAahhB,QAAQf,EAAOC,EAAMhD,OAM/D2d,EAAS1c,UAAU8jB,OAAS,WACxB,IAAI1d,EAAQrH,KACRA,KAAKmT,UACLnT,KAAKjI,KAAKob,SAAU,GAExB6R,iBAAgB3jB,OAAQrB,KAAKiT,SAAWjT,KAAKsM,eAC7CtM,KAAK8C,KAAK,2BACV9C,KAAKX,aAAe,IAAIoR,GAAOzQ,MAC/BA,KAAKilB,WAAa,IAAI5R,GAAiBrT,MACvCA,KAAKihB,YAAc,IAAIrR,GAAM5P,MAW7B,GATIA,KAAiB,iBACjBA,KAAKkX,kBAAmB,GAE5BlX,KAAKkJ,QbrgBK,QasgBVlJ,KAAKklB,sBACLllB,KAAK3G,eAAgB,EAChBvB,oBAAkBkI,KAAKjJ,aACxBiJ,KAAKmlB,gBAAgBnlB,KAAKjJ,aAEzB8W,eAAe7N,KAAKkX,iBAAkB,CACvClX,KAAKolB,WACDplB,KAAKiT,QAAQ5K,UAAUC,SAAS,eAAiBtI,KAAKqlB,gBAAgBC,WACtEtlB,KAAKjI,KAAKstB,gBAAgBC,UAAY,gBAE1CtlB,KAAKulB,cACL,IAAIC,EAAgBlZ,gBAAc,OAAS4G,GAAIlT,KAAKiT,QAAQC,GAAK,iBACjE7C,YAAUrQ,KAAKiT,SAAU,cACpBnb,oBAAkBkI,KAAKylB,SAAoC,iBAAjBzlB,KAAW,SAAgD,IAA9BA,KAAKylB,OAAO/mB,QAAQ,OAC5FsB,KAAKiT,QAAQtY,MAAM8qB,OAASzlB,KAAKylB,QAEhC3tB,oBAAkBkI,KAAK4M,QAAkC,iBAAhB5M,KAAU,QAA+C,IAA7BA,KAAK4M,MAAMlO,QAAQ,OACzFsB,KAAKiT,QAAQtY,MAAMiS,MAAQ5M,KAAK4M,OAEpC5M,KAAKiT,QAAQvF,YAAY8X,GACzBxlB,KAAKjI,KAAK2tB,SAASF,GACnBxlB,KAAKmjB,aAETnjB,KAAK2lB,iBACL,IACIC,EAAoB5lB,KAAKjI,KAAoB,gBASjD,GAPAiI,KAAKjI,KAAoB,gBAAI,SAAUiL,EAAM1I,GACzCsrB,EAAkB5jB,MAAMqF,EAAMtP,MAExBsP,EAAM8L,SAAWrb,oBAAkBuP,EAAa,UAClDA,EAAMwe,cAAc7iB,EAAM1I,IAG9BuT,cAAc7N,KAAKkX,iBAAkB,CACrC,IAAI4O,EAAO,SAAU9iB,GAAQ,OAAOqE,EAAM0e,aAAa/iB,EAAM8iB,IAC7DE,eAAa7b,GAAG,qBAAsB2b,EAAM9lB,QAGpD2d,EAAS1c,UAAUglB,gBAAkB,WAC5BnuB,oBAAkBkI,KAAKjI,KAAKmuB,kBAC7BlmB,KAAKjI,KAAKmuB,gBAAgBrc,UAE9B7J,KAAKkmB,gBAAkBlmB,KAAKjI,KAAKmuB,gBAAkB,IAAI9e,GAAcpH,OAEzE2d,EAAS1c,UAAU8kB,aAAe,SAAU/iB,EAAM8U,GAC9C,GAAI9U,EAAKkQ,KAAOlT,KAAKiT,QAAQC,GAAK,eAAlC,CACIlT,KAAKjI,KAAOiL,EAAKjL,KAKrBiI,KAAKjI,KAAKuc,MAAMU,WAGXhV,KAAKkX,iBAINlX,KAAKjI,KAAa,UAAI,EAHtBiI,KAAKjI,KAAkB,eAAI,EAK/BiI,KAAKmmB,gBACLnmB,KAAKomB,YAAYpmB,KAAKjI,KAAKL,SAC3BsI,KAAKqmB,iBAEAvuB,oBAAkBkI,KAAKsmB,kBACxBtmB,KAAKjI,KAAKoS,GAAG,mBAAoBnK,KAAKsmB,gBAA8B,eAAGtmB,KAAKsmB,iBAEhF,IAAK,IAAI7uB,EAAI,EAAGA,EAAIuI,KAAKtI,QAAQC,OAAQF,IACrCuI,KAAKtI,QAAQD,GAAGuU,IAAMhM,KAAKjI,KAAKL,QAAQD,GAAGuU,IAE/ChM,KAAKmjB,aACLnjB,KAAKimB,kBAELjmB,KAAKjI,KAAiB,eACtBiuB,eAAatb,IAAI,qBAAsB1K,KAAK+lB,gBAEhDpI,EAAS1c,UAAUmlB,YAAc,SAAU7D,EAAagE,QACxC,IAARA,IAAkBA,EAAM,GAC5B,IAAK,IAAI9uB,EAAI,EAAGe,EAAM+pB,EAAY5qB,OAAQF,EAAIe,EAAKf,IAC3C8qB,EAAY9qB,GAAGC,SACf6qB,EAAY9qB,GAAG6C,MAAQxC,oBAAkByqB,EAAY9qB,GAAG6C,OAASisB,EAC7DhE,EAAY9qB,GAAG6C,MACnBisB,IACAA,EAAMvmB,KAAKomB,YAAY7D,EAAY9qB,GAAGC,QAAS6uB,KAG/ChE,EAAY9qB,GAAG6C,MAAQxC,oBAAkByqB,EAAY9qB,GAAG6C,OAASisB,EAC7DhE,EAAY9qB,GAAG6C,MACnBisB,KAGR,OAAOA,GAEX5I,EAAS1c,UAAUklB,cAAgB,WAE3BnmB,KAAKhE,eACLgE,KAAKjI,KAAKiE,aAAiB,KAAIgE,KAAKhE,aAAiB,KACrDgE,KAAKjI,KAAKiE,aAAa2W,SAAW3S,KAAKhE,aAAa2W,UAExD,IAAK,IAAIlb,EAAI,EAAGA,EAAIuI,KAAKoY,WAAWzgB,OAAQF,IACxC,IAAK,IAAI0C,EAAI,EAAGA,EAAI6F,KAAKoY,WAAW3gB,GAAGC,QAAQC,OAAQwC,IACnD6F,KAAKjI,KAAKqgB,WAAW3gB,GAAGC,QAAQyC,GAAO,KAAI6F,KAAKoY,WAAW3gB,GAAGC,QAAQyC,GAAO,KAGrF,IAAS1C,EAAI,EAAGA,EAAIuI,KAAKtI,QAAQC,OAAQF,IACrCuI,KAAKjI,KAAKL,QAAQD,GAAO,KAAIuI,KAAKtI,QAAQD,GAAO,MAIzDkmB,EAAS1c,UAAUkkB,gBAAkB,SAAUxmB,GAC3C,IAAI0I,EAAQrH,KACZ,GAAIrB,aAAgB9B,OAAS8B,EAAKhH,OAAS,GAAKgH,EAAK,GAAG1B,eAAe,SACnE+C,KAAKtC,SAAWnG,EAAgByI,MAAQzB,WAAS,SAAUI,GAAQA,EACnEqB,KAAKtC,SAASC,OAAO,SAAUC,GAC3B2X,WAAS,sBAAwB3X,EAAExE,SAAUwE,EAAGyJ,GAChC,IAAZzJ,EAAErD,OACF8M,EAAM5J,WAAW7E,KAAKgF,UAK9B,GAAIrG,EAAgByI,MAAO,CACvB,IAAIwmB,EAAWjoB,WAAS,SAAUyB,KAAKjJ,YACvCiJ,KAAKilB,WAAW5Q,kBAAkBmS,QAGlCxmB,KAAKilB,WAAW5Q,kBAAkB1V,IAa9Cgf,EAAS1c,UAAUwlB,mBAAqB,WACpCzmB,KACK0mB,mBACL1mB,KAAKjI,KAAK4uB,UAAY3mB,KAAK2mB,UAC3B3mB,KAAKjI,KAAKopB,cAAgBnhB,KAAKmhB,cAC/BnhB,KAAKjI,KAAKL,QAAUsI,KAAK4mB,eAAe5mB,KAAKtI,SAC7CsI,KAAKjI,KAAKisB,iBAAmBhkB,KAAKgkB,iBAClChkB,KAAKjI,KAAKmsB,eAAiBlkB,KAAKkkB,eAChClkB,KAAKjI,KAAKuc,MAAQtU,KAAKsU,MACvBtU,KAAKjI,KAAK8uB,gBAAkB7mB,KAAK6mB,gBACjC7mB,KAAKjI,KAAK+Y,YAAc9Q,KAAK8Q,YAC7B9Q,KAAKjI,KAAKgZ,aAAe+V,sBAAoB9mB,KAAK+Q,cAClD/Q,KAAKjI,KAAKgvB,cAAgB/mB,KAAK+mB,cAC/B/mB,KAAKjI,KAAKsI,eAAiBL,KAAKK,eAChCL,KAAKjI,KAAKuI,aAAeN,KAAKM,aAC9BN,KAAKjI,KAAKI,eAAiB6H,KAAK7H,eAChC6H,KAAKjI,KAAKuG,qBAAuB0B,KAAK1B,qBACtC0B,KAAKjI,KAAK6U,MAAQ5M,KAAK4M,MACvB5M,KAAKjI,KAAK0tB,OAASzlB,KAAKylB,OACxBzlB,KAAKjI,KAAKivB,aAAehnB,KAAKgnB,aAC9BhnB,KAAKjI,KAAKqI,gBAAkBJ,KAAKI,gBACjCJ,KAAKjI,KAAKma,cAAgBlS,KAAKkS,cAC/BlS,KAAKjI,KAAKwI,cAAgBP,KAAKO,cAC/BP,KAAKjI,KAAKkvB,YAAcjnB,KAAKinB,YAC7BjnB,KAAKjI,KAAKmvB,eAAiBlnB,KAAKknB,eAChClnB,KAAKjI,KAAKiM,oBAAsBhE,KAAKgE,oBACrChE,KAAKjI,KAAKstB,gBAAkByB,sBAAoB9mB,KAAKqlB,iBACrDrlB,KAAKjI,KAAKovB,UAAYnnB,KAAKmnB,UAC3BnnB,KAAKjI,KAAKqvB,UAAYpnB,KAAKonB,UAC3BpnB,KAAKjI,KAAKysB,eAAiBxkB,KAAKwkB,eAChCxkB,KAAKjI,KAAK+rB,QAAUgD,sBAAoB9mB,KAAKqnB,kBAC7CrnB,KAAKjI,KAAKuvB,gBAAkBtnB,KAAKsnB,gBACjCtnB,KAAKjI,KAAKosB,kBAAoBnkB,KAAKmkB,kBACnCnkB,KAAKjI,KAAKK,eAAiB0uB,sBAAoB9mB,KAAK5H,gBACpD4H,KAAKjI,KAAKiQ,kBAAoB8e,sBAAoB9mB,KAAKgI,mBACvDhI,KAAKjI,KAAK0G,aAAeqoB,sBAAoB9mB,KAAKvB,cAClDuB,KAAKjI,KAAKC,eAAiB8uB,sBAAoB9mB,KAAKhI,gBACpDgI,KAAKjI,KAAKqgB,WAAa0O,sBAAoB9mB,KAAKoY,YAChDpY,KAAKjI,KAAKwvB,iBAAmBT,sBAAoB9mB,KAAKunB,kBACtDvnB,KAAKjI,KAAKujB,UAAYwL,sBAAoB9mB,KAAKsb,WAC/Ctb,KAAKjI,KAAK8nB,OAASiH,sBAAoB9mB,KAAK6f,QAC5C7f,KAAKjI,KAAKyvB,iBAAmBxnB,KAAKwnB,iBAClCxnB,KAAKjI,KAAKgsB,iBAAmB+C,sBAAoB9mB,KAAKynB,kBACtDznB,KAAKjI,KAAK2vB,gBAAkBZ,sBAAoB9mB,KAAK0nB,iBACrD1nB,KAAKjI,KAAKiE,aAAegE,KAAK2nB,sBAC9B3nB,KAAKjI,KAAKya,YAAcsU,sBAAoB9mB,KAAKwS,aACjDxS,KAAKjI,KAAKksB,eAAiB6C,sBAAoB9mB,KAAKikB,gBACpDjkB,KAAKjI,KAAKmH,WAAac,KAAKd,WAC5Bc,KAAKjI,KAAK2H,cAAgBM,KAAKN,cAC/B,IAAIkoB,EAAmB,yBACvB5nB,KAAKjI,KAAK6vB,GAAoB5nB,KAAK4nB,GAEnC5nB,KAAKjI,KAAkB,eAAI,GAE/B4lB,EAAS1c,UAAU4mB,cAAgB,SAAU7kB,GACzChD,KAAKkJ,QAAQvQ,YAAU,OAAQqK,GAAOA,IAE1C2a,EAAS1c,UAAUolB,eAAiB,WAChC,IAAIhf,EAAQrH,KACR+D,EAAW/D,KACfA,KAAKjI,KAAK+vB,aAAe,SAAU9kB,GAC1BlL,oBAAkBkL,EAAK3B,UAAY2B,EAAK3B,OAAOgH,UAAUC,SAAS,sBAChEtF,EAAK3B,OAAOgH,UAAUC,SAAS,sBAItCjB,EAAM6B,QbpsBQ,eaosBqBlG,GAH/BA,EAAKiG,QAAS,GAKtBjJ,KAAKjI,KAAK6M,YAAc,SAAU5B,GACzB6K,aAGIA,cAAcxG,EAAM6P,mBACzB7P,EAAM0gB,wBAAyB,EAC/B1gB,EAAMiW,eAAgBkK,iBAAkBngB,EAAMtP,KAAKyvB,mBAAoB,GACvEngB,EAAM0gB,wBAAyB,GAL/B1gB,EAAMmgB,iBAAmBngB,EAAMtP,KAAKyvB,iBAOxCzjB,EAASqO,OAAO4V,EAAoBhlB,GACpCqE,EAAM6B,QAAQ8e,EAAoBhlB,IAEtChD,KAAKjI,KAAK+M,cAAgB,SAAU9B,GAChCqE,EAAMmgB,iBAAmBngB,EAAMtP,KAAKyvB,iBACpCngB,EAAM6B,QAAQ+e,EAAsBjlB,IAExChD,KAAKjI,KAAKmwB,WAAa,SAAUllB,GAC7BqE,EAAMoZ,oBACNpZ,EAAM6B,Qb1sBM,aa0sBqBlG,IAErChD,KAAKjI,KAAKowB,mBAAqB,SAAUnlB,GACrCqE,EAAM+K,OAAO,gBAAiBpP,GAC9BA,EAAOqE,EAAMwM,aAEjB7T,KAAKjI,KAAKqwB,iBAAmB,SAAUplB,GACnCqE,EAAM+K,OAAO,cAAepP,GAC5BA,EAAOqE,EAAMwM,aAEjB7T,KAAKjI,KAAKswB,eAAiB,SAAUrlB,GACjCqE,EAAM6B,QAAQyC,EAAuB3I,IAEzChD,KAAKjI,KAAKuwB,kBAAoBtoB,KAAK6nB,cAAc7M,KAAKhb,MACtDA,KAAKjI,KAAKwwB,oBAAsBvoB,KAAK6nB,cAAc7M,KAAKhb,MACxDA,KAAKjI,KAAKywB,yBAA2BxoB,KAAK6nB,cAAc7M,KAAKhb,MAC7DA,KAAKjI,KAAK0wB,uBAAyBzoB,KAAK6nB,cAAc7M,KAAKhb,MAC3DA,KAAKjI,KAAK2wB,kBAAoB1oB,KAAK6nB,cAAc7M,KAAKhb,MACtDA,KAAKjI,KAAK6N,kBAAoB5F,KAAK6nB,cAAc7M,KAAKhb,MACtDA,KAAKjI,KAAK4wB,eAAiB3oB,KAAK6nB,cAAc7M,KAAKhb,MACnDA,KAAKjI,KAAK6wB,eAAiB5oB,KAAK6nB,cAAc7M,KAAKhb,MACnDA,KAAKjI,KAAK8wB,gBAAkB7oB,KAAK6nB,cAAc7M,KAAKhb,MACpDA,KAAKjI,KAAK+wB,eAAiB9oB,KAAK6nB,cAAc7M,KAAKhb,MACnDA,KAAKjI,KAAKgxB,gBAAkB/oB,KAAK6nB,cAAc7M,KAAKhb,MACpDA,KAAKjI,KAAKixB,aAAehpB,KAAK6nB,cAAc7M,KAAKhb,MACjDA,KAAKjI,KAAKkxB,eAAiBjpB,KAAK6nB,cAAc7M,KAAKhb,MACnDA,KAAKjI,KAAKmxB,YAAclpB,KAAK6nB,cAAc7M,KAAKhb,MAChDA,KAAKjI,KAAKoxB,SAAWnpB,KAAK6nB,cAAc7M,KAAKhb,MAC7CA,KAAKjI,KAAKqxB,WAAappB,KAAK6nB,cAAc7M,KAAKhb,MAC/CA,KAAKjI,KAAKsxB,gBAAkBrpB,KAAK6nB,cAAc7M,KAAKhb,MACpDA,KAAKjI,KAAKuxB,WAAatpB,KAAK6nB,cAAc7M,KAAKhb,MAC/CA,KAAKjI,KAAKwxB,YAAcvpB,KAAK6nB,cAAc7M,KAAKhb,MAChDA,KAAKjI,KAAKyxB,WAAaxpB,KAAK6nB,cAAc7M,KAAKhb,MAC/CA,KAAKjI,KAAK0xB,YAAc,SAAUzmB,GAG9B,IAFA,IAAI+E,EAAOV,EAAMtI,UAEVgJ,EAAK/E,EAAa,UAAGqF,UAAUC,SAAS,iBAC3CtF,EAAa,WAEjBqE,EAAM6B,QbztBO,caytBqBlG,IAEtChD,KAAKjI,KAAKipB,KAAO,WAEb,GADAjd,EAAShM,KAAKoS,GAAG,cAAepG,EAASkiB,gBAAiBliB,IACrDjM,oBAAkBuP,EAAMyd,cAAe,CAExCzd,EAAMyd,aAAezd,EAAMtP,KAAiB,aAAI,IAAI2xB,EAAWriB,EAAMtP,QAG7EiI,KAAKjI,KAAK4xB,cAAgB3pB,KAAK6nB,cAAc7M,KAAKhb,MAClDA,KAAKjI,KAAK6xB,cAAgB5pB,KAAK6nB,cAAc7M,KAAKhb,MAClDA,KAAK6pB,6BACL7pB,KAAK8pB,qBACL9pB,KAAK+pB,2BACL/pB,KAAKgqB,yBACLhqB,KAAKiqB,qBACLjqB,KAAKkqB,sBAETvM,EAAS1c,UAAUkpB,cAAgB,SAAUC,EAAYC,GACrD,IAAK,IAAIlwB,EAAI,EAAGA,EAAIiwB,EAAW5qB,MAAM7H,OAAQwC,IACzCkwB,EAAcha,YAAU+Z,EAAW5qB,MAAMrF,IAAK,iBAAmBiT,eAAagd,EAAW5qB,MAAMrF,IAAK,kBAI5GwjB,EAAS1c,UAAUqpB,cAAgB,WAC/B,MAAoB,SAAhBtqB,KAAKylB,SAA8D,IAAzCzlB,KAAKylB,OAAO5d,WAAWnJ,QAAQ,MAQjEif,EAAS1c,UAAU4oB,2BAA6B,WAC5C,IAAIxiB,EAAQrH,KACR+D,EAAW/D,KACfA,KAAKjI,KAAKwyB,UAAY,SAAUvnB,GAK5B,GAJAqE,EAAMmjB,kBAAkBxnB,GACxBqE,EAAMoZ,oBACNpZ,EAAMojB,aAAapjB,EAAMtI,WACzBsI,EAAM+K,OAAO,eAAgBpP,GACzBnM,EAAawQ,KAAWzN,EAAUyN,KAAWA,EAAMwN,gBAAiB,CACpE,IAAI6V,EAAM/xB,YAAU,sBAAuB0O,GAAO1J,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAEyX,YAAYC,aACtB3d,OACH4d,WAAS,gCAAiCmV,EAAM,GAAIrjB,GAExD,GAAIA,EAAMijB,iBAAmBjjB,EAAMhO,cAI/B,IAAK,IAHDsxB,OAAY,EACZ5iB,EAAOV,EAAM4P,kBAAkBlP,KAE1BtQ,GADTkzB,KAAepiB,MAAM3F,KAAKmF,IACHpQ,OAAS,EAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAASkwB,EAAUlzB,IAAK,CACrBkzB,EAAUlzB,GAAGyT,oBACb7D,EAAM8iB,cAAcQ,EAAUlzB,IAAI,GAEtC,MAIZ4P,EAAM6B,Qbv0BK,Yau0BqBlG,GAChCqE,EAAMhO,eAAgB,GAE1B2G,KAAKjI,KAAKyM,gBAAkB,SAAUxB,GAClC,IACInD,EAAclH,YAAU,SAAUqK,GACtC,GAAInM,EAAakN,KAAcnK,EAAUmK,IAA6B,SAAhBlE,EAClDkE,EAASqO,OAAO,oBAAqBpP,GACrCA,EAAQe,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASrG,SAAS/F,QAAgBiC,EAAUmK,IAAaA,EAAShN,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAKkK,EAAShN,WAClBgN,EAASkhB,WAAW5Q,kBAAkBxa,EAAG9C,WAAW6E,MACpDoH,EAAKoQ,OAASrP,EAAShM,KAAKhB,WAAqB,WAAE6E,KAAOmI,EAASrG,SAWvE,GATK7G,EAAakN,IAAcxM,EAAgByI,OAAUlI,oBAAkBiM,EAAShN,cAC7EiJ,KAAK6Z,YACLtE,WAAS,cAAc,EAAMvS,GAEjCe,EAASqO,OAAO,gBAAiBpP,IAGrCzG,SAAOyG,EAAMe,EAAS8P,cAEjB7T,KAAK6Z,WAAY,CAClB,IAAI+Q,EAAoB,IAAIC,WAI5B,OAHA9mB,EAASmF,QAAQkH,EAAwBpN,EAAM,SAAU8nB,GACrDF,EAAkBG,QAAQD,KAEvBF,IAGf5qB,KAAKjI,KAAK+K,IAAM,SAAUG,EAAMD,GAC5BqE,EAAMyd,cAAezd,EAAMyd,aAAahiB,IAAIG,EAAMD,KAG1D2a,EAAS1c,UAAUipB,mBAAqB,WACpC,IACIxkB,EADA2B,EAAQrH,KAER6N,cAAc7N,KAAKkX,mBACdpf,oBAAkBkI,KAAKjI,KAAK2N,aAC7BA,EAAY1F,KAAKjI,KAAK2N,YAG9B1F,KAAKjI,KAAKgN,aAAe,SAAU/B,GAC/B,IAAIgoB,EAAkB,IAAIH,WAO1B,OANAxjB,EAAM6B,QAAQ+hB,EAAqBjoB,EAAM,SAAUkoB,GAC1CA,EAAYjiB,QACb5B,EAAM+K,OAAO6Y,EAAqBjoB,GAEtCgoB,EAAgBD,QAAQG,KAErBF,GAEXhrB,KAAKjI,KAAKozB,cAAgB,SAAUnoB,GAChC,IAAIgoB,EAAkB,IAAIH,WAI1B,OAHAxjB,EAAM6B,QAAQvQ,YAAU,OAAQqK,GAAOA,EAAM,SAAUooB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEXhrB,KAAKjI,KAAK2N,UAAY,SAAU1C,GACxB6K,cAAcxG,EAAM6P,kBAChBxR,GAAkC,mBAAdA,GACpBA,EAAU1D,MAAMqF,GAAQrE,IAGhC,IAAIgoB,EAAkB,IAAIH,WAI1B,OAHAxjB,EAAM6B,QAAQmiB,GAAkBroB,EAAM,SAAUsoB,GAC5CN,EAAgBD,QAAQO,KAErBN,IAGfrN,EAAS1c,UAAU+oB,uBAAyB,WACxC,IAIIjkB,EACAF,EALAwB,EAAQrH,KAcZ,GARI6N,cAAc7N,KAAKkX,mBACdpf,oBAAkBkI,KAAKjI,KAAKgO,YAC7BA,EAAW/F,KAAKjI,KAAKgO,UAEpBjO,oBAAkBkI,KAAKjI,KAAK8N,YAC7BA,EAAW7F,KAAKjI,KAAK8N,WAGzB7F,KAAK9D,YAAc2R,cAAc7N,KAAKkX,iBAAkB,CACxDlX,KAAKjI,KAAKoS,GAdG,cAcYnK,KAAK9D,WAAuB,WAAG8D,KAAK9D,YAC7D,IAAIqvB,EAAWvrB,KAAKjI,KAAkB,cAAEyzB,cAAc,eACtDD,EAASluB,OAAO,EAAG,EAAGkuB,EAASE,OAEnCzrB,KAAKjI,KAAK2M,gBAAkB,SAAU1B,GAC9BqE,EAAMqkB,iBACNrkB,EAAMqkB,iBAAkB,EACxBrkB,EAAMtP,KAAKhB,YAAeqc,OAAQ/L,EAAM3J,SAAU2Q,MAAO9P,WAAS,QAAS8I,EAAMtP,KAAKhB,cAGtFsQ,EAAM6B,QAAQyiB,EAAwB3oB,IAG9ChD,KAAKjI,KAAK8N,SAAW,SAAU7C,GAM3B,GALI6K,cAAcxG,EAAM6P,kBAChBrR,GAAgC,mBAAbA,GACnBA,EAAS7D,MAAMqF,GAAQrE,IAG3BqE,EAAMtP,KAAK6zB,oBAAqB,CAChC,IAAIC,OAAe,EACnBA,EAAexkB,EAAMtP,KAAK+zB,kBAAkBC,YAAY9Y,QAAQmE,uBAAuB,cAAc,IAChGtf,oBAAkB+zB,IAAiBA,EAAa3Y,KAAO7L,EAAM4L,QAAQC,GAAK,6BAC3ElQ,EAAKiG,QAAS,GAGtB,IAAI+hB,EAAkB,IAAIH,WAU1B,OATAxjB,EAAM6B,QAAQ8iB,GAAiBhpB,EAAM,SAAUipB,GACvCpe,eAAexG,EAAM6P,mBACrB+U,EAAa1sB,KAAO2sB,aAAWD,EAAa1sB,OAE3C0sB,EAAahjB,QACd5B,EAAM+K,OAAO4Z,GAAiBC,GAElCjB,EAAgBD,QAAQkB,KAErBjB,GAEXhrB,KAAKjI,KAAK+N,UAAY,SAAU9C,GAC5BqE,EAAM6B,QAAQijB,GAAkBnpB,GAChCqE,EAAM+K,OAAO+Z,GAAkBnpB,IAEnChD,KAAKjI,KAAKgO,SAAW,SAAU/C,GACvB6K,cAAcxG,EAAM6P,kBAChBnR,GAAgC,mBAAbA,GACnBA,EAAS/D,MAAMqF,GAAQrE,IAG/B,IACIopB,EAAU,IAAIvB,WAGlB,OAFA7nB,EAAS,QAAIopB,EACb/kB,EAAM+K,OAAOia,GAAiBrpB,GACvBopB,GAEXpsB,KAAKjI,KAAKmO,SAAW,SAAUlD,GAC3BqE,EAAM6B,QAAQojB,GAAiBtpB,GAC/BqE,EAAM+K,OAAOka,GAAiBtpB,IAElChD,KAAKjI,KAAKsO,gBAAkB,SAAUrD,GAClCqE,EAAM6B,QAAQqjB,GAAwBvpB,GACtCqE,EAAM+K,OAAOma,GAAwBvpB,IAEzChD,KAAKjI,KAAKqO,eAAiB,SAAUpD,GACjCqE,EAAM6B,QAAQsjB,GAAuBxpB,GACrCqE,EAAM+K,OAAOoa,GAAuBxpB,IAExChD,KAAKjI,KAAKiO,YAAc,SAAUhD,GAC9BqE,EAAM6B,QAAQujB,GAAoBzpB,GAClCqE,EAAM+K,OAAOqa,GAAoBzpB,IAErChD,KAAKjI,KAAKoO,kBAAoB,SAAUnD,GACpCqE,EAAM6B,QAAQwjB,GAA0B1pB,GACxCqE,EAAM+K,OAAOsa,GAA0B1pB,IAE3ChD,KAAKjI,KAAKkO,YAAc,SAAUjD,GACE,SAA5BqE,EAAMrL,aAAaC,MACnBoL,EAAM6B,QAAQyjB,GAAoB3pB,GAEtCqE,EAAM+K,OAAOua,GAAoB3pB,KAGzC2a,EAAS1c,UAAUupB,kBAAoB,SAAUxnB,GAC7C,IAAIqE,EAAQrH,KACR6N,eAAe7N,KAAKkX,iBACpB0V,WAAW,WACPvlB,EAAMwlB,sBAAsB7pB,IAC7B,KAGHhD,KAAK6sB,sBAAsB7pB,IAGnC2a,EAAS1c,UAAUylB,iBAAmB,WAClC,IAAI3vB,EAAa,aAOjB,GAAIiJ,KAAKjJ,YAAcQ,EAAgByI,MAAO,CAC1C,IAAIrB,EAAOqB,KAAKtC,SACZovB,EAAYvuB,WAAS,QAASyB,KAAKjJ,YACvCiJ,KAAKjI,KAAKhB,YAAeqc,OAAQzU,EAAM0P,MAAOye,QAG9C9sB,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWg2B,aAAc/sB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SAOb,GALImQ,cAAc7N,KAAKjJ,sBAAsBC,gBACzCgJ,KAAKjI,KAAKhB,WAAsB,YAAIiJ,KAAKjJ,WAAsB,YAC/DiJ,KAAKjI,KAAKhB,WAAyB,eAAIiJ,KAAKjJ,WAAyB,eACrEiJ,KAAKjI,KAAKhB,WAAc,IAAIiJ,KAAKjJ,WAAc,KAE/CiJ,KAAKjJ,sBAAsBC,gBAAgBgJ,KAAKjJ,WAAWA,WAAWksB,SAAWjjB,KAAKjJ,WAAW+C,OAAQ,CACzGkG,KAAKjI,KAAKhB,WAAWA,GAAY6E,KAAO7B,EAAYiG,KAAKjJ,WAAWA,GAAY6E,MAChFoE,KAAKjI,KAAKhB,WAAgB,MAAIiJ,KAAKjJ,WAAW+C,MAC9C,IAAIkzB,EAAOhtB,KAAKjI,KAAKhB,WAChBe,oBAAkBkI,KAAKjI,KAAKhB,WAAgB,QAC7CiJ,KAAKjI,KAAKhB,WAAgB,MAAEme,KAAK,SAAUtX,GACvCovB,EAAKj2B,GAAYksB,SAAU,EAC3B+J,EAAoB,iBAAI,EACxBA,EAAKj2B,GAAY6E,KAAOgC,EAAEwV,OAC1B4Z,EAAY,QAAI,IAAIC,kBAKpCtP,EAAS1c,UAAU8oB,yBAA2B,WAC1C,IACIplB,EADA0C,EAAQrH,KAER6N,cAAc7N,KAAKkX,mBACdpf,oBAAkBkI,KAAKjI,KAAK4M,kBAC7BA,EAAiB3E,KAAKjI,KAAK4M,iBAGnC3E,KAAKjI,KAAK0M,YAAc,SAAUzB,GACL,YAArBA,EAAKnD,aAA6BmD,EAAK3B,QAAU2B,EAAK3B,OAAOsgB,eAC7D3e,EAAK3B,OAAOsgB,cAActZ,UAAUC,SAAS,yBAC7CtF,EAAKiG,QAAS,GAGE,YADFtQ,YAAU,cAAeqK,IAEvCqE,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,eAAiBpX,WAAYgI,IACrCnM,EAAawQ,IAAWvP,oBAAkBuP,EAAM6G,eAAkB3W,EAAgB8P,IAClC,IAA7CA,EAAMtP,KAAKK,eAAeV,QAAQC,QAAyD,IAAzC0P,EAAMtP,KAAKC,eAAeC,IAAIN,SACpF0P,EAAM+K,OAAO,gBAAkB1U,SAAU2J,EAAMtP,KAAKhB,aACpDsQ,EAAMtP,KAAKhB,WAAasQ,EAAMwM,YAAYT,QAE9C,IAAI4X,EAAkB,IAAIH,WAC1B,GAAIhd,cAAmC,WAArB7K,EAAKnD,cAA6BwH,EAAM6P,iBAAkB,CAExElU,EAAS,KAAIA,EAAS,KAAE,GAe5B,OAbAqE,EAAM6B,QAAQgkB,EAAoBlqB,EAAM,SAAU8W,GAC9C,GAAIjM,cAAyC,WAA3BiM,EAAWja,cAA6BwH,EAAM6P,iBAAkB,CAE9E4C,EAAe,MAAKA,EAAe,MAElCA,EAAW7Q,QACZ5B,EAAM+K,OAAOiZ,GAAkBvR,GAE/BjM,cAAyC,cAA3BiM,EAAWja,cAAgCwH,EAAM6P,mBAC/D4C,EAAWjb,IAAMqtB,aAAWpS,EAAWjb,MAE3CmsB,EAAgBD,QAAQjR,KAErBkR,GAEXhrB,KAAKjI,KAAK4M,eAAiB,SAAU3B,GACjC,GAAI6K,cAAcxG,EAAM6P,kBAAyC,oBAArBlU,EAAKnD,YAAmC,CAEhF,IAAK,IADDkI,EAAOV,EAAMtI,UACRtH,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAAK,EAC9BsQ,EAAKtQ,GAAG4Q,UAAUC,SAAS,uBAAyBP,EAAKtQ,GAAG4Q,UAAUC,SAAS,wBAC9EjB,EAAM4J,mBAA0C,WAArBjO,EAAKnD,YAA4BuN,eAAarF,EAAKtQ,IAAK,qBAChF2V,eAAarF,EAAKtQ,IAAK,sBAC1B4P,EAAM4J,mBAA0C,WAArBjO,EAAKnD,YAA4BwQ,YAAUtI,EAAKtQ,IAAK,sBAC7E4Y,YAAUtI,EAAKtQ,IAAK,sBAE5B,IAAI+H,EAAQuI,EAAKtQ,GAAG+Q,iBAAiB,cACjC2kB,EAAa3tB,EAAM6H,EAAM5H,iBAAiB2X,uBAAuB,sBAAsB,IACvF5X,EAAM6H,EAAM5H,iBAAiB2X,uBAAuB,oBAAoB,GACxE+V,IACC9lB,EAAM4J,mBAA0C,WAArBjO,EAAKnD,YAA4BuN,eAAa+f,GAAa,oBACnF/f,eAAa+f,GAAa,sBAC7B9lB,EAAM4J,mBAA0C,WAArBjO,EAAKnD,YAA4BwQ,YAAU8c,GAAa,sBAChF9c,YAAU8c,GAAa,qBAG/BxoB,GAA4C,mBAAnBA,GACzBA,EAAe3C,MAAMqF,GAAQrE,IAiBrC,GAdAqE,EAAM+K,OAAO,iBAAkBpP,GAC/BqE,EAAMoZ,oBACNpZ,EAAM+lB,sBACmB,YAArBpqB,EAAKnD,aACLwH,EAAM+K,OAAO,qBAEjB/K,EAAM+K,OAAO,kBAAoBpX,WAAYgI,IACpB,QAArBA,EAAKnD,aAAgE,QAAtCwH,EAAMrL,aAAaQ,gBAAkE,WAAtC6K,EAAMrL,aAAaQ,gBACjG6K,EAAM+K,OAAOib,GAAiBrqB,GAET,cAArBA,EAAKnD,aACLwH,EAAM+K,OAAOsJ,GAAkB1Y,GAEnCqE,EAAM+K,OAAO,oBAAqBpP,GAC9B6K,cAAmC,WAArB7K,EAAKnD,cAA6BwH,EAAM6P,iBAAkB,CAExElU,EAAS,KAAIA,EAAS,KAAE,GAE5BqE,EAAM6B,QAAQiP,EAAuBnV,KAG7C2a,EAAS1c,UAAU6oB,mBAAqB,WACpC,IAAIziB,EAAQrH,KACR+D,EAAW/D,KACfA,KAAKjI,KAAK6N,kBAAoB,SAAU5C,GACpCqE,EAAM6B,QAAQokB,GAA0BtqB,GACxCqE,EAAM+K,OAAOkb,GAA0BtqB,IAE3ChD,KAAKjI,KAAK+O,gBAAkB,SAAU9D,GAClCqE,EAAM+K,OAAO,kBAAmBpP,GAChCqE,EAAM6B,QAAQqkB,GAAwBvqB,IAE1ChD,KAAKjI,KAAKuM,aAAe,SAAUtB,GAC3BlL,oBAAkBkI,KAAK6Z,YACvBtE,WAAS,cAAc,EAAOvS,GAG9BuS,WAAS,aAAcvV,KAAK6Z,WAAY7W,GAE5Ce,EAAS1E,aAAawR,YAAY7N,IAEtChD,KAAKjI,KAAKwM,cAAgB,SAAUvB,GAC5BlL,oBAAkBkI,KAAK6Z,YACvBtE,WAAS,cAAc,EAAOvS,GAG9BuS,WAAS,aAAcvV,KAAK6Z,WAAY7W,GAE5Ce,EAAS1E,aAAaC,WAAW0D,IAErChD,KAAKjI,KAAKyN,iBAAmB,SAAUxC,GACnCqE,EAAM+K,OAAOob,EAAyBxqB,GACtCqE,EAAM6B,QAAQskB,EAAyBxqB,IAE3ChD,KAAKjI,KAAKwN,gBAAkB,SAAUvC,GAClCqE,EAAM+K,OAAOqb,EAAwBzqB,GACrCqE,EAAM6B,QAAQukB,EAAwBzqB,IAE1ChD,KAAKjI,KAAKwM,cAAgB,SAAUvB,GAChCqE,EAAMhI,aAAaC,WAAW0D,KAGtC2a,EAAS1c,UAAUgpB,mBAAqB,WACpC,IAAI5iB,EAAQrH,KACR+D,EAAW/D,KACfA,KAAKjI,KAAKgP,mBAAqB,SAAU/D,GACrCe,EAASmF,QAAQwkB,GAA2B1qB,IAEhDhD,KAAKjI,KAAK41B,aAAe,SAAU3qB,GAC/Be,EAASmF,Qb3jCK,ea2jCwBlG,IAE1ChD,KAAKjI,KAAK61B,QAAU,SAAU5qB,GACtBqE,EAAMtP,KAAK81B,OACX7qB,EAAKiG,QAAS,GAGlBlF,EAASqO,OAAO0b,GAAmB9qB,GACnCe,EAASmF,QbzkCA,UaykCwBlG,KAErChD,KAAKjI,KAAKg2B,QAAU,SAAU/qB,GACtBqE,EAAMtP,KAAK81B,OACX7qB,EAAKiG,QAAS,GAGlBlF,EAASqO,OAAO4b,GAAmBhrB,GACnCA,EAAKiG,QAAS,KAOtB0U,EAAS1c,UAAUmkB,SAAW,WAC1BplB,KAAKymB,qBACLzmB,KAAKqmB,iBACL9Q,WAAS,qBAAsBvV,KAAKiuB,mBAAoBjuB,KAAKjI,MAE7Dwd,WAAS,mBAAoBvV,KAAQ,iBAAGA,KAAKjI,OAMjD4lB,EAAS1c,UAAUikB,oBAAsB,WACrC,IAAKllB,KAAKtI,QAAQC,SAAYqI,KAAKilB,WAAW7Q,YAAc3b,OAAOC,KAAKsH,KAAKjJ,YAAYY,OAAS,CAC9FqI,KAAKtI,WACL,IAAIoB,OAAS,EAIbA,EAASkH,KAAKjJ,WAAW,GAGzB,IAAK,IADD2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/DuI,KAAK1C,aAAc0C,KAAK7C,iBAAiBuB,QAAQhG,EAAKjB,KACvDuI,KAAKtI,QAAQkB,KAAKF,EAAKjB,MAKvCkmB,EAAS1c,UAAU0mB,oBAAsB,WACrC,IAAIznB,KAYJ,OAVAA,EAAKmkB,YAAcrkB,KAAKhE,aAAaqoB,YACrCnkB,EAAKD,aAAeD,KAAKhE,aAAaiE,aACtCC,EAAKokB,cAAgBtkB,KAAKhE,aAAasoB,cACvCpkB,EAAK1D,eAAsD,WAArCwD,KAAKhE,aAAaQ,eAA8B,SAAW,MACjF0D,EAAKguB,oBAAsBluB,KAAKhE,aAAakyB,oBAC7ChuB,EAAKiuB,kBAAoBnuB,KAAKhE,aAAamyB,kBAC3CjuB,EAAKyS,SAAW3S,KAAKhE,aAAa2W,SAClCzS,EAAKkuB,wBAA0BpuB,KAAKhE,aAAaoyB,wBACjDluB,EAAS,KAAIF,KAAKhE,aAAiB,KACnCkE,EAAKmuB,OAASruB,KAAKhE,aAAaqyB,OACxBruB,KAAKhE,aAAaC,MACtB,IAAK,SAGL,IAAK,QACDiE,EAAKjE,KAAO+D,KAAKhE,aAAaC,KAC9B,MACJ,IAAK,MACDiE,EAAKjE,KAAO,SACZ,MACJ,IAAK,OACDiE,EAAKjE,KAAO,SACZiE,EAAKiuB,mBAAoB,EAGjC,OAAOjuB,GAMXyd,EAAS1c,UAAUwmB,eAAiB,WAChC,GAAIznB,KAAK+jB,iBAAkB,CAEvB,IAAK,IADD7N,KACKze,EAAI,EAAGA,EAAIuI,KAAK+jB,iBAAiBpsB,OAAQF,IAC9C,OACQuI,KAAK+jB,iBAAiBtsB,IAC1B,IAAK,SACL,KAAKmkB,mBAAiB0D,OAClBpJ,EAAMtd,MAAO01B,KAAMtuB,KAAK2f,KAAK4O,YAAY,UACrCltB,OAAQ,aAAc6R,GAAIlT,KAAKiT,QAAQC,GAAK,4BAC5CgD,QAAUoY,KAAMtuB,KAAK2f,KAAK4O,YAAY,SAAUrb,GAAI,UAAaob,KAAMtuB,KAAK2f,KAAK4O,YAAY,SAAUrb,GAAI,YAC/G,MACJ,QACIgD,EAAMtd,KAAKoH,KAAK+jB,iBAAiBtsB,IAG7C,OAAOye,EAGP,OAAO,MAOfyH,EAAS1c,UAAUomB,eAAiB,WAChC,GAAIrnB,KAAK8jB,QAAS,CAEd,IAAK,IADD5N,KACKze,EAAI,EAAGA,EAAIuI,KAAK8jB,QAAQnsB,OAAQF,IACrC,OACQuI,KAAK8jB,QAAQrsB,IACjB,IAAK,SACL,KAAKkkB,cAAY6S,OACbtY,EAAMtd,KAAK,UACX,MACJ,IAAK,QACL,KAAK+iB,cAAY/L,MACbsG,EAAMtd,KAAK,SACX,MACJ,IAAK,YACL,KAAK+iB,cAAY4D,UACb,IAAIkP,EAAczuB,KAAK2f,KAAK4O,YAAY,aACxCrY,EAAMtd,MAAO01B,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAYxb,GAAIlT,KAAKiT,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAKyI,cAAY6D,YACb,IAAImP,EAAU3uB,KAAK2f,KAAK4O,YAAY,eACpCrY,EAAMtd,MAAO01B,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAcxb,GAAIlT,KAAKiT,QAAQC,GAAK,6BAE1E,MACJ,IAAK,SACL,KAAKyI,cAAY8D,UACb,IAAImP,EAAgB5uB,KAAK2f,KAAK4O,YAAY,aAC1CrY,EAAMtd,MACF01B,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAYxb,GAAIlT,KAAKiT,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAKyI,cAAY+D,WACb,IAAImP,EAAiB7uB,KAAK2f,KAAK4O,YAAY,cAC3CrY,EAAMtd,MACF01B,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAaxb,GAAIlT,KAAKiT,QAAQC,GAAK,yBAEnD,MACJ,QACIgD,EAAMtd,KAAKoH,KAAK8jB,QAAQrsB,IAGpC,OAAOye,EAGP,OAAO,MAOfyH,EAAS1c,UAAU2lB,eAAiB,SAAUlvB,GAC1C,IAAIiI,EAASjI,EACbsI,KAAKuiB,eAIL,IAAK,IAHDuM,EACAC,EACAC,KACKv3B,EAAI,EAAGA,EAAIkI,EAAOhI,OAAQF,IAAK,CACpC,IAAIgb,EAAazS,KAAKjI,KAAKyZ,eAAe7R,EAAOlI,GAAGuU,KAGpD,GAFA+iB,EAAatc,MACbqc,KAC+B,iBAApB9uB,KAAKtI,QAAQD,GACpBs3B,EAAW3qB,MAAQ0qB,EAAe1qB,MAAQpE,KAAKtI,QAAQD,QAGvD,IAAK,IAAIw3B,EAAK,EAAGC,EAAKz2B,OAAOC,KAAKiH,EAAOlI,IAAKw3B,EAAKC,EAAGv3B,OAAQs3B,IAAM,CAChE,IAAI5R,EAAO6R,EAAGD,GACVx3B,IAAMuI,KAAKP,iBAA4B,aAAT4d,EAC9ByR,EAAezR,GAAQ1d,EAAOlI,GAAG4lB,GAGjC0R,EAAW1R,GAAQyR,EAAezR,GAAQ1d,EAAOlI,GAAG4lB,GAI5D1d,EAAOlI,GAAGC,QACVsI,KAAK4mB,eAAelvB,EAAQD,GAAGC,SAG/BsI,KAAKuiB,YAAY3pB,KAAK,IAAIkH,EAAOgvB,IAErCE,EAAqBp2B,KAAKm2B,GAE9B,OAAOC,GAQXrR,EAAS1c,UAAUkuB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,IAFDC,GAAiB,EAEZL,EAAK,EAAGM,EAHA92B,OAAOC,KAAK02B,GAGeH,EAAKM,EAAa53B,OAAQs3B,IAAM,CACxE,IAAI5R,EAAOkS,EAAaN,GACxB,OAAQ5R,GACJ,IAAK,UACKxP,cAAc7N,KAAKkX,kBAAoBlX,KAAkB,gBAC3DA,KAAKjI,KAAKL,QAAUsI,KAAK4mB,eAAe5mB,KAAKtI,UAEjD,MACJ,IAAK,kBACDsI,KAAKjI,KAAKy3B,iBACV,MACJ,IAAK,cACDxvB,KAAKjI,KAAK+Y,YAAc9Q,KAAK8Q,YAC7B,MACJ,IAAK,eACD9Q,KAAKjI,KAAKgZ,aAAe+V,sBAAoB9mB,KAAK+Q,cAClDue,GAAiB,EACjB,MACJ,IAAK,uBACDtvB,KAAKjI,KAAKuG,qBAAuB0B,KAAK1B,qBACtC,MACJ,IAAK,UACD0B,KAAKjI,KAAK+rB,QAAU9jB,KAAKqnB,iBACzB,MACJ,IAAK,iBACDrnB,KAAKjI,KAAKysB,eAAiBxkB,KAAKwkB,eAChC,MACJ,IAAK,oBACDxkB,KAAKjI,KAAKiQ,kBAAoB8e,sBAAoB9mB,KAAKgI,mBACvD,MACJ,IAAK,eACDhI,KAAKjI,KAAKuI,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKjI,KAAK03B,kBAAoBzvB,KAAKyvB,kBACnC,MACJ,IAAK,eACDzvB,KAAKjI,KAAK0G,aAAeqoB,sBAAoB9mB,KAAKvB,cAClD,MACJ,IAAK,iBACDuB,KAAKjI,KAAKC,eAAiB8uB,sBAAoB9mB,KAAKhI,gBACpD,MACJ,IAAK,iBACDgI,KAAKjI,KAAKI,eAAiB6H,KAAK7H,eAChC,MACJ,IAAK,iBACD6H,KAAKjI,KAAKK,eAAiB0uB,sBAAoB9mB,KAAK5H,gBACpD,MACJ,IAAK,iBACD4H,KAAKjI,KAAKsI,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKjI,KAAKiM,oBAAsBhE,KAAKgE,oBACrC,MACJ,IAAK,aACDhE,KAAKjI,KAAKqgB,WAAa0O,sBAAoB9mB,KAAKoY,YAChD,MACJ,IAAK,aAID,GAHApY,KAAKma,cAAiBna,KAAKjJ,sBAAsBC,iBAAkBc,oBAAkBkI,KAAKjJ,WAAW+C,QAC9FkG,KAAKjJ,WAAWE,mBAAmBisB,oBAC1CljB,KAAKmlB,gBAAgBnlB,KAAKjJ,YACtBiJ,KAAKma,YAAa,CAClB,GAAI5iB,EAAgByI,MAAO,CACvB,IAAIqO,EAAQ9P,WAAS,QAASyB,KAAKjJ,YACnCiJ,KAAKjI,KAAKhB,YAAeqc,OAAQpT,KAAKtC,SAAU2Q,MAAOA,QAGvDrO,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWg2B,aAAc/sB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SAETsC,KAAK1B,uBACL0B,KAAKjI,KAAKghB,cAAc2W,qBAAsB,QAIlD1vB,KAAK0mB,mBACD1mB,KAAK1B,uBACL0B,KAAKjI,KAAKghB,cAAcvO,sBACxBxK,KAAKjI,KAAKghB,cAAc4W,cAAc,MACtC3vB,KAAKjI,KAAKghB,cAAc6W,eAGhC,MACJ,IAAK,QACD5vB,KAAKjI,KAAKuc,MAAQtU,KAAKsU,MACvB,MACJ,IAAK,oBACG8a,EAAQ/R,GACRrd,KAAKqhB,cAGLrhB,KAAKohB,YAET,MACJ,IAAK,qBACDphB,KAAKjI,KAAK83B,UACV,MACJ,IAAK,YACD7vB,KAAKjI,KAAKqvB,UAAYpnB,KAAKonB,UAC3B,MACJ,IAAK,cACDpnB,KAAKjI,KAAKya,YAAcsU,sBAAoB9mB,KAAKwS,aACjD,MACJ,IAAK,aACDxS,KAAKjI,KAAKmH,WAAac,KAAKd,WAC5B,MACJ,IAAK,gBACDc,KAAKjI,KAAK2H,cAAgBM,KAAKN,cAC/B,MACJ,IAAK,YACDM,KAAKjI,KAAKovB,UAAYnnB,KAAKmnB,UAC3B,MACJ,IAAK,SACIrvB,oBAAkBkI,KAAKylB,SAAoC,iBAAjBzlB,KAAW,SAAgD,IAA9BA,KAAKylB,OAAO/mB,QAAQ,OAC5FsB,KAAKiT,QAAQtY,MAAM8qB,OAASzlB,KAAKylB,QAErCzlB,KAAKjI,KAAK0tB,OAASzlB,KAAKylB,OACxB,MACJ,IAAK,QACI3tB,oBAAkBkI,KAAK4M,QAAkC,iBAAhB5M,KAAU,QAA+C,IAA7BA,KAAK4M,MAAMlO,QAAQ,OACzFsB,KAAKiT,QAAQtY,MAAMiS,MAAQ5M,KAAK4M,OAEpC5M,KAAKjI,KAAK6U,MAAQ5M,KAAK4M,MACvB,MACJ,IAAK,SACD5M,KAAKjI,KAAK8nB,OAAS7f,KAAK6f,OACxB,MACJ,IAAK,mBACD7f,KAAKjI,KAAKyvB,iBAAmBxnB,KAAKwnB,iBAClC,MACJ,IAAK,eACDxnB,KAAKjI,KAAKivB,aAAehnB,KAAKgnB,aAC9B,MACJ,IAAK,cACDhnB,KAAKjI,KAAKkvB,YAAcjnB,KAAKinB,YAC7B,MACJ,IAAK,iBACDjnB,KAAKjI,KAAKmvB,eAAiBlnB,KAAKknB,eAChC,MACJ,IAAK,mBACDlnB,KAAKjI,KAAKisB,iBAAmBhkB,KAAKgkB,iBAClC,MACJ,IAAK,iBACDhkB,KAAKjI,KAAKmsB,eAAiBlkB,KAAKkkB,eAChC,MACJ,IAAK,YACDlkB,KAAKjI,KAAK4uB,UAAY3mB,KAAK2mB,UAC3B,MACJ,IAAK,kBACD3mB,KAAKjI,KAAKqI,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKjI,KAAKwI,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKjI,KAAKwvB,iBAAmBT,sBAAoB9mB,KAAKunB,kBACtD,MACJ,IAAK,gBACDvnB,KAAKjI,KAAKma,cAAgB4U,sBAAoB9mB,KAAKkS,eACnDlS,KAAKjI,KAAK83B,UACV,MACJ,IAAK,mBACD7vB,KAAKjI,KAAKgsB,iBAAmB/jB,KAAKynB,iBAClC,MACJ,IAAK,oBACDznB,KAAKjI,KAAKosB,kBAAoBnkB,KAAKmkB,kBACnC,MACJ,IAAK,iBACDnkB,KAAKjI,KAAKksB,eAAiB6C,sBAAoB9mB,KAAKikB,gBACpD,MACJ,IAAK,kBACDjkB,KAAKjI,KAAK2vB,gBAAkBZ,sBAAoB9mB,KAAK0nB,iBACrD,MACJ,IAAK,eACG1nB,KAAKjI,KAAK81B,QAA0C,WAAhC7tB,KAAKjI,KAAKiE,aAAaC,MAAqBmzB,EAAQ/R,GAAMphB,OACtD,SAAvBmzB,EAAQ/R,GAAMphB,MAA0C,QAAvBmzB,EAAQ/R,GAAMphB,OAChD+D,KAAKjI,KAAK+3B,YAEd9vB,KAAKjI,KAAKiE,aAAegE,KAAK2nB,sBAGlC2H,GACAtvB,KAAKjI,KAAK83B,YAStBlS,EAAS1c,UAAU4I,QAAU,WACzB7J,KAAK+vB,iBACL/vB,KAAK4kB,eACL7iB,EAAOd,UAAU4I,QAAQjH,KAAK5C,MAC1BA,KAAKjI,MACLiI,KAAKjI,KAAK8R,UAEV7J,KAAKilB,YACLjlB,KAAKilB,WAAWpb,UAMpB,IAAK,IAJD+Z,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnDnsB,EAAI,EAAGA,EAAImsB,EAAQjsB,OAAQF,IAC5BuI,KAAK4jB,EAAQnsB,MACbuI,KAAK4jB,EAAQnsB,IAAM,MAG3BuI,KAAKiT,QAAQzF,UAAY,GACzBxN,KAAKjI,KAAO,MAQhB4lB,EAAS1c,UAAU+uB,SAAW,WAC1BjuB,EAAOd,UAAU+uB,SAASptB,KAAK5C,MACzB6N,cAAc7N,KAAKkX,oBAAqB3Y,WAAS,aAAcyB,KAAKjI,OAAUiI,KAAK3G,gBACrF2G,KAAKjI,KAAKi4B,YAQlBrS,EAAS1c,UAAUgvB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACApf,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG3Y,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvCyG,gBAAkB/G,WAAa8vB,qBAI1B/vB,EAAI,EAAGA,EAAIy4B,EAAUv4B,OAAQF,IAElC,IAAK,IADD24B,EAAgBpwB,KAAKkwB,EAAUz4B,IAC1Bw3B,EAAK,EAAGC,EAAKiB,EAAgBD,EAAUz4B,IAAKw3B,EAAKC,EAAGv3B,OAAQs3B,IAAM,QAEhEmB,EADGlB,EAAGD,IAKrB,OADAjvB,KAAKqwB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQCrwB,KAAKtI,SAClCsI,KAAKswB,aAAaJ,IAE7BvS,EAAS1c,UAAUovB,eAAiB,SAAUE,EAAgB74B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACXsI,KAAKwwB,eAAeD,EAAgB74B,EAAQD,IAC5CuI,KAAKqwB,eAAeE,EAAgB74B,EAAQD,GAAGC,UAG/CsI,KAAKwwB,eAAeD,EAAgB74B,EAAQD,KAIxDkmB,EAAS1c,UAAUuvB,eAAiB,SAAUD,EAAgB5wB,GAC1D,IAAK,IAAIlI,EAAI,EAAGA,EAAI84B,EAAe54B,OAAQF,WAChCkI,EAAO4wB,EAAe94B,IAC7BkI,EAAOhC,WAGfggB,EAAS1c,UAAUoiB,kBAAoB,SAAUzlB,GAC7C,GAAK9F,oBAAkB8F,EAAE6yB,SAAzB,CAGA,IAAIpvB,EAASzD,EAAEyD,QACVA,EAAOgH,UAAUC,SAAS,sBAC3BjH,EAAOgH,UAAUC,SAAS,uBAA4BtI,KAAK0wB,gBAAmB1wB,KAAKjI,KAAK81B,QACxF7tB,KAAKwhB,sBAAsBngB,GAE/BrB,KAAK0wB,gBAAiB,EACtB1wB,KAAKoS,OAAO,qBAAuB/Q,OAAQA,MAM/Csc,EAAS1c,UAAUlC,QAAU,WACzB,OAAOiB,KAAKjI,KAAKgH,WAMrB4e,EAAS1c,UAAU0vB,SAAW,WAC1B,OAAO3wB,KAAKjI,KAAK44B,YASrBhT,EAAS1c,UAAU2vB,UAAY,SAAUjyB,EAAMrE,EAAOu2B,GAC9C7wB,KAAK9D,YACL8D,KAAK9D,WAAW00B,UAAUjyB,EAAMrE,EAAOu2B,IAM/ClT,EAAS1c,UAAU6uB,UAAY,WACvB9vB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW4zB,aAM7BnS,EAAS1c,UAAU6vB,SAAW,WACtB9wB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW40B,YAS7BnT,EAAS1c,UAAU8vB,WAAa,SAAUpnB,EAAUvF,EAAO/J,GACnD2F,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW60B,WAAWpnB,EAAUvF,EAAO/J,IAQzDsjB,EAAS1c,UAAU+vB,UAAY,SAAU12B,EAAOqE,GAC5C,GAAIqB,KAAKjI,KAAKmE,WACV,GAAKpE,oBAAkBwC,GAMnB0F,KAAKjI,KAAKmE,WAAW80B,UAAU12B,EAAOqE,OANX,CAC3B,IAAI6nB,EAAWxmB,KAAKjI,KAAKuE,wBAAwBhC,GACjDiC,SAAOiqB,EAAU7nB,GACjBqB,KAAKjI,KAAKmE,WAAW80B,UAAU12B,EAAOksB,KAalD7I,EAAS1c,UAAUgwB,aAAe,SAAUC,EAAWvyB,GAC/CqB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW+0B,aAAaC,EAAWvyB,IAOrDgf,EAAS1c,UAAUkwB,UAAY,SAAUtyB,GACjCmB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAWi1B,UAAUtyB,IAQvC8e,EAAS1c,UAAUmwB,SAAW,SAAUznB,EAAUvF,GAC1CpE,KAAK9D,YACL8D,KAAK9D,WAAWk1B,SAASznB,EAAUvF,IAQ3CuZ,EAAS1c,UAAUowB,mBAAqB,SAAUnb,EAAOob,GACjDtxB,KAAKjI,KAAKw5B,eACVvxB,KAAKjI,KAAKw5B,cAAcC,YAAYtb,EAAOob,IAMnD3T,EAAS1c,UAAUwwB,QAAU,WACrBzxB,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAWu1B,WAS7B9T,EAAS1c,UAAUywB,kBAAoB,SAAUC,EAAGC,GAC5C5xB,KAAK6xB,qBACL7xB,KAAK6xB,oBAAoBH,kBAAkBC,EAAGC,IAOtDjU,EAAS1c,UAAU6wB,UAAY,SAAU5iB,GACjClP,KAAKjI,KAAKmE,YACV8D,KAAKjI,KAAKmE,WAAW41B,UAAU5iB,IAOvCyO,EAAS1c,UAAUvF,wBAA0B,WACzC,OAAOsE,KAAKjI,KAAK2D,2BASrBiiB,EAAS1c,UAAU8wB,aAAe,SAAU95B,EAAKmM,EAAO/J,GACpD2F,KAAKjI,KAAKg6B,aAAa95B,EAAKmM,EAAO/J,IAQvCsjB,EAAS1c,UAAUrC,WAAa,SAAU3G,EAAKwT,GAC3C,IAAIrN,EAAiB4B,KAAK1D,wBACtB01B,EAAahyB,KAAKjI,KAAK2D,0BAA0B,GACjDnB,EAAQ,EACRzB,KACJsF,EAAeqmB,KAAK,SAAUpqB,EAAO5C,EAAGmG,GACpC,OAAIvD,EAAM23B,KAAgB/5B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACfkR,EAAQlR,MAAQA,EAChBkR,EAAQnR,MAAQxB,EAAOwB,MACvBmR,EAAQ/R,aAAeZ,EAAOY,aAC9B+R,EAAQ1O,SAAWjE,EAAOiE,SAC1B0O,EAAQrS,SAAWN,EAAOM,SAC1BqS,EAAQvS,WAAaJ,EAAOI,WAC5BuS,EAAQyB,cAAgBpU,EAAOoU,cAC/BzB,EAAQhS,gBAAkBX,EAAOW,gBACjCgS,EAAQjN,eAAiB1F,EAAO0F,eAChCiN,EAAQlS,SAAWT,EAAOS,SAC1ByG,KAAKjI,KAAK6G,WAAW3G,EAAKwT,IAO9BkS,EAAS1c,UAAUgxB,SAAW,SAAUC,GAChClyB,KAAKjI,KAAKo6B,aACVnyB,KAAKjI,KAAKo6B,YAAYF,SAASC,IAQvCvU,EAAS1c,UAAUmxB,sBAAwB,SAAU7uB,GAC7CvD,KAAKmyB,aACLnyB,KAAKjI,KAAKo6B,YAAYC,sBAAsB7uB,IASpDoa,EAAS1c,UAAUoxB,iBAAmB,SAAU1oB,EAAUmC,GACtD,OAAO9L,KAAKjI,KAAKs6B,iBAAiB1oB,EAAUmC,IAOhD6R,EAAS1c,UAAU4Z,iBAAmB,SAAUzW,GAC5C,OAAIyJ,cAAc7N,KAAKkX,iBACZob,uBAAqBtyB,KAAKjI,KAAKL,QAAS,SAAUwL,EAAM5I,GAC3D,GAAI4I,EAAKkB,QAAUA,EACf,OAAOlB,IAGZ,GAGIovB,uBAAqBtyB,KAAKuiB,YAAa,SAAUrf,EAAM5I,GAC1D,GAAI4I,EAAKkB,QAAUA,EACf,OAAOlB,IAGZ,IAQXya,EAAS1c,UAAUuQ,eAAiB,SAAUxF,GAC1C,OAAOsmB,uBAAqBtyB,KAAKjI,KAAKL,QAAS,SAAUwL,EAAM5I,GAC3D,GAAI4I,EAAK8I,MAAQA,EACb,OAAO9I,IAGZ,IAMPya,EAAS1c,UAAUsxB,oBAAsB,WACrC,OAAOvyB,KAAKjI,KAAKw6B,uBAMrB5U,EAAS1c,UAAUuxB,iBAAmB,WAClC,OAAOxyB,KAAKjI,KAAKy6B,oBAMrB7U,EAAS1c,UAAUwxB,sBAAwB,WACvC,OAAOzyB,KAAKjI,KAAK06B,yBAQrB9U,EAAS1c,UAAUyxB,YAAc,SAAUh6B,EAAMi6B,GAC7C3yB,KAAKjI,KAAK26B,YAAYh6B,EAAMi6B,GAC5B3yB,KAAKygB,qBAQT9C,EAAS1c,UAAU2xB,YAAc,SAAUl6B,EAAMm6B,GAC7C7yB,KAAKjI,KAAK66B,YAAYl6B,EAAMm6B,GAC5B7yB,KAAKygB,qBAOT9C,EAAS1c,UAAU6xB,uBAAyB,SAAU1uB,GAClD,OAAOpE,KAAKjI,KAAK+6B,uBAAuB1uB,IAO5CuZ,EAAS1c,UAAU8xB,uBAAyB,SAAUz4B,GAClD,OAAO0F,KAAKjI,KAAKg7B,uBAAuBz4B,IAO5CqjB,EAAS1c,UAAU+xB,qBAAuB,SAAUhnB,GAChD,OAAOhM,KAAKjI,KAAKi7B,qBAAqBhnB,IAO1C2R,EAAS1c,UAAUgyB,sBAAwB,SAAU7uB,GACjD,OAAOpE,KAAKjI,KAAKk7B,sBAAsB7uB,IAO3CuZ,EAAS1c,UAAUyQ,oBAAsB,SAAU1F,GAC/C,OAAOhM,KAAKjI,KAAK2Z,oBAAoB1F,IAMzC2R,EAAS1c,UAAUrB,WAAa,SAAUszB,GACtC,OAAIrlB,cAAc7N,KAAKkX,iBACZlX,KAAKjI,KAAKL,SAGjBsI,KAAKygB,kBAAkBzgB,KAAKjI,KAAK6H,WAAWszB,IACrClzB,KAAKuiB,cAGpB5E,EAAS1c,UAAUwf,kBAAoB,SAAU9gB,GAC7C,IAAIyb,EACAhX,EACA+uB,EAAcr7B,oBAAkB6H,GAAUK,KAAKjI,KAAK6H,aAAeD,GACzC,IAA1BK,KAAKP,iBAA2B3H,oBAAkBq7B,EAAYnzB,KAAKP,iBAAiBkT,YACpFyI,EAAO+X,EAAYnzB,KAAKP,iBAAiBkT,SACzCvO,EAAQ+uB,EAAYnzB,KAAKP,iBAAiB2E,OAE9CpE,KAAKuiB,eAGL,IAAK,IADDwM,EADAqE,GAAgB,EAEX37B,EAAI,EAAGA,EAAI07B,EAAYx7B,OAAQF,IAAK,CACzCs3B,KACA,IAAK,IAAIE,EAAK,EAAGC,EAAKz2B,OAAOC,KAAKy6B,EAAY17B,IAAKw3B,EAAKC,EAAGv3B,OAAQs3B,IAAM,CACrE,IAAI5R,EAAO6R,EAAGD,GACTphB,cAAuB,SAATwP,IACf0R,EAAW1R,GAAQ8V,EAAY17B,GAAG4lB,IAG1Crd,KAAKuiB,YAAY3pB,KAAK,IAAIkH,EAAOivB,IAC7B3qB,IAAUpE,KAAKuiB,YAAY9qB,GAAG2M,OAAWtM,oBAAkBsjB,IAAkB,KAATA,IACpEpb,KAAKuiB,YAAY9qB,GAAGkb,SAAWyI,GAGvC,IAAKvN,eAAe7N,KAAKkX,iBAAkB,CAEvClX,KAAU,WAAK,WACXA,KAAKjI,KAAKL,QAAQC,SAAWqI,KAAKuiB,YAAY5qB,SAC9Cy7B,GAAgB,GAEfA,GACDpzB,KAAKsd,eAAgB5lB,QAASsI,KAAKuiB,cAAe,GAEtDviB,KAAU,eAAI4c,EAElB,OAAO5c,KAAKuiB,aAMhB5E,EAAS1c,UAAUoyB,WAAa,WAC5B,OAAOrzB,KAAKjI,KAAKs7B,cAErB1V,EAAS1c,UAAUid,yBAA2B,WAE1Cle,KAAKjI,KAAa,qBAAEiK,MAAMhC,OAE9B2d,EAAS1c,UAAUqyB,aAAe,SAAUC,EAAc77B,GAEtDsI,KAAKjI,KAAa,aAAEiK,MAAMhC,MAAOuzB,EAAc77B,KAEnDimB,EAAS1c,UAAUmsB,oBAAsB,WACrCptB,KAAKsd,eAAgBllB,eAAgBO,YAAU,aAAcqH,KAAKjI,KAAKK,kBAAmB,GAC1F4H,KAAKsd,eAAgBvM,aAAcpY,YAAU,aAAcqH,KAAKjI,KAAKgZ,gBAAiB,GACtF/Q,KAAKsd,eAAgBtlB,eAAgBW,YAAU,aAAcqH,KAAKjI,KAAKC,kBAAmB,GAC1FgI,KAAKsd,eAAgB7e,aAAc9F,YAAU,aAAcqH,KAAKjI,KAAK0G,gBAAiB,IAM1Fkf,EAAS1c,UAAUgW,gBAAkB,WACjC,OAAOjX,KAAKjI,KAAKkf,mBAMrB0G,EAAS1c,UAAUuyB,YAAc,WAG7B,IAAK,IAFDC,KACA1rB,EAAO/H,KAAKjI,KAAKy7B,cACZ/7B,EAAI,EAAGe,EAAMuP,EAAKpQ,OAAQF,EAAIe,EAAKf,IACnCsQ,EAAKtQ,GAAG4Q,UAAUC,SAAS,iBAC5BmrB,EAAM76B,KAAKmP,EAAKtQ,IAGxB,OAAOg8B,GAOX9V,EAAS1c,UAAU3E,sBAAwB,WACvC,OAAO0D,KAAKjI,KAAKigB,iBAMrB2F,EAAS1c,UAAU9E,gBAAkB,WACjC,OAAO6D,KAAKjI,KAAKmE,WAAWC,mBAMhCwhB,EAAS1c,UAAUiL,iBAAmB,WAClC,OAAOlM,KAAKjI,KAAKmU,oBAMrByR,EAAS1c,UAAUyyB,eAAiB,WAChC,OAAO1zB,KAAKjI,KAAK27B,kBAOrB/V,EAAS1c,UAAUnC,cAAgB,SAAUxE,GACzC,OAAO0F,KAAKjI,KAAK+G,cAAcxE,IAOnCqjB,EAAS1c,UAAU0yB,WAAa,SAAUtyB,GACtC,OAAOrB,KAAKjI,KAAK47B,WAAWtyB,IAOhCsc,EAAS1c,UAAU2yB,oBAAsB,SAAUxvB,GAC/C,OAAOpE,KAAKjI,KAAK67B,oBAAoBxvB,IAMzCuZ,EAAS1c,UAAU8H,kBAAoB,WAEnC,IAAK,IADD8qB,KACK5E,EAAK,EAAGC,EAAKlvB,KAAKuiB,YAAa0M,EAAKC,EAAGv3B,OAAQs3B,IAAM,CAC1D,IAAIljB,EAAMmjB,EAAGD,GACTljB,EAAI+nB,SACJD,EAAKj7B,KAAKmT,GAGlB,OAAO8nB,GAKXlW,EAAS1c,UAAU8W,YAAc,WAC7BA,cAAY/X,KAAKiT,UAKrB0K,EAAS1c,UAAUyU,YAAc,WAC7BA,cAAY1V,KAAKiT,UAKrB0K,EAAS1c,UAAU4uB,QAAU,WACzB7vB,KAAKmlB,gBAAgBnlB,KAAKjJ,YAC1BiJ,KAAKjI,KAAKhB,WAAeiJ,KAAKjJ,sBAAsBC,cAChC,IAAIA,cAAYgJ,KAAKjJ,WAAWA,WAAYiJ,KAAKjJ,WAAWg2B,aAAc/sB,KAAKjJ,WAAWE,SAA1G+I,KAAKtC,SACTsC,KAAKjI,KAAK83B,WAOdlS,EAAS1c,UAAUyK,kBAAoB,WACnC,OAAO1L,KAAKsmB,gBAAgB5W,qBAMhCiO,EAAS1c,UAAU0O,qBAAuB,WACtC,OAAO3P,KAAKsmB,gBAAgB3W,wBAKhCgO,EAAS1c,UAAU+J,iBAAmB,SAAU+oB,GAC5C/zB,KAAKsmB,gBAAgBtb,iBAAiB+oB,IAK1CpW,EAAS1c,UAAUuuB,eAAiB,SAAUwE,GACtCl8B,oBAAkBk8B,IAAcA,GAChCh0B,KAAKjI,KAAKL,QAAUsI,KAAK4mB,eAAe5mB,KAAKtI,SAC7CsI,KAAKjI,KAAKy3B,kBAGVxvB,KAAKjI,KAAKulB,eAAgB5lB,QAASsI,KAAK4mB,eAAe5mB,KAAKtI,WAAY,IAMhFimB,EAAS1c,UAAUgzB,cAAgB,WAC/Bj0B,KAAKjI,KAAKk8B,iBAOdtW,EAAS1c,UAAUugB,sBAAwB,SAAUngB,GACjD,GAA+B,UAA3BrB,KAAKhE,aAAaC,KAAkB,CAGpC,GAAI+D,KAAK7D,kBAAkB6D,KAAK8d,gBAAgBnmB,QAC5CqI,KAAK7D,kBAAkB6D,KAAK+d,gBAAgBpmB,QAAUqI,KAAK7D,kBAAkB6D,KAAKsT,cAAc3b,OAAQ,CACxG,IAAIu8B,EAAYl0B,KAAKjI,KAAKmE,WAAc,UAGxC,OAFA8D,KAAKjI,KAAKmE,WAAqB,WAAE,aAAcg4B,QAC/Cl0B,KAAKm0B,cAAgB9yB,IAI7B,GAAIrB,KAAKwS,YAAa,CAClB,IAAI4hB,EAAU/yB,EAAO0J,QAAQ,kBAAkB4W,cAC3C7oB,EAASkH,KAAK1D,wBAAwB83B,EAAQzqB,UAC9CtI,EAAOgH,UAAUC,SAAS,oBAC1BtI,KAAKuhB,YAAY6S,EAASt7B,GAG1BkH,KAAK0hB,UAAU0S,EAASt7B,OAG3B,CAEGA,GADAs7B,EAAUp0B,KAAKjI,KAAK47B,WAAWtyB,IACdoK,QACjBpK,EAAOgH,UAAUC,SAAS,oBAC1BtI,KAAKuhB,YAAY6S,EAAQv1B,IAAK/F,GAG9BkH,KAAK0hB,UAAU0S,EAAQv1B,IAAK/F,KAQxC6kB,EAAS1c,UAAUygB,UAAY,SAAU7iB,EAAK/F,GAC1C,IAAIuO,EAAQrH,KACZlH,EAASkH,KAAKq0B,yBAAyBx1B,EAAK/F,IACvChB,oBAAkB+G,IAAQA,EAAIW,MAAM,GAAG6I,UAAUC,SAAS,kBAC3DtI,KAAKmqB,cAActrB,GAAK,GAE5B,IAAImE,GAASrE,KAAM7F,EAAQ+F,IAAKA,EAAKoK,QAAQ,GAC7CjJ,KAAKkJ,QbjtEU,YaitEgBlG,EAAM,SAAUsxB,GAC3C,IAAKA,EAAcrrB,SACf5B,EAAMktB,eAAe,SAAU11B,EAAK/F,KAC9BjC,EAAawQ,IAAWzN,EAAUyN,MAAY9P,EAAgB8P,IAAQ,CACxE,IAAImtB,GAAiB71B,KAAM7F,EAAQ+F,IAAKA,GACxCwI,EAAM6B,QAAQ4P,EAAiB0b,OAK/C7W,EAAS1c,UAAUozB,yBAA2B,SAAUx1B,EAAK/F,GAUzD,OATIkH,KAAK8Q,aAAkD,QAAnC9Q,KAAK+Q,aAAaC,cAA0BhR,KAAKwiB,aAAe1qB,oBAAkBgB,KACrGjC,EAAamJ,MACdlH,EAASkH,KAAKtC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAEnE,kBAGR3B,oBAAkBgB,KACvBA,EAASkH,KAAKjI,KAAKuE,wBAAwBuC,EAAI8K,WAE5C7Q,GAMX6kB,EAAS1c,UAAUsgB,YAAc,SAAU1iB,EAAK/F,GAC5C,IAAIuO,EAAQrH,KAERgD,GAASrE,KADb7F,EAASkH,KAAKq0B,yBAAyBx1B,EAAK/F,GACjB+F,IAAKA,EAAKoK,QAAQ,GAC7CjJ,KAAKkJ,Qb3uEW,aa2uEgBlG,EAAM,SAAUyxB,GAC5C,IAAKA,EAAexrB,OAAQ,CACxB5B,EAAMktB,eAAe,WAAY11B,EAAK/F,GACtC,IAAI07B,GAAiB71B,KAAM7F,EAAQ+F,IAAKA,GACnChI,EAAawQ,IACdA,EAAM6B,QAAQwrB,EAAkBF,OAShD7W,EAAS1c,UAAU0zB,cAAgB,SAAUp6B,GACzC,IAAMyF,KAAK8Q,aAAkD,QAAnC9Q,KAAK+Q,aAAaC,cAA2BhR,KAAK1B,wBAA0BzH,EAAamJ,MAAO,CACtH,IAAI8O,EAAM9O,KAAKjI,KAAKhB,WAAW4G,OAAO,SAAUC,GAI5C,OAHIA,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IACjCqD,EAAErE,UAAW,GAEVqE,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IAE5CyF,KAAK0hB,UAAU,KAAM5S,OAMhB,CAHDA,EAAM9O,KAAK40B,iBAAiBr6B,GAGhC,IAAK,IAFDsE,EAAMlG,YAAU,OAAQmW,GACxBhW,EAASH,YAAU,UAAWmW,GACzBrX,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/BuI,KAAK0hB,UAAU7iB,EAAIpH,GAAIqB,EAAOrB,MAI1CkmB,EAAS1c,UAAU2zB,iBAAmB,SAAUr6B,GAC5C,IAAIwN,EAAO/H,KAAKjB,UAAUpB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE2O,UAAU7N,QAAQ,QAAUnE,KAC9BqD,EAAEkN,cAAc,wBAA0BlN,EAAEkN,cAAc,wBAItE,OADYxS,QADE0H,KAAK1D,wBAAwBqB,OAAO,SAAUC,GAAK,OAAOA,EAAErD,QAAUA,GAASqD,EAAEnE,kBACjEsO,KAAMA,IAOxC4V,EAAS1c,UAAU4zB,gBAAkB,SAAUt6B,GAC3C,IAAMyF,KAAK8Q,aAAkD,QAAnC9Q,KAAK+Q,aAAaC,cAA2BhR,KAAK1B,wBAA0BzH,EAAamJ,MAAO,CACtH,IAAIlH,EAASkH,KAAKjI,KAAKhB,WAAW4G,OAAO,SAAUC,GAI/C,OAHIA,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IACjCqD,EAAErE,UAAW,GAEVqE,EAAEnE,iBAAmBmE,EAAErD,QAAUA,IAE5CyF,KAAKuhB,YAAY,KAAMzoB,QAMvB,IAAK,IAHDgW,EAAM9O,KAAK40B,iBAAiBr6B,GAC5BwN,EAAOpP,YAAU,OAAQmW,GACzBxW,EAAUK,YAAU,UAAWmW,GAC1BrX,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCuI,KAAKuhB,YAAYxZ,EAAKtQ,GAAIa,EAAQb,IAG1C,IAAKuI,KAAKjI,KAAKghB,cAAc2W,qBAAuB1vB,KAAK1B,sBAAwB0B,KAAKjB,WAC/EiB,KAAKvC,WAAW9F,SAAWqI,KAAKjB,UAAUpH,OAAQ,CAErDqI,KAAKjI,KAAKghB,cAAc+b,YAAc,EACtC90B,KAAKjI,KAAKghB,cAAsB,UAAK,IAO7C4E,EAAS1c,UAAUmgB,UAAY,WAC3BphB,KAAK+0B,kBAAkB,WAM3BpX,EAAS1c,UAAUogB,YAAc,WAC7BrhB,KAAK+0B,kBAAkB,aAE3BpX,EAAS1c,UAAU8zB,kBAAoB,SAAUt5B,GAC7C,IAAIsM,EAAO/H,KAAKjB,UAAUpB,OAAO,SAAUC,GACvC,OAAOA,EAAEkN,cAAc,eAA4B,WAAXrP,EAAsB,WAAa,aAI/E,GAFAuE,KAAKwiB,aAAc,EACnBxiB,KAAKyiB,eAAgB,GACfziB,KAAK8Q,aAAkD,QAAnC9Q,KAAK+Q,aAAaC,cAA2BhR,KAAK1B,wBAA0BzH,EAAamJ,MAM/G,GALAA,KAAKtC,SAASC,OAAO,SAAUC,GACvBA,EAAEnE,kBACFmE,EAAErE,SAAsB,aAAXkC,KAGjBsM,EAAKpQ,OACM,aAAX8D,EAAwBuE,KAAKuhB,YAAYxZ,EAAK,IAAM/H,KAAK0hB,UAAU3Z,EAAK,QAEvE,CACD,IAAIitB,EAAsBh1B,KAAKiR,kBAC/BjR,KAAKsd,eAAgBrM,mBAAmB,IAAQ,GAChDjR,KAAKjI,KAAKo6B,YAAYF,SAAS,GAC/BjyB,KAAKsd,eAAgBrM,kBAAmB+jB,IAAuB,QAInE,IAAK,IAAIv9B,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAClB,aAAXgE,EAAwBuE,KAAKuhB,YAAYxZ,EAAKtQ,IAAMuI,KAAK0hB,UAAU3Z,EAAKtQ,IAGhFuI,KAAKwiB,aAAc,EACnBxiB,KAAKyiB,eAAgB,GAEzB9E,EAAS1c,UAAUszB,eAAiB,SAAU94B,EAAQoD,EAAK/F,EAAQie,GAC/D,IAAIud,GAAkBz1B,IAAKA,EAAKF,KAAM7F,EAAQgR,aAAejK,YAAapE,IACrE5E,EAAamJ,OAAoB,WAAXvE,GAAuBuE,KAAK7E,iBAAmB5D,EAAgByI,OACtFA,KAAKi1B,oBAAoBX,GAE7B,IAAItd,EAAWhX,KAAKjB,UACpB,GAAIiB,KAAKwS,YAAa,CAClB,IAAIzK,EAAO/H,KAAKiX,kBAAkBlP,KAClCiP,KAAczO,MAAM3F,KAAKmF,GAa7B,GAVIjQ,oBAAkB+G,GAElBA,EAAMmY,EADKhX,KAAK1D,wBAAwBoC,QAAQ5F,KAIpC+F,EAAIsN,aAAa,iBAE5BrU,oBAAkB+G,IACnBA,EAAIoO,aAAa,gBAA4B,WAAXxR,EAAsB,OAAS,WAE/DuE,KAAK8Q,aAAkD,QAAnC9Q,KAAK+Q,aAAaC,cAA2BhR,KAAK1B,uBAA0BzH,EAAamJ,OAC3GzI,EAAgByI,MAGnB,CACD,IAAIk1B,OAAgB,EACpB,GAAe,WAAXz5B,EAAqB,CACrBy5B,EAAgB,YACXne,IACDje,EAAOS,UAAW,EAClByG,KAAK4d,mBAAmB9kB,EAAOM,UAAUG,SAAWT,EAAOS,UAE/D,IAAI4d,EAAYtY,EAAIuY,uBAAuB,sBAAsB,GAKjE,GAJIL,IAAYjf,oBAAkBgB,EAAOkH,KAAK1G,sBAC1CR,EAAOkH,KAAK1G,qBAAuBxB,oBAAkBqf,KACrDA,EAAYtY,EAAIuY,uBAAuB,oBAAoB,IAE3Dtf,oBAAkBqf,GAClB,OAECA,EAAU9O,UAAUC,SAAS,qBAC9B+H,YAAU8G,GAAY,oBAE1B/J,eAAa+J,GAAY,0BAExB,CACD+d,EAAgB,OACXne,IAAWxf,EAAgByI,QAC5BlH,EAAOS,UAAW,EAClByG,KAAK4d,mBAAmB9kB,EAAOM,UAAUG,SAAWT,EAAOS,UAE3D4d,EAAYtY,EAAIuY,uBAAuB,oBAAoB,GAK/D,GAJIL,IAAYjf,oBAAkBgB,EAAOkH,KAAK1G,uBACzCR,EAAOkH,KAAK1G,qBAAuBxB,oBAAkBqf,KACtDA,EAAYtY,EAAIuY,uBAAuB,sBAAsB,IAE7Dtf,oBAAkBqf,GAClB,OAECA,EAAU9O,UAAUC,SAAS,uBAC9B+H,YAAU8G,GAAY,sBAE1B/J,eAAa+J,GAAY,oBAE7B,IAAIge,EAAane,EAASrZ,OAAO,SAAU8D,GACvC,OAAOA,EAAE4G,UAAUC,SAAS,uBAAyBxP,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAUlG,GARI1D,EAAamJ,QAAUpG,EAAUoG,MACjCA,KAAKmF,aAAa1J,EAAQoD,EAAK/F,EAAQie,GAGlCxf,EAAgByI,OAAoB,aAAXvE,GAC1BuE,KAAKo1B,YAAY35B,EAAQoD,EAAK/F,EAAQie,GAG1C/W,KAAKsqB,kBAAoBzrB,EAAIW,MAAM,GAAG6I,UAAUC,SAAS,iBAIzD,IAAK,IAHDqiB,EAAY3qB,KAAKjB,UAGZtH,GAFLsQ,EAAO/H,KAAKiX,kBAAkBlP,MAClC4iB,KAAepiB,MAAM3F,KAAKmF,IACHpQ,OAAS,GAAGF,EAAI,EAAGA,IACtC,IAAKgD,EAASkwB,EAAUlzB,IAAK,CACzB,IACI49B,EADQr1B,KAAKiX,kBACGqe,aAChBC,EAAev1B,KAAKqzB,aAAakC,aACrCv1B,KAAKmqB,cAAcQ,EAAUlzB,GAAI49B,GAAWE,GAC5C,MAIZv1B,KAAKoS,OAAO,qBAAuB+iB,WAAYA,EAAY15B,OAAQy5B,EAAep8B,OAAQA,EAAQ+F,IAAKA,IACvGmB,KAAKyqB,aAAazT,QApElBhX,KAAKoS,OAAOojB,GAAmC/5B,OAAQA,EAAQoD,IAAKA,EAAK/F,OAAQA,KAuEzF6kB,EAAS1c,UAAUg0B,oBAAsB,SAAUX,GAC/C,IAAIjtB,EAAQrH,KACRy1B,EAAO,IAAI5K,WAEfyJ,EAA2B,cAAImB,EAAK1K,QACpC,IAAIjyB,EAASw7B,EAAc31B,KAC3BqB,KAAKkJ,QAAQyiB,EAAwB2I,GACrCmB,EAAKrJ,QAAQlX,KAAK,SAAUtX,GACxB,GAAI02B,EAAcxqB,UAAUnS,OAAQ,CAGhC,IAAK,IAFD6hB,EAAenS,EAAc,SAC7B/M,EAAQ,EACH7C,EAAI,EAAGA,EAAI+hB,EAAY7hB,OAAQF,IACpC,GAAI+hB,EAAY/hB,GAAGsF,WAAajE,EAAOiE,SAAU,CAC7CzC,EAAQ7C,EACR,MAOH,IAJDi+B,EAASn3B,WAAS,SAAU8I,EAAMtQ,YAClC+S,EAAY/P,EAAYu6B,EAAcxqB,WACtC6rB,EAAW78B,EAAOuO,EAAM/J,eACxBxE,EAAOuO,EAAM/J,cAAc3F,OAASmS,EAAUnS,OAASmB,EAAOuO,EAAM/J,cAAc3F,OAA4BmS,EAAUnS,OAC5H,IAASF,EAAI,EAAGA,EAAIk+B,EAAUl+B,IACtBqB,EAAOuO,EAAM/J,eACbo4B,EAAO/3B,OAAO,SAAUC,EAAGnG,GACnBmG,EAAEyJ,EAAMlK,mBAAqBrE,EAAOuO,EAAMjK,YAC1Cs4B,EAAOr4B,OAAO5F,EAAG,KAIzBqS,EAAUrS,IACVqS,EAAUrS,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCuP,EAAUrS,GAAG6C,MAAQqc,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC/M,EAAUrS,GAAGyB,WAAaqD,YAAWzD,GACrCgR,EAAUrS,GAAGsF,SAAWR,YAAWuN,EAAUrS,WACtCqS,EAAUrS,GAAGyB,WAAWQ,oBACxBoQ,EAAUrS,GAAGsF,SAAS7D,WAC7B4Q,EAAUrS,GAAG+G,eAAiB1F,EAAOM,SACrC0Q,EAAUrS,GAAG2B,SAAWsd,SAAOrP,EAAM4L,QAAQC,GAAK,UAClDqC,WAAS,sBAAwBzL,EAAUrS,GAAG2B,SAAU0Q,EAAUrS,GAAI4P,KACjEvP,oBAAkBgS,EAAUrS,GAAG4P,EAAM/J,gBACrCwM,EAAUrS,GAAG4P,EAAMwN,kBAAoBtd,EAAgB8P,MACxDyC,EAAUrS,GAAGgC,iBAAkB,GAEnC+f,EAAYnc,OAAO/C,EAAQ,EAAI7C,EAAGqB,EAAOuO,EAAM/J,eAAiBxE,EAAOuO,EAAM/J,cAAc7F,GAAK,EAAI,EAAGqS,EAAUrS,KAGjH+hB,EAAYnc,OAAO/C,EAAQ,EAAI7C,EAAG,GAG1C+hB,EAAYlf,GAAO+M,EAAM/J,cAAgBwM,EACzC0P,EAAYlf,GAAOZ,aAAeoQ,EAClC0P,EAAYlf,GAAOf,UAAW,EAC9Bgc,WAAS,sBAAwBiE,EAAYlf,GAAOlB,SAAUogB,EAAYlf,GAAQ+M,GAClF,IAAK,IAAIlN,EAAI,EAAGA,EAAIm6B,EAAcxqB,UAAUnS,OAAQwC,IAChDu7B,EAAO98B,KAAK07B,EAAcxqB,UAAU3P,IAG5CkN,EAAMqkB,iBAAkB,EACxBrkB,EAAMtP,KAAK83B,UACXxoB,EAAM6B,QAAQ4P,EAAiBwb,MAGvC3W,EAAS1c,UAAUkE,aAAe,SAAU1J,EAAQoD,EAAK/F,EAAQie,GAC7D,IAAIC,EAAWhX,KAAKjB,UACpB,GAAIiB,KAAKwS,YAAa,CAClB,IAAIojB,EAAS51B,KAAKiX,kBAAkBlP,KACpCiP,KAAczO,MAAM3F,KAAKgzB,GAE7B,IAAI5yB,GAASrE,KAAM7F,EAAQ+F,IAAKA,GAC5BkJ,KAIJ,GAHAA,EAAOiP,EAASrZ,OAAO,SAAU8D,GAC7B,OAAOA,EAAEqJ,cAAc,kBAAoBhS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXkB,EAAqB,CACrBuE,KAAKoS,OAAO6B,GAAuBnb,OAAQA,EAAQiP,KAAMA,EAAMwP,UAAW1Y,IAC1E,IAAIg3B,GAAWh3B,IAAKA,EAAKF,KAAM7F,GAC3BiP,EAAKpQ,OAAS,GACdqI,KAAKkJ,QAAQ4P,EAAiB+c,QAIlC71B,KAAK81B,qBAAsBh9B,OAAQA,EAAQiP,KAAMA,IACjD/H,KAAKkJ,QAAQwrB,EAAkB1xB,IAGvC2a,EAAS1c,UAAUm0B,YAAc,SAAU35B,EAAQoD,EAAK/F,EAAQie,GAC5D,IAAIrd,EAAesG,KAAK1D,wBAAwBqB,OAAO,SAAUC,GAC7D,OAAOA,EAAEY,iBAAmB1F,EAAOM,WAEnC4G,KAAKsqB,iBAAmBzrB,EAAIW,MAAM,GAAG6I,UAAUC,SAAS,kBACxDtI,KAAKmqB,cAActrB,GAAK,GAE5B,IAAIk3B,EACA/e,EAAWhX,KAAKjB,UACpB,GAAIiB,KAAKwS,YAAa,CAClB,IAAIwjB,EAASh2B,KAAKiX,kBAAkBlP,KACpCiP,KAAczO,MAAM3F,KAAKozB,GAE7B,IAAId,EAA4B,WAAXz5B,EAAuB,YAAc,OAEtDsM,GADQrO,EAAa,GAAGR,WAAWoB,MAC5B0c,EAASrZ,OAAO,SAAU8D,GACjC,OAAOA,EAAEqJ,cAAc,kBAAoBhS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpFyF,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9C42B,EAAc/1B,KAAKi2B,iBAAiBt4B,OAAO,SAAU8D,GACjD,OAAOA,EAAEqJ,cAAc,kBAAoBhS,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAK,IAAI9C,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAC7BsQ,EAAKtQ,GAAGkD,MAAMG,QAAUo6B,EACnBp9B,oBAAkBi+B,KACnBA,EAAYt+B,GAAGkD,MAAMG,QAAUo6B,GAEnCl1B,KAAKoS,OAAO,kBAAoBvT,IAAKkJ,EAAKtQ,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAX+B,IACrD3D,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/DyG,KAAKu0B,eAAe94B,EAAQsM,EAAKtQ,GAAIiC,EAAajC,IAAI,GAClDuI,KAAKN,eAAiBM,KAAKP,kBAAoB3H,oBAAkBi+B,IACjE/1B,KAAKu0B,eAAe94B,EAAQs6B,EAAYt+B,GAAIiC,EAAajC,IAAI,KAK7EkmB,EAAS1c,UAAUwpB,aAAe,SAAU1iB,GACxC,GAAI/H,KAAKgnB,eAAiBhnB,KAAKwS,YAE3B,IAAK,IADD0jB,EAAkB,EACbz+B,EAAI,EAAGsQ,GAAQtQ,EAAIsQ,EAAKpQ,OAAQF,IAAK,CAC1C,IAAI0+B,EAAUpuB,EAAKtQ,GACW,SAA1B0+B,EAAQx7B,MAAMG,UACVq7B,EAAQ9tB,UAAUC,SAAS,aAC3B8E,eAAa+oB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQ9tB,UAAUC,SAAS,iBAAoB6tB,EAAQ9tB,UAAUC,SAAS,gBACxG+H,YAAU8lB,GAAU,YAEnBA,EAAQ9tB,UAAUC,SAAS,iBAAoB6tB,EAAQ9tB,UAAUC,SAAS,gBAC3E4tB,OAMpBvY,EAAS1c,UAAU4rB,sBAAwB,SAAU7pB,GACjD,GAAIhD,KAAKwS,YAAa,CAClB,IAAIzK,EAAO/H,KAAKiX,kBAAkBlP,KAClCA,KAAUQ,MAAM3F,KAAKmF,GACrB,IAAK,IAAItQ,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAAK,CAClC,IAAI2+B,EAAQp2B,KAAKjI,KAAKkf,kBAAkBlP,KAAKtQ,GAAG+H,MAAMQ,KAAKP,iBACvDZ,EAAMkJ,EAAKtQ,GAEX4+B,GAAQ13B,KADEqB,KAAKjI,KAAKu+B,gBAAgB7+B,GAAGkH,KAChBE,IAAKA,EAAKU,KAAM62B,EAAOz2B,OAAQK,KAAKJ,aAAaI,KAAKP,kBACjFO,KAAKX,aAAaC,WAAW+2B,MAIzC1Y,EAAS1c,UAAU60B,oBAAsB,SAAUhf,EAAYC,GACtDA,IACDD,EAAWhe,OAAOS,UAAW,GAIjC,IAAK,IADDkV,EADA1G,EAAO+O,EAAW/O,KAEbtQ,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAAK,CAC9BoW,cAAc7N,KAAKkX,kBACnB9J,eAAarF,EAAKtQ,IAAK,qBACvB4Y,YAAUtI,EAAKtQ,IAAK,uBAGpBsQ,EAAKtQ,GAAGkD,MAAMG,QAAU,OAE5B,IAAIy7B,EAAexuB,EAAKtQ,GAAGqT,cAAc,sBAIzC,GAHKhT,oBAAkBy+B,IACnBv2B,KAAKjI,KAAK0f,gBAAgB+e,SAASD,GAEnCxuB,EAAKtQ,GAAGqT,cAAc,6CAA8C,CACpE,IAAI2rB,EAAgB1uB,EAAKtQ,GAAGqT,cAAc,6CAC1C2D,EAAczO,KAAKwS,YAAcxS,KAAKjI,KAAKuE,wBAAwByL,EAAKtQ,GAAGkS,UACvE3J,KAAKjI,KAAKsf,oBAAoBtP,EAAKtQ,GAAG0U,aAAa,aAAaxN,MAC/D7G,oBAAkB2+B,IAAkBhoB,EAAYlV,WACjD6T,eAAaqpB,GAAgB,oBAC7BpmB,YAAUomB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ32B,KAAKjB,UACR63B,EAAM,EAAGA,EAAMD,EAAMh/B,OAAQi/B,IAC9BD,EAAMC,GAAK9rB,cAAc,kBAAoB2D,EAAYnU,MAAQ,SAAWmU,EAAYlU,MAAQ,KAChGm8B,EAAK99B,KAAK+9B,EAAMC,IAGpBF,EAAK/+B,QAAU8W,EAAYlV,UAC3ByG,KAAK81B,qBAAsBh9B,OAAQ2V,EAAa1G,KAAM2uB,IAAQ,MAQ9E/Y,EAAS1c,UAAUskB,YAAc,WAC7BvlB,KAAKmK,GAAG,gBAAiBnK,KAAK62B,kBAAmB72B,MACjDA,KAAKjI,KAAKoS,GAAG,cAAenK,KAAKimB,gBAAiBjmB,OAEtD2d,EAAS1c,UAAU41B,kBAAoB,SAAUC,GAC7C92B,KAAK6T,YAAcijB,GAKvBnZ,EAAS1c,UAAU8uB,eAAiB,WAC5B/vB,KAAKyK,cAGTzK,KAAK0K,IAAI,gBAAiB1K,KAAK62B,mBAC/B72B,KAAKjI,KAAK2S,IAAI,cAAe1K,KAAKimB,mBAgBtCtI,EAAS1c,UAAU81B,eAAiB,SAAU7F,EAAW8F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIt3B,KAAKjI,KAAKg/B,eAAe7F,EAAW8F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5H3Z,EAAS1c,UAAUs2B,eAAiB,WAChCv3B,KAAKjI,KAAKw/B,kBASd5Z,EAAS1c,UAAUu2B,0BAA4B,SAAUpzB,EAAOqzB,GAC5Dz3B,KAAKjI,KAAKy/B,0BAA0BpzB,EAAOqzB,IAQ/C9Z,EAAS1c,UAAU6gB,UAAY,SAAUxnB,EAAOo9B,GAC5C13B,KAAKjI,KAAK+pB,UAAUxnB,EAAOo9B,IAO/B/Z,EAAS1c,UAAU02B,WAAa,SAAUhqB,GACtC3N,KAAKjI,KAAK4/B,WAAWhqB,IAMzBgQ,EAAS1c,UAAU+gB,eAAiB,WAChChiB,KAAKjI,KAAKiqB,kBAMdrE,EAAS1c,UAAUwI,KAAO,SAAU/B,GAChC1H,KAAKkmB,gBAAgBzc,KAAK/B,IAQ9BiW,EAAS1c,UAAUyI,MAAQ,SAAU/K,EAAMgL,EAAUC,GACjD5J,KAAKkmB,gBAAgBxc,MAAM/K,EAAMgL,EAAUC,IAQ/C+T,EAAS1c,UAAU22B,WAAa,SAAU7V,EAAW2V,GACjD13B,KAAKjI,KAAK6/B,WAAW7V,EAAW2V,IAMpC/Z,EAAS1c,UAAU42B,gBAAkB,WACjC,OAAO73B,KAAKjI,KAAK8/B,mBAQrBla,EAAS1c,UAAU62B,wBAA0B,SAAUnuB,EAAUmC,GAC7D,OAAO9L,KAAKjI,KAAK+/B,wBAAwBnuB,EAAUmC,IAMvD6R,EAAS1c,UAAUmO,mBAAqB,WACpC,OAAOpP,KAAKjI,KAAKqX,sBAOrBuO,EAAS1c,UAAU7B,qBAAuB,SAAU9E,GAChD,OAAO0F,KAAKjI,KAAKqH,qBAAqB9E,IAM1CqjB,EAAS1c,UAAUg1B,eAAiB,WAChC,OAAOj2B,KAAKjI,KAAKk+B,kBAKrBtY,EAAS1c,UAAU9B,iBAAmB,WAClC,OAAOa,KAAK+3B,eAAe/3B,KAAKtI,QAAS,IAE7CimB,EAAS1c,UAAU82B,eAAiB,SAAUlE,EAAMmE,GAChD,IAAK,IAAI79B,EAAI,EAAG3B,EAAMq7B,EAAKl8B,OAAQwC,EAAI3B,EAAK2B,IACpC05B,EAAK15B,GAAGzC,QACRsgC,EAAMh4B,KAAK+3B,eAAelE,EAAK15B,GAAGzC,QAASsgC,GAGvCnE,EAAK15B,GAAG89B,UACRD,IAIZ,OAAOA,GAMXra,EAAS1c,UAAUiH,sBAAwB,WACvC,OAAOlI,KAAKjI,KAAKmQ,yBAMrByV,EAAS1c,UAAUi3B,0BAA4B,WAC3C,OAAOl4B,KAAKjI,KAAKmgC,6BAOrBva,EAAS1c,UAAUyH,mBAAqB,WACpC,OAAO1I,KAAKjI,KAAK2Q,sBAMrBiV,EAAS1c,UAAU0W,cAAgB,WAC/B,OAASwgB,WAAYn4B,KAAKjI,KAAK4f,gBAAiBygB,WAAYp4B,KAAKilB,aAKrEtH,EAAS1c,UAAUo3B,YAAc,SAAUC,EAAaC,EAAS1H,GAC7D7wB,KAAKw4B,qBAAqBH,YAAYC,EAAaC,EAAS1H,IAEhE,IAAI7S,EAkXJ,OAjXA7c,IACIc,WAAS,IACV0b,EAAS1c,UAAW,kBAAc,GACrCE,IACIc,WAAS,IACV0b,EAAS1c,UAAW,qBAAiB,GACxCE,IACIc,WAAS,aACV0b,EAAS1c,UAAW,gBAAY,GACnCE,IACIc,gBACD0b,EAAS1c,UAAW,eAAW,GAClCE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,oBAAgB,GACvCE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,IACV0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,iBAAa,GACpCE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,0BAAsB,GAC7CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,2BAAuB,GAC9CE,IACIc,gBACD0b,EAAS1c,UAAW,kBAAc,GACrCE,IACIc,cACD0b,EAAS1c,UAAW,aAAS,GAChCE,IACIc,cACD0b,EAAS1c,UAAW,kBAAc,GACrCE,IACIc,WAAS,aACV0b,EAAS1c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,qBAAiB,GACxCE,IACIs3B,aAAYp2B,IACbsb,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,0BAAsB,GAC7CE,IACIs3B,aAAY5c,KACb8B,EAAS1c,UAAW,oBAAgB,GACvCE,IACIs3B,aAAYC,oBACb/a,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,cACD0b,EAAS1c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIs3B,aAAY/a,KACbC,EAAS1c,UAAW,oBAAgB,GACvCE,IACIiB,gBAAemb,KAChBI,EAAS1c,UAAW,kBAAc,GACrCE,IACIs3B,aAAYjb,KACbG,EAAS1c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIc,cACD0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIs3B,aAAYt2B,IACbwb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIs3B,aAAYloB,KACboN,EAAS1c,UAAW,sBAAkB,GACzCE,IACIc,cACD0b,EAAS1c,UAAW,eAAW,GAClCE,IACIc,cACD0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACV0b,EAAS1c,UAAW,iBAAa,GACpCE,IACIc,cACD0b,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIc,cACD0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIc,cACD0b,EAAS1c,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACV0b,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV0b,EAAS1c,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIc,WAAS,SACV0b,EAAS1c,UAAW,cAAU,GACjCE,IACIc,WAAS,SACV0b,EAAS1c,UAAW,aAAS,GAChCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACV0b,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,eAAW,GAClCE,IACIw3B,WACDhb,EAAS1c,UAAW,YAAQ,GAC/BE,IACIw3B,WACDhb,EAAS1c,UAAW,iBAAa,GACpCE,IACIw3B,WACDhb,EAAS1c,UAAW,gBAAY,GACnCE,IACIw3B,WACDhb,EAAS1c,UAAW,kBAAc,GACrCE,IACIw3B,WACDhb,EAAS1c,UAAW,iBAAa,GACpCE,IACIw3B,WACDhb,EAAS1c,UAAW,gBAAY,GACnCE,IACIw3B,WACDhb,EAAS1c,UAAW,iBAAa,GACpCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,iBAAa,GACpCE,IACIw3B,WACDhb,EAAS1c,UAAW,gBAAY,GACnCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,gBAAY,GACnCE,IACIw3B,WACDhb,EAAS1c,UAAW,qBAAiB,GACxCE,IACIw3B,WACDhb,EAAS1c,UAAW,iBAAa,GACpCE,IACIw3B,WACDhb,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIw3B,WACDhb,EAAS1c,UAAW,oBAAgB,GACvCE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,oBAAgB,GACvCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,qBAAiB,GACxCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,qBAAiB,GACxCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,oBAAgB,GACvCE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,gBAAY,GACnCE,IACIw3B,WACDhb,EAAS1c,UAAW,kBAAc,GACrCE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,kBAAc,GACrCE,IACIw3B,WACDhb,EAAS1c,UAAW,kBAAc,GACrCE,IACIw3B,WACDhb,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,qBAAiB,GACxCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,oBAAgB,GACvCE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIw3B,WACDhb,EAAS1c,UAAW,kBAAc,GACrCE,IACIw3B,WACDhb,EAAS1c,UAAW,mBAAe,GACtCE,IACIw3B,WACDhb,EAAS1c,UAAW,eAAW,GAClCE,IACIw3B,WACDhb,EAAS1c,UAAW,oBAAgB,GACvCE,IACIw3B,WACDhb,EAAS1c,UAAW,0BAAsB,GAC7CE,IACIw3B,WACDhb,EAAS1c,UAAW,eAAW,GAClCE,IACIc,YAAU,IACX0b,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIs3B,aAAYjoB,KACbmN,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV0b,EAAS1c,UAAW,sBAAkB,GACzCE,IACIw3B,WACDhb,EAAS1c,UAAW,wBAAoB,GAC3CE,IACIw3B,WACDhb,EAAS1c,UAAW,8BAA0B,GACjDE,IACIw3B,WACDhb,EAAS1c,UAAW,0BAAsB,GAC7CE,IACIw3B,WACDhb,EAAS1c,UAAW,gCAA4B,GACnDE,IACIw3B,WACDhb,EAAS1c,UAAW,yBAAqB,GAC5CE,IACIw3B,WACDhb,EAAS1c,UAAW,2BAAuB,GAC9CE,IACIw3B,WACDhb,EAAS1c,UAAW,uBAAmB,GAC1CE,IACIw3B,WACDhb,EAAS1c,UAAW,yBAAqB,GAC5C0c,EAAWK,EAAa7c,IACpBy3B,yBACDjb,IAELkb,aCxtGEC,GAAyB,WAIzB,SAASA,EAAQhiC,EAAQ2b,GACrBhQ,OAAKC,OAAOq2B,WACZ/4B,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBA4CT,OAtCA4uB,EAAQ73B,UAAU4B,cAAgB,WAC9B,MAAO,WAKXi2B,EAAQ73B,UAAUiJ,iBAAmB,WACjClK,KAAKlJ,OAAOqT,GAAG,iBAAkBnK,KAAKg5B,cAAeh5B,OAEzD84B,EAAQ73B,UAAUuJ,oBAAsB,WAChCxK,KAAKlJ,OAAO2T,aAGhBzK,KAAKlJ,OAAO4T,IAAI,iBAAkB1K,KAAKg5B,gBAO3CF,EAAQ73B,UAAU4I,QAAU,WACxB7J,KAAKwK,uBAETsuB,EAAQ73B,UAAU+3B,cAAgB,WAK9B,IAAK,IAFDC,EADAxmB,EAAazS,KAAKlJ,OAAkB,YAAEkJ,KAAKlJ,OAAO2I,iBAElDy5B,EAAcl5B,KAAKlJ,OAAO8I,aACrBu5B,EAAI,EAAGA,EAAID,EAAYvhC,OAAQwhC,IAAK,CAGzC,GAFsBxgC,YAAU,QAAS8Z,KACjB9Z,YAAU,QAASugC,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRn5B,KAAKlJ,OAAOwmB,eAAgB7d,gBAAiBw5B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,SAASA,EAAOtiC,GACZ2L,OAAKC,OAAO22B,UACZr5B,KAAKlJ,OAASA,EA4BlB,OArBAsiC,EAAOn4B,UAAUqf,eAAiB,SAAUgZ,GACxCt5B,KAAKlJ,OAAOiB,KAAKuoB,eAAegZ,IAMpCF,EAAOn4B,UAAU4B,cAAgB,WAC7B,MAAO,UAOXu2B,EAAOn4B,UAAU4I,QAAU,WACnB7J,KAAKlJ,OAAO2T,aAGhBzK,KAAKlJ,OAAOiB,KAAKyoB,aAAa3W,WAE3BuvB,KC5BPG,GAAuB,WAKvB,SAASA,EAAMziC,GAEXkJ,KAAKw5B,SAAU,EAEfx5B,KAAKy5B,oBAAqB,EAE1Bz5B,KAAK05B,eAAgB,EACrBj3B,OAAKC,OAAOi3B,SACZ35B,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBAs+BT,OAp+BAqvB,EAAMt4B,UAAU24B,0BAA4B,SAAU1mB,GAYlD,OATIlT,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QAC3CkJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAGvCoE,KAAKlJ,OAAOiB,KAAKhB,YAEV4G,OAAO,SAAUC,GAC7C,OAAOA,EAAExE,WAAa8Z,KAO9BqmB,EAAMt4B,UAAUiJ,iBAAmB,WAC/BlK,KAAKlJ,OAAOqT,GAAG2jB,GAAmB9tB,KAAK65B,WAAY75B,MACnDA,KAAKlJ,OAAOqT,GAAG6jB,GAAmBhuB,KAAKmH,WAAYnH,MACnDA,KAAKlJ,OAAOqT,GAAG2vB,GAAgB95B,KAAK+5B,UAAW/5B,MAC/CA,KAAKlJ,OAAOqT,GAAG6vB,GAAmBh6B,KAAKi6B,YAAaj6B,OAKxDu5B,EAAMt4B,UAAUo3B,YAAc,SAAUC,EAAaC,EAAS1H,GAC1D,IAAIqJ,EAAOl6B,KAAKlJ,OACZwhC,EAAY,GACK,UAAbzH,IACA7wB,KAAKm6B,aAAe,cAEP,UAAbtJ,IACA7wB,KAAKm6B,aAAe,iBAEP,UAAbtJ,IACA7wB,KAAKm6B,aAAe,iBAGxB,IAAK,IADDx7B,KACKlH,EAAI,EAAGA,EAAI6gC,EAAY3gC,OAAQF,IACpCkH,EAAKlH,GAAKuI,KAAKlJ,OAAOwF,wBAAwBg8B,EAAY7gC,IAE9D,IACIuL,GACArE,KAAMA,EACNy7B,UAAW7B,GAEVhhC,EAAgByI,KAAKlJ,SACtBkJ,KAAKq6B,SAASr3B,GAND,GASbk3B,EAAK/f,cACL+f,EAAKx8B,SAAWsC,KAAKs6B,aAAaJ,EAAKx8B,WAE3CsC,KAAKlJ,OAAOiB,KAAK83B,WAMzB0J,EAAMt4B,UAAUq5B,aAAe,SAAU9gB,GAUrC,IAAK,IATDxc,EAAU,SAAUvF,GAEpB,GADA+hB,EAAY/hB,GAAG6C,MAAQ7C,GAClBK,oBAAkB0hB,EAAY/hB,GAAGyB,YAAa,CAC/C,IAAIqhC,EAAgB/gB,EAAY7b,OAAO,SAAUgB,GAC7C,OAAOA,EAAKvF,WAAaogB,EAAY/hB,GAAG+G,iBACzC,GACHgb,EAAY/hB,GAAGyB,WAAWoB,MAAQigC,EAAcjgC,QAG/C7C,EAAI,EAAGA,EAAI+hB,EAAY7hB,OAAQF,IACpCuF,EAAQvF,GAEZ,OAAO+hB,GAEX+f,EAAMt4B,UAAU84B,UAAY,SAAUn8B,GAGlC,IAAK,IAFD48B,EACAC,EAAc78B,EAAEtF,QACXb,EAAImG,EAAEtF,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADA+iC,EAAgBC,EAAYhjC,IACV+G,eAAgB,CAC9B,IAAI1F,EAAS2hC,EAAY98B,OAAO,SAAUgB,GACtC,OAAOA,EAAKvF,WAAaohC,EAAch8B,iBAE3C,GAAI1F,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAagF,QAAQ87B,GACvCvhC,EAAeH,EAAO,IACX,IAAXwB,IACArB,EAAaS,aAAa2D,OAAO/C,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAa8Y,yBAA0B,GAE3C/R,KAAKy5B,oBAAqB,IAK1C,GAAI3hC,oBAAkBkI,KAAKlJ,OAAOC,cAAgBiJ,KAAKlJ,OAAOC,WAAWY,OAAQ,CAKxE,IAHD+iC,EADAR,EAAOl6B,KAAKlJ,OAEZ6jC,EAAgB/8B,EAAEtF,QAEtB,IAASb,EADQmG,EAAEtF,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,CACtCijC,EAAkBC,EAAcljC,GAMhC,GAJKK,oBAAkB4iC,EAAgB39B,WAClC29B,EAAgB39B,SAASE,eAAei9B,EAAK58B,gBAC9Co9B,EAAgB39B,SAASm9B,EAAK58B,kBAE9Bo9B,EAAgBz9B,eAAei9B,EAAK58B,eACnCo9B,EAAgBR,EAAK58B,cAAe3F,SAAWqI,KAAKy5B,qBACpD3hC,oBAAkBoiC,EAAK/8B,iBAExB,IAAK,IADD2M,EAAa4wB,EAAgBR,EAAK58B,cAC7BnD,EAAI,EAAGA,EAAI2P,EAAUnS,OAAQwC,KACW,IAAzCwgC,EAAcj8B,QAAQoL,EAAU3P,MAChCwgC,EAAct9B,OAAOlD,EAAG,EAAG2P,EAAU3P,IACrC2P,EAAU3P,GAAG4C,SAAWR,YAAWuN,EAAU3P,IAC7C1C,GAAK,GAIbijC,EAAgBz9B,eAAei9B,EAAK/8B,kBAA6D,MAAzCu9B,EAAgBR,EAAK/8B,mBACzE6C,KAAKy5B,qBACTiB,EAAgB39B,SAASm9B,EAAK/8B,iBAAmB,YAC1Cu9B,EAAgBxhC,kBAChBwhC,EAAgBl8B,gBAEvB1G,oBAAkBoiC,EAAKnjC,cACvBmjC,EAAKnjC,eAETmjC,EAAKnjC,WAAWsG,OA1BG,EA0BkB,EAAGq9B,EAAgB39B,UAE5Dm9B,EAAK5c,eAAgBvmB,WAAYmjC,EAAKnjC,aAAc,OAEnD,CACD,IAASU,EAAI,EAAGA,EAAIgjC,EAAY9iC,OAAQF,IACpC8d,WAAS,sBAAwBklB,EAAYhjC,GAAG2B,SAAUqhC,EAAYhjC,GAAIuI,KAAKlJ,QAEnF,IAAIkM,GAASrE,KAAMf,EAAEtF,QAAS8hC,UAAWx8B,EAAE26B,SACvCv4B,KAAKlJ,OAAOC,sBAAsBC,eAClCgJ,KAAKuZ,aAAevZ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KACtDoE,KAAKrE,SAAWqE,KAAKlJ,OAAOC,WAAWA,WAAW6E,OAGlDoE,KAAKuZ,aAAevZ,KAAKlJ,OAAOiB,KAAKhB,WACrCiJ,KAAKrE,SAAWqE,KAAKlJ,OAAOC,YAEhCiJ,KAAKq6B,SAASr3B,KAGtBu2B,EAAMt4B,UAAUg5B,YAAc,SAAUr8B,GACpC,IAAK,IAAInG,EAAI,EAAGA,EAAImG,EAAEtF,QAAQX,OAAQF,IAClCuI,KAAKw6B,cAAgB58B,EAAEtF,QAAQb,IAC3BuI,KAAKw6B,cAAc/gC,iBAAmBuG,KAAKw6B,cAActhC,aAE8B,IADvF8G,KAAKlJ,OAAOiB,KAAKhB,WACb2H,QAAQsB,KAAK45B,0BAA0B55B,KAAKw6B,cAAch8B,gBAAgB,KACjD,IAA7BwB,KAAKw6B,cAAcjgC,QACnByF,KAAK46B,iBAIjBrB,EAAMt4B,UAAU45B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgBx6B,KAAKw6B,cACrBQ,EAAgBh7B,KAAKg7B,cACrBC,EAAQj7B,KAAKlJ,OASjB,KALIgkC,EADA96B,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QAC/CmkC,EAAMlkC,WAAWA,WAAW6E,KAG5Bq/B,EAAMlkC,aAEHe,oBAAkBkjC,IAAmBA,EAAc9hC,YAiBtE,IAAK8G,KAAKlJ,OAAOqG,kBAAqBrF,oBAAkBkjC,IAAkBA,EAAc9hC,aAC/D,eAAtB8G,KAAKm6B,cAAuD,kBAAtBn6B,KAAKm6B,cAGtC,CAAA,IADDzgC,EADSsG,KAAK45B,0BAA0BoB,EAAcx8B,gBAAgB,GAChD9E,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCujC,EAAc9hC,WAAW6D,SAASiD,KAAKlJ,OAAOwG,cAAc7F,GAAKiC,EAAajC,GAAGsF,cAtBL,CACpF,IAAK,IAAItF,EAAI,EAAGA,EAAIgB,OAAOC,KAAKoiC,GAAgBnjC,OAAQF,IAChDqjC,EAAerjC,GAAGuI,KAAKlJ,OAAOwG,gBAAkB09B,EAAcj+B,SAASiD,KAAKlJ,OAAOwG,gBACnFy9B,EAAMtjC,GAGY,eAAtBuI,KAAKm6B,aACAn6B,KAAKlJ,OAAOsG,WACb09B,EAAez9B,OAAO09B,EAAK,EAAGP,EAAcz9B,UAGrB,kBAAtBiD,KAAKm6B,eACLn6B,KAAKlJ,OAAOsG,WACb09B,EAAez9B,OAAO09B,EAAM,EAAG,EAAGP,EAAcz9B,WAaxDiD,KAAKlJ,OAAOqG,kBACRq9B,EAActhC,WACY,eAAtB8G,KAAKm6B,cAAuD,kBAAtBn6B,KAAKm6B,cAC3CK,EAAcx6B,KAAKlJ,OAAOqG,iBAAmB69B,EAAch7B,KAAKlJ,OAAOqG,iBACvEq9B,EAAcz9B,SAASiD,KAAKlJ,OAAOqG,iBAAmB69B,EAAch7B,KAAKlJ,OAAOqG,mBAGhFq9B,EAAcx6B,KAAKlJ,OAAOqG,iBAAmB69B,EAAch7B,KAAKlJ,OAAOsG,WACvEo9B,EAAcz9B,SAASiD,KAAKlJ,OAAOqG,iBAAmB69B,EAAch7B,KAAKlJ,OAAOsG,aAIpFo9B,EAAcz9B,SAASiD,KAAKlJ,OAAOqG,iBAAmB,KACtDq9B,EAAcx6B,KAAKlJ,OAAOqG,iBAAmB,QAIzDo8B,EAAMt4B,UAAUi6B,qBAAuB,SAAUjoB,EAASkoB,GACtD,IAAIC,EAAkC,kBAAtBp7B,KAAKm6B,aACjBn6B,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,qBAAqBzf,OAAS,GAAKsb,IACxD,IAArBA,EAAQtJ,UAAkByxB,IAC3Bp7B,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,qBAAqB,GAAGyN,UAG3E0U,EAAMt4B,UAAUo6B,oBAAsB,SAAUpoB,EAASkoB,GACrD,IAAIG,EAAaroB,IAAYA,EAAQ5K,UAAUC,SAAS,eAAiB2K,EAAQ5K,UAAUC,SAAS,mBAChGizB,EAAiBtoB,IAAYqoB,GAC7Bt7B,KAAKlJ,OAAOgI,cAAckB,KAAKlJ,OAAOiI,UAAUpH,OAAS,GAAGwU,aAAa,cACrE8G,EAAQ9G,aAAa,YACzBivB,EAAYG,GAAwC,eAAtBv7B,KAAKm6B,aACnCn6B,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,oBAAoBzf,OAAS,GAAKsb,IAAYsoB,GAAkBH,IAC3Gp7B,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,oBAAoB,GAAGyN,UAG1E0U,EAAMt4B,UAAUu6B,WAAa,SAAU38B,EAAKvE,EAAO0I,GAC/C,IAAIy4B,EAASz4B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACxDrB,KAAKm6B,kBAAevd,EACpB,IAAI8e,EAAoB,EACxB17B,KAAKk7B,qBAAqBO,GAC1Bz7B,KAAKq7B,oBAAoBI,GACzB,IAAK,IAAIhkC,EAAI,EAAGA,EAAIuL,EAAK+E,KAAKpQ,OAAQF,KAC7BK,oBAAkB2jC,IAAWA,EAAOtvB,aAAa,cAAgBnJ,EAAK+E,KAAKtQ,GAAG0U,aAAa,cACxFtB,eAAa7H,EAAK3B,OAAQ,mBAC9BrB,KAAKm6B,aAAe,UACpBn6B,KAAK27B,gBAIb,IAAIzB,EAAOl6B,KAAKlJ,OACZ8kC,EAAS,EAETC,EAAa3B,EAAKpW,SAAWoW,EAAKpW,QAAQnsB,OAC1CmkC,SAASC,eAAe7B,EAAKjnB,QAAQC,GAAK,6BAA6B8oB,aAAe,EAEtFC,EAAiBj8B,KAAKk8B,UAAUhC,EAAKjnB,SAErCkpB,EAAgBjC,EAAKhuB,mBAAmB8vB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAK7G,aAAaiJ,kBAAkBD,UAC/CvkC,oBAAkB2jC,KACnBC,EAAoBD,EAAOc,UAAYF,GAS3C,IAEIG,IAPAZ,EADA1B,EAAKhoB,cACIrT,EAAI,GAAGm9B,aAGPN,EAAoBS,EAhBlB,GAkBUt9B,EAAI,GAAGm9B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACTlkC,YAAU,sBAAuBqK,GAC5B85B,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,EAC7D,GAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtB/8B,KAAKm6B,eACrBn6B,KAAKk9B,oBACLl9B,KAAKm6B,aAAe,aACpBn6B,KAAKm9B,0BACLn9B,KAAKo9B,kBAAkB3B,GACvBz7B,KAAKq9B,kBACLr9B,KAAKq7B,oBAAoBI,GACzBz7B,KAAKs9B,kBAAkBt6B,EAAK3B,SAE5B27B,GAA4C,YAAtBh9B,KAAKm6B,aAA4B,CACvDn6B,KAAKm9B,0BACL,IAAIlqB,OAAU,EACV1H,KACJ0H,EAAUlI,UAAQ/H,EAAK3B,OAAQ,OAC/BkK,KAAgBhD,MAAM3F,KAAKqQ,EAAQzK,iBAAiB,oDACrC7Q,OAAS,GACpBqI,KAAKu9B,iBAAiBhyB,GAAY,EAAM,iBAE5CvL,KAAKw9B,iBAAiB/B,GACtBz7B,KAAKo9B,kBAAkB3B,GACvBz7B,KAAKm6B,aAAe,gBAEpB8C,GAA4C,YAAtBj9B,KAAKm6B,eAC3Bn6B,KAAKq9B,kBACLr9B,KAAKm9B,0BACLn9B,KAAKk9B,oBACLl9B,KAAKm6B,aAAe,gBACpBn6B,KAAKw9B,iBAAiB/B,GACtBz7B,KAAKk7B,qBAAqBO,GAC1Bz7B,KAAKs9B,kBAAkBt6B,EAAK3B,SAGpC,OAAOrB,KAAKm6B,cAEhBZ,EAAMt4B,UAAUi8B,kBAAoB,WAChC,IAAIO,MACJA,KAAgBl1B,MAAM3F,KAAK5C,KAAKlJ,OAAOmc,QAAQzK,iBAAiB,oBACjD7Q,OAAS,GACpBqI,KAAKu9B,iBAAiBE,GAAY,EAAO,kBAGjDlE,EAAMt4B,UAAUm8B,kBAAoB,SAAUnb,GAC1C,IAAIyb,EAAO19B,KAAKlJ,OAAOmc,QACnBinB,EAAOl6B,KAAKlJ,OAChB,GAAImrB,GAAoC,IAAvBA,EAAUtY,WAAmBsY,EAAU5Z,UAAUC,SAAS,cAAe,CACtF,IAAIq1B,EAAM39B,KAAKlJ,OAAOwV,cAAc,OAASC,UAAW,sBACpDqxB,EAAgB59B,KAAKlJ,OAAOoV,mBAC5B2xB,EAAgB,EAChB3D,EAAKpW,UACL+Z,EAAgB3D,EAAK3I,cAAcuM,aAAa9B,cAEpD,IAAI+B,GAAgBjmC,oBAAkBkI,KAAKlJ,OAAOuuB,gBAAgBC,UAC9DyY,IACAJ,EAAIhjC,MAAMyhC,IAAMp8B,KAAKlJ,OAAOiB,KAAKkb,QAAQmE,uBAAuB,gBAAgB,GAAG4kB,aAC7E6B,EAAgB,MAE1BF,EAAIhjC,MAAMiS,MAAQmxB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAch+B,KAAKi+B,iBAAmB,KAC1CL,EAAcp1B,iBAAiB,sBAAsB7Q,QACtDimC,EAAclwB,YAAYiwB,KAItCpE,EAAMt4B,UAAUu8B,iBAAmB,SAAUU,GACzC,IAAI5C,EAAa4C,IAAcA,EAAU71B,UAAUC,SAAS,eACxD41B,EAAU71B,UAAUC,SAAS,mBACjC,GAAI41B,IAAc5C,GAAct7B,KAAKlJ,OAAOgI,cAAckB,KAAKlJ,OAAOiI,UAAUpH,OAAS,GAAGwU,aAAa,cACrG+xB,EAAU/xB,aAAa,YAAa,CACpC,IAAIgyB,EAAen+B,KAAKlJ,OAAOwV,cAAc,OAASC,UAAW,qBAC7D6xB,EAAiBp+B,KAAKlJ,OAAOu8B,aACjC8K,EAAaxjC,MAAMiS,MAAQ5M,KAAKlJ,OAAOmc,QAAQ+qB,YAAch+B,KAAKi+B,iBAAmB,KAChFG,EAAe51B,iBAAiB,qBAAqB7Q,SACtDymC,EAAe/1B,UAAUsE,IAAI,uBAC7ByxB,EAAe1wB,YAAYywB,GAC3BA,EAAaxjC,MAAM0jC,OAASr+B,KAAKi+B,iBAAmB,QAIhE1E,EAAMt4B,UAAUg9B,eAAiB,WAC7B,IAAIK,EAAat+B,KAAKlJ,OAAOu8B,aAAaiJ,kBAC1C,OAAOgC,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAMt4B,UAAU06B,aAAe,WAC3B,IAAI+C,EAAW5C,SAAS1kB,uBAAuB,qBAAqB,GAEpE,IADgBsnB,EAASl2B,iBAAiB,gBAAgB7Q,SACvCqI,KAAKlJ,OAAOuuB,gBAAgBC,SAAU,CACrD,IAAIqZ,EAAM7C,SAASxvB,cAAc,OACjCjE,YAAUs2B,GAAM,wBAChBt2B,YAAUs2B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAAS5zB,cAAc,eAClC+zB,EAAUH,EAAS5zB,cAAc,cAAc0C,UAC/CoxB,IACAC,EAAUD,EAASpxB,UACnBoxB,EAASE,WAAWC,YAAYH,IAEpCF,EAAS5zB,cAAc,cAAc0C,UAAY,GACjD,IAAIwxB,EAAclD,SAASxvB,cAAc,QACzC0yB,EAAYzyB,UAAY,aACxByyB,EAAYrkC,MAAMskC,YAAc,OAChCD,EAAYxxB,UAAYqxB,EACxBH,EAAS5zB,cAAc,cAAc4C,YAAYixB,GACjDD,EAAS5zB,cAAc,cAAc4C,YAAYsxB,KAGzDzF,EAAMt4B,UAAUo8B,gBAAkB,WAC9B,IAAI6B,EAAYpD,SAAShxB,cAAc,gBACnCo0B,GACAA,EAAUra,UAGlB0U,EAAMt4B,UAAUq8B,kBAAoB,SAAUj8B,GAEtBvJ,oBAAkBkI,KAAKlJ,OAAOuuB,gBAAgBC,UADlE,IAAIrS,EAEA1H,MAEJA,GADA0H,EAAUlI,UAAQ1J,EAAQ,UACAkH,MAAM3F,KAAKqQ,EAAQzK,iBAAiB,uDAC/C7Q,SACe,eAAtBqI,KAAKm6B,eACLn6B,KAAKu9B,iBAAiBhyB,GAAY,EAAM,aACpCvL,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,wBAAwBzf,OAAS,GAC5EqI,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,wBAAwB,GAAGyN,UAGpD,kBAAtB7kB,KAAKm6B,cACLn6B,KAAKu9B,iBAAiBhyB,GAAY,EAAM,kBAIpDguB,EAAMt4B,UAAUk8B,wBAA0B,WACtC,IAAIgC,MACJA,KAAY52B,MAAM3F,KAAK5C,KAAKlJ,OAAOmc,QAAQzK,iBAAiB,+BACjD7Q,SACPqI,KAAKu9B,iBAAiB4B,GAAQ,EAAO,gBACrCn/B,KAAKu9B,iBAAiB4B,GAAQ,EAAO,eAG7C5F,EAAMt4B,UAAUs8B,iBAAmB,SAAU/9B,EAAOmN,EAAKJ,GACrD,IAAK,IAAI9U,EAAI,EAAGe,EAAMgH,EAAM7H,OAAQF,EAAIe,EAAKf,IACrCkV,EACAnN,EAAM/H,GAAG4Q,UAAUsE,IAAIJ,GAGvB/M,EAAM/H,GAAG4Q,UAAUwc,OAAOtY,IAItCgtB,EAAMt4B,UAAUi7B,UAAY,SAAUjpB,GAClC,IAAImsB,EAAMnsB,EAAQosB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAYzhC,OAAO6kC,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAa9kC,OAAO+kC,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,EACnC,OAASzD,IAAKzlB,KAAKmpB,MAAM1D,GAAMS,KAAMlmB,KAAKmpB,MAAMjD,KAEpDtD,EAAMt4B,UAAU44B,WAAa,SAAU72B,GACnC,IAAIk3B,EAAOl6B,KAAKlJ,OACZipC,EAAe//B,KAAKlJ,OAAOmc,QAAQnI,cAAc,sBACrDi1B,EAAaplC,MAAMqlC,OAAS,GAC5B,IAAIvE,EAASz4B,EAAK3B,OAAS0J,UAAQ/H,EAAK3B,OAAQ,MAAQ,KACpD4+B,EAASxE,EAASA,EAAO9xB,UAAY,EACrC8wB,KACAO,EAAgBd,EAAK59B,wBAAwB2jC,GAmBjD,GAlBAjgC,KAAKq9B,kBACLr9B,KAAKw5B,SAAU,EACVx2B,EAAKrE,KAAK,GAIX87B,EAAcz3B,EAAKrE,KAHnB87B,EAAY7hC,KAAKoK,EAAKrE,OAKV,IAAZshC,EACAjgC,KAAKkgC,mBAAmBzF,EAAaO,IAGrCh7B,KAAKw5B,SAAU,EACfx5B,KAAK27B,iBAEJzB,EAAK7U,gBAAgBC,UAAYtlB,KAAKw5B,SACvCU,EAAK1B,qBAAqBgD,WAAWx4B,EAAK+E,KAAMk4B,EAAQj9B,GAExDk3B,EAAK7U,gBAAgBC,SAAU,CAE/B,IADI6a,EAAct1B,eAAa7H,EAAK3B,OAAQ,gBACzB8+B,EAAYjtB,KAAOlT,KAAKlJ,OAAOuuB,gBAAgBC,SAAU,CACvD6a,EAAYC,cAAc,GAChC5H,qBAAqBgD,WAAWx4B,EAAK+E,KAAMk4B,EAAQj9B,IAGtE,GAAIA,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAM64B,EAAK7U,gBAAgBC,UAAW,CAC1E,IAAI6a,GAAAA,EAAct1B,eAAa7H,EAAK3B,OAAQ,iBAExC0+B,EAAaplC,MAAMqlC,OAAS,aAIxCzG,EAAMt4B,UAAUkG,WAAa,SAAUnE,GACnC,IAAIk3B,EAAOl6B,KAAKlJ,OACXojC,EAAK7U,gBAAgBC,UAsBlBtiB,EAAK3B,QAAU0J,UAAQ/H,EAAK3B,OAAQ,IAAM64B,EAAK7U,gBAAgBC,WAAaza,eAAa7H,EAAK3B,OAAQ,eACtGwJ,eAAa7H,EAAK3B,OAAQ,cAAc6R,KAAOgnB,EAAK7U,gBAAgBC,YACpE/P,WAAS,eAAgBvV,KAAKm6B,aAAcn3B,GAC5Ck3B,EAAKhxB,QhBlaA,UgBkawBlG,IACxBA,EAAKiG,QAAUixB,EAAK7U,gBAAgBC,WACrCtlB,KAAKqgC,aAAar9B,GACdk3B,EAAK/f,cACL+f,EAAKx8B,SAAWsC,KAAKs6B,aAAaJ,EAAKx8B,aA5B/CmN,eAAa7H,EAAK3B,OAAQ,eACtBrB,KAAKlJ,OAAOmc,QAAQnI,cAAc,kBAClC9K,KAAKm6B,aAAe,WAExB5kB,WAAS,eAAgBvV,KAAKm6B,aAAcn3B,GAC5Ck3B,EAAKhxB,QhB/YA,UgB+YwBlG,GACxBA,EAAKiG,SACD1R,EAAgByI,KAAKlJ,SACtBkJ,KAAKq6B,SAASr3B,GAEdk3B,EAAK/f,cACL+f,EAAKx8B,SAAWsC,KAAKs6B,aAAaJ,EAAKx8B,WAE3Cw8B,EAAKniC,KAAK83B,UACL/3B,oBAAkBoiC,EAAKhuB,mBAAmBpB,cAAc,wBACzDovB,EAAKhuB,mBAAmBpB,cAAc,sBAAsB+Z,WAkB5E7kB,KAAKm9B,0BACLn9B,KAAKk9B,oBACAplC,oBAAkBkI,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,qBAAqB,IAG7Etf,oBAAkBkI,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,oBAAoB,KACvFpX,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,oBAAoB,GAAGyN,SAHlE7kB,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,qBAAqB,GAAGyN,UAM3E0U,EAAMt4B,UAAUo/B,aAAe,SAAUr9B,GACrC,IAKIs9B,EALApG,EAAOl6B,KAAKlJ,OAEZmrB,EAAYlX,UAAQ/H,EAAK3B,OAAQ,MACjCk/B,EAAcC,MAAMxgC,KAAKygC,aAAaxe,IAAc,EAAIjiB,KAAKygC,aAAaxe,GAC1Eke,EAAct1B,eAAa7H,EAAK3B,OAAQ,cAE5C,GAAI8+B,GAAeA,EAAYjtB,KAAOlT,KAAKlJ,OAAOuuB,gBAAgBC,WAAazuB,EAAamJ,KAAKlJ,UACzFS,EAAgByI,KAAKlJ,QAAS,CAClCwpC,EAAaH,EAAYC,cAAc,GAGvC,IAAK,IAFD9nC,EAAU4hC,EAAKxxB,qBACfqrB,KACKt8B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCs8B,EAAQt8B,GAAKa,EAAQb,GAAG6C,MAE5B4/B,EAAK9nB,OAAO4nB,IAAqBjG,QAASA,EAASz7B,QAASA,IAC5DgoC,EAAWluB,OAAO0nB,IAAkBvB,QAASgI,EAAajoC,QAASA,IACnE,IAAIooC,EAAqBJ,EAAW9H,qBAAqBjf,aACzD,IAAKzhB,oBAAkB4oC,GACnB,IAASjpC,EAAI,EAAGA,EAAIipC,EAAmB/oC,OAAQF,IAE3C,GADAipC,EAAmBjpC,GAAG6C,MAAQ7C,GACzBK,oBAAkB4oC,EAAmBjpC,GAAGyB,YAAa,CACtD,IAAIynC,EAAcpiC,WAAS,sBAAwBmiC,EAAmBjpC,GAAG+G,eAAiB,SAAU8hC,GACpGI,EAAmBjpC,GAAGyB,WAAWoB,MAAQqmC,EAIrDzG,EAAKniC,KAAK83B,UACVyQ,EAAWvoC,KAAK83B,UACZyQ,EAAWvoC,KAAKhB,WAAWY,OAAS,IACpC2oC,EAAWvoC,KAAK83B,UACX/3B,oBAAkBwoC,EAAWp0B,mBAAmBpB,cAAc,wBAC/Dw1B,EAAWp0B,mBAAmBpB,cAAc,sBAAsB+Z,SAEjE/sB,oBAAkBwoC,EAAWjN,aAAavoB,cAAc,uBACzDw1B,EAAWjN,aAAavoB,cAAc,qBAAqB+Z,UAInEttB,EAAgByI,KAAKlJ,UACrBwpC,EAAaH,EAAYC,cAAc,GACvClG,EAAKniC,KAAK83B,UACVyQ,EAAWvoC,KAAK83B,YAGxB0J,EAAMt4B,UAAUw/B,aAAe,SAAUxe,GACrC,OAAOA,EAAY3P,SAAS2P,EAAU9V,aAAa,iBAAkB,IAAM,GAE/EotB,EAAMt4B,UAAU9H,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtB8G,KAAKm6B,aAAkC,CACvC,IAAIyG,EAAiB5gC,KAAKlJ,OAAO4R,qBAAqB,GACtD1I,KAAKg7B,cAAgB7hC,EAAc6G,KAAKlJ,OAAQ8pC,EAAe1nC,WAAWE,UAE9E,GAA0B,kBAAtB4G,KAAKm6B,aAAkC,CAC3Bn6B,KAAKlJ,OAAO4R,qBAAqB,GAAGnO,QAClCrB,EAAWqB,MACrByF,KAAKg7B,cAAgB7hC,EAAc6G,KAAKlJ,OAAQoC,EAAWE,UAG3D4G,KAAK7G,cAAcD,KAI/BqgC,EAAMt4B,UAAUo5B,SAAW,SAAUr3B,EAAM69B,GACvC,GAA0B,YAAtB7gC,KAAKm6B,eAA+BtjC,EAAamJ,KAAKlJ,QAAS,CAC/D,IAAIojC,EAAOl6B,KAAKlJ,OACZ0jC,OAAgB,EAChBQ,OAAgB,EACpB,GAAIljC,oBAAkBkL,EAAKo3B,WAAY,CACnC,IAAIzwB,EAAWuwB,EAAKhyB,wBAAwB,GAAK,EAC7CpP,EAASohC,EAAK59B,wBAAwBqN,GAC1C3J,KAAK7G,cAAcL,QAGnBkK,EAAKo3B,UAAYp3B,EAAKo3B,YAAcp3B,EAAK89B,UAAY9gC,KAAKygC,aAAaz9B,EAAK3B,OAAOsgB,eAAiB3e,EAAKo3B,UACzGp6B,KAAKg7B,cAAgBd,EAAK59B,wBAAwB0G,EAAKo3B,WAE3D,IAAIK,KACJO,EAAgBh7B,KAAKg7B,cAChBh4B,EAAKrE,KAAK,GAIX87B,EAAcz3B,EAAKrE,KAHnB87B,EAAY7hC,KAAKoK,EAAKrE,MAK1B,IAAI0P,EAAQ,EACR0vB,EAAe/9B,KAAKlJ,OAAOuuB,gBAAgBC,SAC/CtlB,KAAK+gC,eAAiBhD,EAEjBA,EAID/9B,KAAK05B,cAA8BqE,GAAgB/9B,KAAKy5B,mBAHxDz5B,KAAKkgC,mBAAmBzF,EAAaO,GAMzC,IAAK,IADDgG,EAAavG,EAAY9iC,OACpBF,EAAI,EAAGA,EAAIupC,EAAYvpC,IAAK,CACjC+iC,EAAgBC,EAAYhjC,GAC5BuI,KAAKw6B,cAAgBA,EACrB,IAAIxrB,EAAchM,EAAKo3B,UACnBj/B,GAAmBrD,oBAAkBoiC,EAAK/8B,iBAC9C,GAA0B,YAAtB6C,KAAKm6B,aAA4B,CAIjC,GAHKD,EAAK7U,gBAAgBC,WAAYub,GAClC7gC,KAAK46B,gBAEL56B,KAAKw6B,gBAAkBx6B,KAAKg7B,cAAe,CAC3C,IAAIiG,EAAejhC,KAAKygC,aAAaz9B,EAAK3B,OAAO6/B,aAAavf,eAC1D6e,MAAMS,KACNA,EAAejhC,KAAKygC,aAAaz9B,EAAK3B,OAAOsgB,gBAEjD3S,EAAchM,EAAKo3B,UAAY6G,EAC/BjG,EAAgBh7B,KAAKg7B,cAAgBh7B,KAAKlJ,OAAOwF,wBAAwB0G,EAAKo3B,WAElF,IAAI+G,EAAenhC,KAAKuZ,aAAa7a,QAAQs8B,GAE7C,GADAh7B,KAAKohC,UAAUD,EAAchmC,EAAiB1D,GACpB,kBAAtBuI,KAAKm6B,aAAkC,CAiBvC,GAhBKa,EAAcvhC,iBAOf4U,EAAQrO,KAAKqhC,cAAcrG,EAAe,GACtCh7B,KAAKlJ,OAAOqG,iBACZ6C,KAAKrE,SAAS0B,OAAO8jC,EAAe9yB,EAAQ,EAAG,EAAGrO,KAAKw6B,cAAcz9B,UAEzEiD,KAAKuZ,aAAalc,OAAO8jC,EAAe9yB,EAAQ,EAAG,EAAGrO,KAAKw6B,iBAVvDx6B,KAAKlJ,OAAOqG,iBACZ6C,KAAKrE,SAAS0B,OAAO8jC,EAAe,EAAG,EAAGnhC,KAAKw6B,cAAcz9B,UAEjEiD,KAAKuZ,aAAalc,OAAO8jC,EAAe,EAAG,EAAGnhC,KAAKw6B,gBASvDA,EAActhC,WAAa8G,KAAKuZ,aAAa4nB,GAAcjoC,WAC3DshC,EAAch8B,eAAiBwB,KAAKuZ,aAAa4nB,GAAc3iC,eAC/Dg8B,EAAcjgC,MAAQyF,KAAKuZ,aAAa4nB,GAAc5mC,MAClDigC,EAAc/gC,gBAAiB,CAE/BuG,KAAKshC,uBAAuB9G,EADhB,GAEZx6B,KAAKuhC,kBAAkB/G,EAAe2G,EAAe9yB,EAAQ,GAEjE,GAAI2sB,EAAc9hC,WAAY,CAC1B,IACIQ,EADMsG,KAAK45B,0BAA0BoB,EAAcx8B,gBAChC,GAAG9E,aACtB8nC,EAAqB9nC,EAAagF,QAAQs8B,GAAiB,EAC/DthC,EAAa2D,OAAOmkC,EAAoB,EAAGhH,IAGnDx6B,KAAKyhC,WAAWzyB,EAAamyB,EAAcn+B,EAAM69B,EAAY1lC,EAAiB1D,GAElF,GAAIK,oBAAkB0iC,EAActhC,YAAa,CAC7C,IAAIogB,EAAgB4gB,EAAKz8B,WACrBikC,EAAiBpoB,EAAc5a,QAAQsB,KAAKg7B,eACtB,kBAAtBh7B,KAAKm6B,aACL7gB,EAAcjc,OAAOqkC,EAAiB,EAAG,EAAGlH,GAEjB,eAAtBx6B,KAAKm6B,cACV7gB,EAAcjc,OAAOqkC,EAAgB,EAAGlH,GAGhDN,EAAK1B,qBAAqBqC,2BAItCtB,EAAMt4B,UAAUwgC,WAAa,SAAUzyB,EAAamyB,EAAcn+B,EAAM7H,EAAiB0lC,EAAYppC,GACjG,IAAIyiC,EAAOl6B,KAAKlJ,OACZ4C,EAAeF,EAAoBwG,KAAKg7B,eACxC2G,EAAsB7pC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBwpC,EAAe,EAC5CznC,EAAa/B,OAASwpC,EAAe,EACf,kBAAtBnhC,KAAKm6B,eACDD,EAAK/8B,iBACL6C,KAAKrE,SAAS0B,OAAOskC,EAAoB,EAAG3hC,KAAKw6B,cAAcz9B,UAC/DiD,KAAKuZ,aAAalc,OAAOskC,EAAoB,EAAG3hC,KAAKw6B,gBAGrDx6B,KAAKuZ,aAAalc,OAAOskC,EAAoB,EAAG3hC,KAAKw6B,eAEzDx6B,KAAK4hC,cACD5hC,KAAKw6B,cAAc/gC,iBACnBuG,KAAKuhC,kBAAkBvhC,KAAKw6B,cAAemH,EAAoB3hC,KAAKg7B,cAAczhC,YAI9FggC,EAAMt4B,UAAUmgC,UAAY,SAAUD,EAAchmC,EAAiB1D,GACjE,IAAIyiC,EAAOl6B,KAAKlJ,OAChB,GAA0B,eAAtBkJ,KAAKm6B,aAA+B,CAQpC,GAPID,EAAK/8B,iBACL6C,KAAKrE,SAAS0B,OAAO8jC,EAAc,EAAGnhC,KAAKw6B,cAAcz9B,UAE7DiD,KAAKw6B,cAActhC,WAAa8G,KAAKuZ,aAAa4nB,GAAcjoC,WAChE8G,KAAKw6B,cAAch8B,eAAiBwB,KAAKuZ,aAAa4nB,GAAc3iC,eACpEwB,KAAKw6B,cAAcjgC,MAAQyF,KAAKuZ,aAAa4nB,GAAc5mC,MAC3DyF,KAAKuZ,aAAalc,OAAO8jC,EAAc,EAAGnhC,KAAKw6B,eAC3Cx6B,KAAKw6B,cAAc/gC,gBAAiB,CAEpCuG,KAAKuhC,kBAAkBvhC,KAAKw6B,cAAe2G,GAC3CnhC,KAAKshC,uBAAuBthC,KAAKw6B,cAFrB,GAIhB,GAAIx6B,KAAKg7B,cAAc9hC,WAAY,CAC/B,IACIQ,EADMsG,KAAK45B,0BAA0B55B,KAAKg7B,cAAcx8B,gBACrC,GAAG9E,aACtB8nC,EAAqB9nC,EAAagF,QAAQsB,KAAKg7B,eACnDthC,EAAa2D,OAAOmkC,EAAoB,EAAGxhC,KAAKw6B,kBAI5DjB,EAAMt4B,UAAU2gC,YAAc,WAC1B,IAAI1H,EAAOl6B,KAAKlJ,OACZ0jC,EAAgBx6B,KAAKw6B,cACrBQ,EAAgBh7B,KAAKg7B,cACrB6G,EAAY3H,EAAK58B,aAWrB,GAVK09B,EAAcvhC,kBACfuhC,EAAcvhC,iBAAkB,EAChCuhC,EAAcjpB,yBAA0B,EACpCja,oBAAkBkjC,EAActhC,gBAChCshC,EAActhC,iBACTwgC,EAAK/8B,iBAAmBrF,oBAAkBkjC,EAAcj+B,SAAS8kC,MAClE7G,EAAcj+B,SAAS8kC,SAIT,kBAAtB7hC,KAAKm6B,aAAkC,CACvC,IAAIjhC,EAAaqD,YAAWy+B,GAQ5B,UAPO9hC,EAAWQ,aAClB8gC,EAActhC,WAAaA,EAC3BshC,EAAch8B,eAAiBw8B,EAAc5hC,SAC7C4hC,EAActhC,aAAa2D,OAAO29B,EAActhC,aAAa/B,OAAQ,EAAG6iC,GACnE1iC,oBAAkB0iC,IAAmBN,EAAK/8B,iBAAoBrF,oBAAkBkjC,EAAcj+B,SAAS8kC,KACxG7G,EAAcj+B,SAASm9B,EAAK58B,cAAcD,OAAO29B,EAActhC,aAAa/B,OAAQ,EAAG6iC,EAAcz9B,UAEpGy9B,EAAc/gC,gBAGd,CAED+gC,EAAcjgC,MAAQygC,EAAczgC,MAAQ,EAC5CyF,KAAKshC,uBAAuB9G,EAFhB,QAHZA,EAAcjgC,MAAQygC,EAAczgC,MAAQ,EAOhDygC,EAAczhC,UAAW,IAMjCggC,EAAMt4B,UAAU25B,cAAgB,WACxB56B,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,SAChEkJ,KAAKuZ,aAAevZ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAC3DoE,KAAKrE,SAAWqE,KAAKlJ,OAAOC,WAAWA,WAAW6E,OAGlDoE,KAAKuZ,aAAevZ,KAAKlJ,OAAOiB,KAAKhB,WACrCiJ,KAAKrE,SAAWqE,KAAKlJ,OAAOC,YAEhC,IAAI+qC,EACJA,EAAa3oC,EAAc6G,KAAKlJ,OAAQkJ,KAAKw6B,cAAcphC,UAC3D4G,KAAK+hC,cAAcD,IAEvBvI,EAAMt4B,UAAUsgC,kBAAoB,SAAUzoC,EAAQuV,EAAO9U,GACzD,IAAIoV,EACAurB,EAAOl6B,KAAKlJ,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBkX,EAAgB7V,EAAOY,aAAajC,GACpC4W,IACA6rB,EAAKx8B,SAASL,OAAOgR,EAAO,EAAGM,GAC/B4G,WAAS,sBAAwB5G,EAAcvV,SAAUuV,EAAe3O,KAAKlJ,QACzEojC,EAAK/8B,iBACL6C,KAAKrE,SAAS0B,OAAOgR,EAAO,EAAGM,EAAc5R,UAE7C4R,EAAclV,kBACd4U,EAAQrO,KAAKuhC,kBAAkB5yB,EAAeN,IAGtD,OAAOA,GAEXkrB,EAAMt4B,UAAUqgC,uBAAyB,SAAUxoC,EAAQyB,GACvD,IACIoU,EADAhX,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BkX,EAAgB7V,EAAOY,aAAajC,GACpC,IAAIgG,OAAa,EACb3E,EAAOI,aACPuE,EAAatE,EAAc6G,KAAKlJ,OAAQgC,EAAOI,WAAWE,WAE9DuV,EAAcpU,MAAQzB,EAAOI,WAAauE,EAAWlD,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFoU,EAAclV,kBACdc,IACAA,EAAQyF,KAAKshC,uBAAuB3yB,EAAepU,IAG3D,OAAOA,GAEXg/B,EAAMt4B,UAAU8gC,cAAgB,SAAUjpC,GACtC,IACI/B,EADAmjC,EAAOl6B,KAAKlJ,OAGZC,EADAiJ,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACnDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE7B,IAAI+qC,EAAahpC,EAGbqC,GAAmBrD,oBAAkBoiC,EAAK/8B,iBAC1C6kC,EAAiBhiC,KAAK45B,0BAA0BkI,EAAWtjC,gBAAgB,GAC/E,GAAIsjC,EAAY,CACZ,GAAIA,EAAW5oC,WAAY,CACvB,IAAIQ,EAAesoC,EAAiBA,EAAetoC,gBAC/CuoC,EAAa,EACbvoC,GAAgBA,EAAa/B,OAAS,IACtCsqC,EAAavoC,EAAagF,QAAQojC,GAClCE,EAAetoC,aAAa2D,OAAO4kC,EAAY,GAC1CjiC,KAAKlJ,OAAOqG,iBACbnC,GAAaX,MAAOynC,EAAYrmC,OAAQ,UAAYuE,KAAKlJ,OAAQqE,EAAiB2mC,EAAWxnC,MAAOwnC,EAAWxnC,QAI3H,GAAI4/B,EAAK/8B,gBAAiB,CAClB2kC,EAAWroC,iBAAmBqoC,EAAWpoC,aAAa/B,OAAS,GAC/DqI,KAAKkiC,gBAAgBJ,GAKzB,IAAK,IAHD/G,OAAM,EACNoH,OAAM,EACN5oB,EAAexiB,EACVU,EAAI,EAAGA,EAAI8hB,EAAa5hB,OAAQF,IACjC8hB,EAAa9hB,GAAGuI,KAAKlJ,OAAOsG,aAAe0kC,EAAW/kC,SAASiD,KAAKlJ,OAAOsG,aAC3E29B,EAAMtjC,GAGd,IAASA,EAAI,EAAGA,EAAIuI,KAAKuZ,aAAa5hB,OAAQF,IACtCuI,KAAKuZ,aAAa9hB,GAAGuI,KAAKlJ,OAAOsG,aAAe0kC,EAAW/kC,SAASiD,KAAKlJ,OAAOsG,aAChF+kC,EAAM1qC,IAGD,IAATsjC,IAAuB,IAAToH,IACdprC,EAAWsG,OAAO09B,EAAK,GACvB/6B,KAAKuZ,aAAalc,OAAO8kC,EAAK,IAGtC,IAAIC,EAAgBpiC,KAAKuZ,aAAa7a,QAAQojC,GAC9C,IAAK5H,EAAK/8B,gBAAiB,CACvB,IAAIklC,EAAcriC,KAAKlJ,OAAO2G,WAAWiB,QAAQojC,IAC5B,IAAjBO,IACAnI,EAAKz8B,WAAWJ,OAAOglC,EAAa,GACpCtrC,EAAWsG,OAAOglC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyBlI,EAAK/8B,gBAE9B,IAAK,IADDmlC,EAAkBpI,EAAKx+B,0BAA0B,GAC5CvB,EAAI,EAAGA,EAAI6F,KAAKuZ,aAAa5hB,OAAQwC,IACtC6F,KAAKuZ,aAAapf,GAAGmoC,KAAqBR,EAAWQ,KACrDF,EAAgBjoC,GAI5B,IAAK+/B,EAAK/8B,gBAAiB,CACvB,IAAIolC,EAAqBviC,KAAKqhC,cAAcS,EAAY,GACxD9hC,KAAKuZ,aAAalc,OAAO+kC,EAAeG,EAAqB,GAE7DT,EAAW5oC,YAAc8oC,GAAkBA,EAAetoC,eAAiBsoC,EAAetoC,aAAa/B,SACvGqqC,EAAezoC,UAAW,EAC1ByoC,EAAevoC,iBAAkB,EACjCuoC,EAAejwB,yBAA0B,KAIrDwnB,EAAMt4B,UAAUihC,gBAAkB,SAAUppC,GACxC,IACI6V,EACAosB,EACAoH,EACAprC,EAJOiJ,KAAKlJ,OAMZC,EADAiJ,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACnDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDkX,EAAgB7V,EAAOY,aAAajC,GACpC,IAAI8hB,OAAe,EAEfA,EADAvZ,KAAKlJ,OAAOC,sBAAsBC,eAAe4C,EAAUoG,KAAKlJ,QACjDkJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KAGlCoE,KAAKlJ,OAAOC,WAE/B,IAAK,IAAI6/B,EAAM,EAAGA,EAAMrd,EAAa5hB,OAAQi/B,IACrCrd,EAAaqd,GAAK52B,KAAKlJ,OAAOsG,aAAeuR,EAAc5R,SAASiD,KAAKlJ,OAAOsG,aAChF29B,EAAMnE,GAGd,IAAK,IAAI4L,EAAM,EAAGA,EAAMxiC,KAAKuZ,aAAa5hB,OAAQ6qC,IAC9C,GAAIxiC,KAAKuZ,aAAaipB,GAAKxiC,KAAKlJ,OAAOsG,aAAeuR,EAAc5R,SAASiD,KAAKlJ,OAAOsG,WAAY,CACjG+kC,EAAMK,EACN,OAGK,IAATzH,IAAuB,IAAToH,IACdprC,EAAWsG,OAAO09B,EAAK,GACvB/6B,KAAKuZ,aAAalc,OAAO8kC,EAAK,IAE9BxzB,EAAclV,iBACduG,KAAKkiC,gBAAgBvzB,KAIjC4qB,EAAMt4B,UAAUogC,cAAgB,SAAUvoC,EAAQuV,GAC9C,IAAIM,EACJ,IAAK7V,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C4W,KADAM,EAAgB7V,EAAOY,aAAajC,IAElBgC,kBACd4U,EAAQrO,KAAKqhC,cAAc1yB,EAAeN,IAGlD,OAAOA,GAEXkrB,EAAMt4B,UAAUi/B,mBAAqB,SAAUuC,EAAgB9zB,GAChD3O,KAAKlJ,OAAhB,IACI4rC,EAAiB1iC,KACrByiC,EAAe9kC,OAAO,SAAUC,GAC5B,GAAIA,EAAEnE,kBAAoB3B,oBAAkB8F,EAAElE,cAAe,CAEzD,IAAe,IADHkE,EAAElE,aAAagF,QAAQiQ,GAQ/B,OAHA+zB,EAAevI,aAAe,UAC9BuI,EAAe/G,oBACf+G,EAAelJ,SAAU,GALzBkJ,EAAexC,mBAAmBtiC,EAAElE,aAAciV,OAWlE4qB,EAAMt4B,UAAU4I,QAAU,WACtB7J,KAAKwK,uBAKT+uB,EAAMt4B,UAAUuJ,oBAAsB,WAC9BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAIojB,GAAmB9tB,KAAK65B,YACxC75B,KAAKlJ,OAAO4T,IAAIsjB,GAAmBhuB,KAAKmH,YACxCnH,KAAKlJ,OAAO4T,IAAIovB,GAAgB95B,KAAK+5B,WACrC/5B,KAAKlJ,OAAO4T,IAAIsvB,GAAmBh6B,KAAKi6B,eAS5CV,EAAMt4B,UAAU4B,cAAgB,WAC5B,MAAO,kBAEJ02B,KC//BP94B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQpJ,EAAKqJ,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAU7J,OAAQ8J,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAO7I,OAAOiJ,yBAAyBL,EAAQpJ,GAAOqJ,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQpJ,EAAKqJ,QACpH,IAAK,IAAI7J,EAAI2J,EAAWzJ,OAAS,EAAGF,GAAK,EAAGA,KAASkJ,EAAIS,EAAW3J,MAAIgK,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQpJ,EAAKwJ,GAAKd,EAAEU,EAAQpJ,KAASwJ,GAChJ,OAAOF,EAAI,GAAKE,GAAKhJ,OAAOoJ,eAAeR,EAAQpJ,EAAKwJ,GAAIA,GAM5Di3B,GAAiC,SAAU32B,GAE3C,SAAS22B,IACL,OAAkB,OAAX32B,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,GAAUi4B,EAAiB32B,GAI3BZ,IACIc,cACDy2B,EAAgBz3B,UAAW,gBAAY,GACnCy3B,GACTx2B,iBChCEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAsBxC4hC,GAA8C,SAAU5gC,GAExD,SAAS4gC,EAA6B7rC,GAClC,IAAIuQ,EAAQtF,EAAOa,KAAK5C,KAAMlJ,IAAWkJ,KAEzC,OADAqH,EAAM6C,mBACC7C,EAkDX,OAtDA5G,GAAUkiC,EAA8B5gC,GAMxC4gC,EAA6B1hC,UAAUiJ,iBAAmB,WACtDlK,KAAKlJ,OAAOqT,GAAGy4B,GAAqB5iC,KAAK6iC,SAAU7iC,OAEvD2iC,EAA6B1hC,UAAU4hC,SAAW,SAAU7/B,GACxDhD,KAAK8iC,WAAa9/B,EAAKrE,MAE3BgkC,EAA6B1hC,UAAU8hC,aAAe,SAAUpkC,EAAMqkC,GAClE,GAAKhjC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACvC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAe1rC,EAAgByI,KAAKlJ,QACzE,OAAOiL,EAAOd,UAAU8hC,aAAangC,KAAK5C,KAAMrB,EAAMqkC,GAGjDlrC,oBAAkBkrC,EAAWnjC,cAAsD,gBAAtCmjC,EAAWnjC,YAAYgI,aACrEm7B,EAAWnjC,YAAc,WAG7B,IAAK,IADDkI,EAAOhG,EAAOd,UAAU8hC,aAAangC,KAAK5C,KAAMrB,EAAMqkC,GACjDvhC,EAAI,EAAGA,EAAIsG,EAAKpQ,OAAQ8J,IAC7BsG,EAAKtG,GAAGnH,MAAS0F,KAAe,WAAEtB,QAAQqJ,EAAKtG,GAAG9C,MAEtD,OAAOoJ,GAGf46B,EAA6B1hC,UAAUiiC,mBAAqB,SAAUznC,GAClE,IAAI0nC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAU1e,KAAK,SAAUpqB,GAAS,OAAOoB,IAAWpB,IAChE,GAAK2F,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACvC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAe1rC,EAAgByI,KAAKlJ,QAAS,CAClF,IACIqiB,EAAcnZ,KAAU,MAAEmZ,YAC1BgqB,GACAnjC,KAAKojC,SACLpjC,KAAKrB,QACLqB,KAAKqjC,WAEW,kBAAX5nC,GAA8BuE,KAAKojC,MAAMjqB,IAC9CnZ,KAAKojC,MAAMjqB,GAAaxhB,OAAUqI,KAAKlJ,OAAoB,cAAEwsC,uBACtDtjC,KAAKojC,MAAMjqB,QAIlBgqB,GAAoB,kBAAX1nC,KACTuE,KAAKojC,SACLpjC,KAAKrB,QACLqB,KAAKqjC,WAGb,OAAOF,GAEJR,GACTY,4BCvEEC,GAAwB,WAIxB,SAASA,EAAO1sC,GACZ2L,OAAKC,OAAO+gC,UACZzjC,KAAKlJ,OAASA,EACdkJ,KAAK0jC,mBAAoB,EACzB1jC,KAAKmO,kBACLnO,KAAK2jC,oBACL3jC,KAAK4jC,sBACL5jC,KAAKkK,mBAyMT,OAnMAs5B,EAAOviC,UAAU4B,cAAgB,WAC7B,MAAO,UAOX2gC,EAAOviC,UAAU4I,QAAU,WACvB7J,KAAKwK,uBAKTg5B,EAAOviC,UAAUiJ,iBAAmB,WAChClK,KAAKlJ,OAAOqT,GAAG,mBAAoBnK,KAAK6jC,sBAAuB7jC,MAC/DA,KAAKlJ,OAAOqT,GAAG,eAAgBnK,KAAK8jC,iBAAkB9jC,OAK1DwjC,EAAOviC,UAAUuJ,oBAAsB,WAC/BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,mBAAoB1K,KAAK6jC,uBACzC7jC,KAAKlJ,OAAO4T,IAAI,eAAgB1K,KAAK8jC,oBAMzCN,EAAOviC,UAAU4iC,sBAAwB,SAAUE,GAC/CxuB,WAAS,8BAAgCvV,KAAKlJ,QAC9CkJ,KAAK2jC,iBAAmBI,EAAYplC,KACpCqB,KAAK4jC,sBACL5jC,KAAKmO,kBACLnO,KAAK0jC,mBAAoB,EACzB,IAAK,IAAIvK,EAAI,EAAGA,EAAIn5B,KAAK2jC,iBAAiBhsC,OAAQwhC,IAAK,CACnD,IAAIrqB,EAAM9O,KAAK2jC,iBAAiBxK,GAChCn5B,KAAKgkC,gBAAgBl1B,GACrB,IAAI5W,EAAwD,KAAxC8H,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAa+H,KAAKlJ,OAAOsB,eAAeF,cACtF8H,KAAKlJ,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,MACzF+H,KAAK0jC,mBAAoB,GAE7B,IAAIO,EAAUtrC,YAAU,eAAgBmW,IACnChX,oBAAkBmsC,IAAYA,EAAQtsC,QACvC4d,WAAS,0BAA2BvV,KAAKkkC,iBAAiBp1B,GAAMA,GAEpE,IAAIq1B,EAAWxrC,YAAU,aAAcmW,GACvC,IAAKhX,oBAAkBqsC,GAAW,CAC9B,IAAIC,EAAYjrC,EAAc6G,KAAKlJ,OAAQgY,EAAI5V,WAAWE,UAAU,GAGpEmc,WAAS,2BAA2B,EAAM6uB,GACtCA,GAAaA,EAAUlrC,YACvB8G,KAAKqkC,2BAA2BD,IAIxCpkC,KAAK2jC,iBAAiBhsC,OAAS,GAAKqI,KAAK0jC,mBACzC1jC,KAAKskC,oBAETtkC,KAAKlJ,OAAOsb,OAAO,gBAAkBgB,OAAQpT,KAAKmO,kBAEtDq1B,EAAOviC,UAAUojC,2BAA6B,SAAUvrC,GACpD,IAAIsrC,EAAYjrC,EAAc6G,KAAKlJ,OAAQgC,EAAOI,WAAWE,UAAU,GACnEmrC,EAAgBhmC,WAAS,2BAA4ByB,KAAKlJ,QAC1DstC,GAAaG,EAActnC,eAAemnC,EAAUhrC,WACpDmc,WAAS,2BAA2B,EAAM6uB,GAE1CA,GAAaA,EAAUlrC,YACvB8G,KAAKqkC,2BAA2BD,IAIxCZ,EAAOviC,UAAU+iC,gBAAkB,SAAUlrC,GACzC,IAAIhC,EAASqC,EAAc6G,KAAKlJ,OAAQgC,EAAO0F,gBAI/C,GAAsB,UAFsC,KAAxCwB,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAAa+H,KAAKlJ,OAAOsB,eAAeF,cACtF8H,KAAKlJ,OAAOkB,eAAeE,gBACmD,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCkJ,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAClD+H,KAAKlJ,OAAOsB,eAAeF,cAAgB8H,KAAKlJ,OAAOkB,eAAeE,gBACa,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAMnC+H,KAAKgkC,gBAAgBltC,IAL0B,IAA3CkJ,KAAK2jC,iBAAiBjlC,QAAQ5H,IAC9BkJ,KAAKgkC,gBAAgBltC,IAOY,IAAzCkJ,KAAKmO,eAAezP,QAAQ5F,KAC5BkH,KAAKmO,eAAevV,KAAKE,GACzByc,WAAS,4BAA8Bzc,EAAOM,SAAUN,EAAQkH,KAAKlJ,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CkJ,KAAK2jC,iBAAiBjlC,QAAQ5F,GAM9B,aAL6C,IAAzCkH,KAAKmO,eAAezP,QAAQ5F,KAC5BkH,KAAKmO,eAAevV,KAAKE,GACzByc,WAAS,4BAA8Bzc,EAAOM,SAAUN,EAAQkH,KAAKlJ,QACrEgC,EAAOiZ,yBAA0B,SAMzC/R,KAAKgkC,gBAAgBltC,IAC0B,IAA3CkJ,KAAK2jC,iBAAiBjlC,QAAQ5H,KAA2D,IAAzCkJ,KAAKmO,eAAezP,QAAQ5H,IAC/B,IAAzCkJ,KAAKmO,eAAezP,QAAQ5F,KAC5BkH,KAAKmO,eAAevV,KAAKE,GACzByc,WAAS,4BAA8Bzc,EAAOM,SAAUN,EAAQkH,KAAKlJ,UAI5B,IAAzCkJ,KAAKmO,eAAezP,QAAQ5F,KAA6D,IAA3CkH,KAAK2jC,iBAAiBjlC,QAAQ5F,KAC5EkH,KAAKmO,eAAevV,KAAKE,GACzByc,WAAS,4BAA8Bzc,EAAOM,SAAUN,EAAQkH,KAAKlJ,UAyBzF0sC,EAAOviC,UAAUijC,iBAAmB,SAAU5rC,GAG1C,IAAK,IAFDksC,EAAW7rC,YAAU,eAAgBL,GACrCmsC,GAAU,EACLp2B,EAAQ,EAAGA,EAAQm2B,EAAS7sC,OAAQ0W,IAAS,CAClD,IAAI41B,EAAUO,EAASn2B,GAAO3U,aAC1BxB,EAAwD,KAAxC8H,KAAKlJ,OAAOiB,KAAKC,eAAeC,IAChD+H,KAAKlJ,OAAOsB,eAAeF,cAAgB8H,KAAKlJ,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,KAAc,CAC7BsG,WAAS,2BAA4ByB,KAAKlJ,QAC3CmG,eAAeunC,EAASn2B,GAAOjV,YAC9C4G,KAAKmO,eAAevV,KAAK4rC,EAASn2B,IAClCkH,WAAS,4BAA8BivB,EAASn2B,GAAOjV,SAAUorC,EAASn2B,GAAQrO,KAAKlJ,QACvF2tC,GAAU,GAGlB,GAAuB,SAAlBvsC,IACsD,IAAnD8H,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,OACpC,IAApD+H,KAAK2jC,iBAAiBjlC,QAAQ8lC,EAASn2B,IAAgB,CACvDo2B,GAAU,EACV,OAGH3sC,oBAAkBmsC,IAAYA,EAAQtsC,SACvC8sC,EAAUzkC,KAAKkkC,iBAAiBM,EAASn2B,KAEtB,UAAlBnW,GAA+C,SAAlBA,IAA6BssC,EAAS7sC,SACpE8sC,GAAU,GAGlB,OAAOA,GAEXjB,EAAOviC,UAAUqjC,kBAAoB,WAGjC,IAAK,IAFDxrC,EAASkH,KAAKmO,eACd3V,EAAMwH,KAAKmO,eAAexW,OACrB4J,EAAI,EAAGA,EAAI/I,EAAK+I,IAAK,CAC1B,IAAImjC,EAAWvrC,EAAc6G,KAAKlJ,OAAQgC,EAAOyI,GAAG/C,gBAEpD,IAD2C,IAA9B1F,EAAO4F,QAAQgmC,GAChB,CACR,IAAIC,EAAWxrC,EAAc6G,KAAKlJ,OAAQgC,EAAOyI,GAAG/C,gBAAgB,GACpE1F,EAAOyI,GAAG+P,YAAcqzB,EAASrzB,YAAc,OAG/CxY,EAAOyI,GAAG+P,YAAc,EACxBtR,KAAK4jC,mBAAmBhrC,KAAKE,EAAOyI,MAIhDiiC,EAAOviC,UAAU6iC,iBAAmB,SAAUnlC,GAK1C,IAJA,IAGIgQ,EAHAN,EAAQ,EACR3Q,EAAWiB,EAAKjB,SAChBlF,EAAMkF,EAAS/F,OAEP0W,EAAQ7V,EAAK6V,IAAS,CAE9B,IAAIu2B,GADJj2B,EAAgBjR,EAAS2Q,IACEiD,aACvBszB,GAAqB,IAAXA,GAAiB9sC,oBAAkB6W,EAAcoD,2BAC3DpD,EAAcoD,wBAA0B,KACxCpD,EAAc2C,YAAc,MAGpCtR,KAAKmO,kBACLnO,KAAKlJ,OAAOsb,OAAO,iBAAmBgB,OAAQ1V,EAAU2Q,MAAO3Q,EAAS/F,UAErE6rC,KClNPqB,GAA6B,WAI7B,SAASA,EAAY/tC,GACjB2L,OAAKC,OAAOoiC,eACZ9kC,KAAKlJ,OAASA,EACdkJ,KAAK6T,eACL7T,KAAKkK,mBA6JT,OAvJA26B,EAAY5jC,UAAU4B,cAAgB,WAClC,MAAO,eAKXgiC,EAAY5jC,UAAUiJ,iBAAmB,WACrClK,KAAKlJ,OAAOqT,GAAG,gBAAiBnK,KAAK+kC,uBAAwB/kC,MAC7DA,KAAKlJ,OAAOqT,GAAG,gBAAiBnK,KAAKmoB,mBAAoBnoB,MACzDA,KAAKlJ,OAAOiB,KAAKoS,GAAG,sBAAuBnK,KAAKglC,mBAAoBhlC,MACpEA,KAAKlJ,OAAOiB,KAAKoS,GAAG,iBAAkBnK,KAAKilC,eAAgBjlC,OAO/D6kC,EAAY5jC,UAAU4I,QAAU,WAC5B7J,KAAKwK,uBAKTq6B,EAAY5jC,UAAUuJ,oBAAsB,WACpCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,gBAAiB1K,KAAK+kC,wBACtC/kC,KAAKlJ,OAAO4T,IAAI,gBAAiB1K,KAAKmoB,oBACtCnoB,KAAKlJ,OAAOiB,KAAK2S,IAAI,sBAAuB1K,KAAKglC,oBACjDhlC,KAAKlJ,OAAOiB,KAAK2S,IAAI,iBAAkB1K,KAAKilC,kBAEhDJ,EAAY5jC,UAAU8jC,uBAAyB,SAAUjO,GACrD92B,KAAK6T,YAAcijB,GAEvB+N,EAAY5jC,UAAUyd,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQ0mB,GAChC,IAAI79B,EAAQrH,KACRjJ,EAAaiJ,KAAKlJ,OAAOC,WACzBmmB,EAAWzkB,SAGf,OAFA8c,WAAS,QAAS2vB,EAAOhoB,GACzB3H,WAAS,UAAU,EAAO2H,GACnB,IAAIioB,QAAQ,SAAUpa,EAASqa,GAClC,IAAIvrC,EAAKwN,EAAMg+B,UAAY,IAAIruC,cAAYD,GAAcsQ,EAAMvQ,OAAOC,WAClEud,EAAQ,IAAIC,QAMhB,GALKlN,EAAMg+B,YACP/wB,EAAQjN,EAAMuQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAO4I,IAE7B7V,EAAMvQ,OAAOoS,QAAQo8B,EAAyB/oC,SAAO2gB,EAAUmB,IAC3D1lB,YAAU,SAAUukB,GACpB,OAAO,KAEXrjB,EAAGob,aAAaX,GAAOY,KAAK,SAAUtX,GAClC,IAAI2nC,EAAa,KAKjB,OAJKztC,oBAAkBumB,IAA2BvmB,oBAAkBumB,EAAsBtnB,cACtFwuC,EAAalnB,EAAsBtnB,YAEvCsnB,EAAwBhX,EAAMm+B,2BAA2BnnB,EAAuBtnB,EAAY6G,GACrFyJ,EAAMvQ,OAAOiB,KAAK0mB,kBAAkBC,IAAIrX,EAAMvQ,OAAOiB,KAAMsmB,EAAuBC,EAAkBC,EAAU2mB,EAAO1mB,GAAQtJ,KAAK,SAAUuwB,GAC7H,MAAdF,EACAlnB,EAAsBtnB,WAAawuC,SAG5BlnB,EAAsBtnB,WAEjCg0B,EAAQ0a,UAKxBZ,EAAY5jC,UAAU2W,cAAgB,SAAUtD,EAAO4I,GAQnD,OAPKplB,oBAAkBolB,IAAqC,gBAAxBA,EAAStD,YACtC5Z,KAAKlJ,OAAOga,cACfoM,EAAStD,WAAa,WACtBtF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM3U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAClDmX,EAAQ3b,YAAU,mCAAoCqH,KAAKlJ,OAAnD6B,CAA2D2b,IAEhEA,GAEXuwB,EAAY5jC,UAAUukC,2BAA6B,SAAUtoB,EAAUwoB,EAAOC,GAE1E,IAAI3iC,EAAOvK,SAkBX,GAjBA8c,WAAS,QAASvV,KAAKlJ,OAAOiB,KAAK4f,gBAAgBC,eAAc,GAAO5U,GACxEuS,WAAS,YAAY,EAAMvS,GACtBlL,oBAAkBolB,IAAcplB,oBAAkBolB,EAAStD,aAC5DrE,WAAS,aAAc2H,EAAStD,WAAY5W,GAE3ChD,KAAKqlC,WAAcvtC,oBAAkBkI,KAAKlJ,OAAOqG,mBAClD6C,KAAKlJ,OAAO2G,cACZuC,KAAKlJ,OAAOmuB,WAAW5Q,kBAAkB1b,YAAU,SAAUgtC,IAC7DpwB,WAAS,aAAcvV,KAAKlJ,OAAO4G,SAAUsF,IAEjDhD,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,GAEpCA,EAAOhD,KAAK6T,YACZ6xB,EAAQ5tC,oBAAkBkL,EAAKoQ,QAAUpT,KAAKlJ,OAAO4G,SAAS6K,MAAM,GAAKvF,EAAKoQ,OACzEpT,KAAKqlC,YACNrlC,KAAKlJ,OAAO4G,aAEZwf,GAAYA,EAASnmB,YAAciJ,KAAKqlC,UAAW,CACnD,IAAIO,EAAY5lC,KAAKlJ,OAAO4G,SACxBmoC,EAAU3oB,EAASnmB,sBAAsBC,cAAckmB,EAASnmB,WAAWA,WAAW6E,KAAOshB,EAASnmB,WAC1GiJ,KAAKlJ,OAAOmuB,WAAW5Q,kBAAkBwxB,GACzCH,EAAQ1lC,KAAKlJ,OAAO4G,SACpBsC,KAAKlJ,OAAO4G,SAAWkoC,EAI3B,OAFA1oB,EAAWplB,oBAAkBolB,GAAYzkB,SAAWykB,EACpDA,EAASnmB,WAAa,IAAIC,eAAc4E,KAAM8pC,IACvCxoB,GAMX2nB,EAAY5jC,UAAUknB,mBAAqB,SAAUnlB,GACjD,GAAIhD,KAAKlJ,OAAOiB,KAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO2I,gBAAiB,CACvF,IAAI9E,KACAgE,EAAOqE,EAAKrE,KAEZ0S,EADcvZ,oBAAkB6G,EAAK2S,aACjB3S,EAAKpE,MAAQoE,EAAK2S,YAC1C3W,EAAMmrC,OAASz0B,EACfrO,EAAKrI,MAAQA,EAEjBqF,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,GACpChD,KAAKlJ,OAAOoS,QAAQ,qBAAsBlG,IAE9C6hC,EAAY5jC,UAAU+jC,mBAAqB,SAAUe,GACjD,GAAsB,UAAlBA,EAAS9iC,KAAkB,CAC3B,IAAI+iC,EAAcD,EAASE,OAAOtnC,KAC9BunC,EAAqBlmC,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAIquC,EAAY9sC,YAAcC,EAAc6G,KAAKlJ,OAAQkvC,EAAY9sC,WAAWE,SAAU+sC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAU1uC,OAC/B2uC,EAAWN,EAAYzrC,MAC3BwrC,EAASM,UAAUD,EAAY,GAAGG,UAAaC,aAAcF,EAAUG,aAAa,MAKhG5B,EAAY5jC,UAAUgkC,eAAiB,SAAgD1mB,GACnF,IAAK,IAAI9mB,EAAI,EAAGA,EAAI8mB,EAASmoB,WAAW/uC,OAAQF,IACxC8mB,EAASmoB,WAAWjvC,GAAGsQ,OACvBwW,EAASmoB,WAAWjvC,GAAGkvC,WAAcC,mBAAmB,KAIpE/B,EAAY5jC,UAAUokC,QAAU,WAC5B,OAAQxuC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,SAEjD+tC,KCrKPgC,GAA2B,WAI3B,SAASA,EAAU/vC,GACf2L,OAAKC,OAAOokC,aACZ9mC,KAAKlJ,OAASA,EACdkJ,KAAK6T,eACL7T,KAAKkK,mBAoIT,OA9HA28B,EAAU5lC,UAAU4B,cAAgB,WAChC,MAAO,aAKXgkC,EAAU5lC,UAAUiJ,iBAAmB,WACnClK,KAAKlJ,OAAOqT,GAAG,cAAenK,KAAKooB,iBAAkBpoB,MACrDA,KAAKlJ,OAAOqT,GAAG,gBAAiBnK,KAAK+mC,qBAAsB/mC,OAK/D6mC,EAAU5lC,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,cAAe1K,KAAKooB,kBACpCpoB,KAAKlJ,OAAO4T,IAAI,gBAAiB1K,KAAK+mC,wBAO1CF,EAAU5lC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAETq8B,EAAU5lC,UAAU8lC,qBAAuB,SAAUjQ,GACjD92B,KAAK6T,YAAcijB,GAEvB+P,EAAU5lC,UAAUyd,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,IAAInX,EAAQrH,KACR0lC,EAAQ1lC,KAAKlJ,OAAOC,WACpBsmB,EAAO5kB,SACP4sC,GAAWxuC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,QAE3D,OADAye,WAAS,UAAU,EAAO8H,GACnB,IAAI8nB,QAAQ,SAAUpa,EAASqa,GAClC,IAAIvrC,EAAKwrC,EAAU,IAAIruC,cAAY0uC,GAASr+B,EAAMvQ,OAAOC,WACrDud,EAAQ,IAAIC,QAMhB,GALK8wB,IACD/wB,EAAQjN,EAAMuQ,cAActD,GAC5BiB,WAAS,QAASjB,EAAO+I,IAE7BhW,EAAMvQ,OAAOoS,QAAQ89B,EAAuBzqC,SAAO8gB,EAAMwB,IACrDlmB,YAAU,SAAU0kB,GACpB,OAAO,KAEXxjB,EAAGob,aAAaX,GAAOY,KAAK,SAAUtX,GAClC,IAAIqpC,EAAc,KAKlB,OAJKnvC,oBAAkB+mB,IAAyB/mB,oBAAkB+mB,EAAoB9nB,cAClFkwC,EAAcpoB,EAAoB9nB,YAEtC8nB,EAAsBxX,EAAM6/B,wBAAwBroB,EAAqB6mB,EAAO9nC,GACzEyJ,EAAMvQ,OAAOiB,KAAKgnB,gBAAgBL,IAAIrX,EAAMvQ,OAAOiB,KAAM8mB,EAAqBP,EAAkBQ,EAAQN,GAAQtJ,KAAK,SAAU4mB,GAC/G,MAAfmL,EACApoB,EAAoB9nB,WAAakwC,SAG1BpoB,EAAoB9nB,WAE/Bg0B,EAAQ+Q,UAKxB+K,EAAU5lC,UAAU2W,cAAgB,SAAUtD,EAAO+I,GAQjD,OAPKvlB,oBAAkBulB,IAA6B,gBAApBA,EAAKzD,YAC9B5Z,KAAKlJ,OAAOga,cACfuM,EAAKzD,WAAa,WAClBtF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM3U,KAAKlJ,OAAOqG,gBAAiB,QAAS,MAClDmX,EAAQ3b,YAAU,mCAAoCqH,KAAKlJ,OAAnD6B,CAA2D2b,IAEhEA,GAEXuyB,EAAU5lC,UAAUimC,wBAA0B,SAAU7pB,EAAMqoB,EAAOC,GACjE,IAAI3iC,KAEAqiC,GAAWxuC,EAAamJ,KAAKlJ,SAAW8C,EAAUoG,KAAKlJ,QAkB3D,GAjBAye,WAAS,QAASvV,KAAKlJ,OAAOiB,KAAK4f,gBAAgBC,eAAc,GAAO5U,GACxEuS,WAAS,YAAY,EAAMvS,GACtBlL,oBAAkBulB,IAAUvlB,oBAAkBulB,EAAKzD,aACpDrE,WAAS,aAAc8H,EAAKzD,WAAY5W,GAEvCqiC,GAAYvtC,oBAAkBkI,KAAKlJ,OAAOqG,mBAC3C6C,KAAKlJ,OAAO2G,cACZuC,KAAKlJ,OAAOmuB,WAAW5Q,kBAAkB9V,WAAS,SAAUonC,IAC5DpwB,WAAS,aAAcvV,KAAKlJ,OAAO4G,SAAUsF,IAEjDhD,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,GAEpCA,EAAOhD,KAAK6T,YACZ6xB,EAAQ5tC,oBAAkBkL,EAAKoQ,QAAUpT,KAAKlJ,OAAO4G,SAAS6K,MAAM,GAAKvF,EAAKoQ,OACzEiyB,IACDrlC,KAAKlJ,OAAO4G,aAEZ2f,GAAQA,EAAKtmB,YAAcsuC,EAAS,CACpC,IAAI8B,EAAYnnC,KAAKlJ,OAAO4G,SACxBmoC,EAAUxoB,EAAKtmB,sBAAsBC,cAAcqmB,EAAKtmB,WAAWA,WAAW6E,KAAOyhB,EAAKtmB,WAC9FiJ,KAAKlJ,OAAOmuB,WAAW5Q,kBAAkBwxB,GACzCH,EAAQ1lC,KAAKlJ,OAAO4G,SACpBsC,KAAKlJ,OAAO4G,SAAWypC,EAI3B,OAFA9pB,EAAOvlB,oBAAkBulB,MAAaA,EACtCA,EAAKtmB,WAAa,IAAIC,eAAc4E,KAAM8pC,IACnCroB,GAMXwpB,EAAU5lC,UAAUmnB,iBAAmB,SAAUplB,GAC7C,GAAIhD,KAAKlJ,OAAOiB,KAAK2Z,oBAAoB1O,EAAKrD,OAAOqM,OAAShM,KAAKlJ,OAAO2I,gBAAiB,CACvF,IAAI9E,KACAgE,EAAOhG,YAAU,OAAQqK,GAEzBqO,EADcvZ,oBAAkB6G,EAAK2S,aACjB3S,EAAKpE,MAAQoE,EAAK2S,YAC1C3W,EAAMysC,gBAAwB,EAAN/1B,EACxBrO,EAAKrI,MAAQA,EAEjBqF,KAAKlJ,OAAOsb,OAAO,gBAAiBpP,GACpChD,KAAKlJ,OAAOoS,QAAQ,mBAAoBlG,IAErC6jC,KC3IPQ,GAAsB,WACtB,SAASA,EAAKvwC,GACV2L,OAAKC,OAAO4kC,QACZtnC,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBA8IT,OAzIAm9B,EAAKpmC,UAAUiJ,iBAAmB,WAC9BlK,KAAKlJ,OAAOqT,GAAGqrB,EAAiCx1B,KAAKunC,0BAA2BvnC,MAChFA,KAAKlJ,OAAOqT,GAAGoR,EAAsBvb,KAAKwnC,WAAYxnC,OAK1DqnC,EAAKpmC,UAAUuJ,oBAAsB,WAC7BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI8qB,EAAiCx1B,KAAKunC,2BACtDvnC,KAAKlJ,OAAO4T,IAAI6Q,EAAsBvb,KAAKwnC,cAM/CH,EAAKpmC,UAAU4B,cAAgB,WAC3B,MAAO,SAMXwkC,EAAKpmC,UAAU4uB,QAAU,WACrB7vB,KAAKlJ,OAAOiB,KAAKo6B,YAAYtC,WAOjCwX,EAAKpmC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAOT68B,EAAKpmC,UAAUgxB,SAAW,SAAUC,GAChClyB,KAAKlJ,OAAOiB,KAAKo6B,YAAYF,SAASC,IAO1CmV,EAAKpmC,UAAUmxB,sBAAwB,SAAU7uB,GAC7CvD,KAAKlJ,OAAOiB,KAAKo6B,YAAYC,sBAAsB7uB,IAKvD8jC,EAAKpmC,UAAUsmC,0BAA4B,SAAUzwB,GACjDA,EAAWhe,OAAOS,SAAiC,aAAtBud,EAAWrb,OACpCoS,eACA7N,KAAKlJ,OAAO4G,SAASC,OAAO,SAAUC,GAClC,OAAOA,EAAExE,WAAa0d,EAAWhe,OAAOM,WACzC,GAAGG,SAAiC,aAAtBud,EAAWrb,QAEhC,IAAIgsC,GACAr0B,OAAQpT,KAAKlJ,OAAO4G,SACpBmB,IAAKiY,EAAWjY,IAChBpD,OAAQqb,EAAWrb,OACnB3C,OAAQge,EAAWhe,OACnBuV,MAAOrO,KAAKlJ,OAAO4G,SAAS/F,QAEhC4G,WAAS,oBAAqByB,KAAKlJ,QAAQ2e,mBAAmBgyB,IAElEJ,EAAKpmC,UAAUymC,SAAW,SAAUC,EAAcvsB,EAAMhI,GAapD,IAAK,IAZDw0B,EAAa9vC,oBAAkBsb,MAAeA,EAC9CpW,EAAU,SAAU6qC,GACpBD,EAAWhvC,KAAKwiB,EAAKysB,IACrB,IAAIC,KACA1sB,EAAKysB,GAAGpuC,kBACRquC,EAAMH,EAAahqC,OAAO,SAAUC,GAChC,OAAOwd,EAAKysB,GAAGzuC,WAAawE,EAAEY,iBAElCopC,EAAal5B,EAAOg5B,SAASC,EAAcG,EAAKF,KAGpDl5B,EAAS1O,KACJ6nC,EAAI,EAAGA,EAAIzsB,EAAKzjB,OAAQkwC,IAC7B7qC,EAAQ6qC,GAEZ,OAAOD,GAEXP,EAAKpmC,UAAUumC,WAAa,SAAUO,GAClC,IAAI1gC,EAAQrH,KACRnG,EAAK,IAAI7C,cAAY+wC,EAAe30B,QACxC,GAA8C,SAA1CpT,KAAKlJ,OAAOia,aAAaC,aAAyB,CAClD,IAAIoK,KACA4sB,EAAYhoC,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7CqI,KAAKlJ,OAAOsB,eAAeF,eAA0E,SAA7C8H,KAAKlJ,OAAOsB,eAAeF,eACpF,cAAgB,QAChBoc,GAAQ,IAAIC,SAAQI,MAAMqzB,EAAU,QAAS,GACjD5sB,EAAOvhB,EAAGkc,aAAazB,GACvByzB,EAAe15B,MAAQ+M,EAAKzjB,OAC5B,IAEIswC,GAFAC,EAAOloC,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,YACrCC,EAAUpoC,KAAKlJ,OAAOiB,KAAKgZ,aAAaoI,aACf,GAC7B7E,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9B9sB,EAAOvhB,EAAGkc,aAAazB,GACvB,IAAIszB,EAAa5nC,KAAK0nC,SAASK,EAAe30B,OAAQgI,GACtD2sB,EAAe30B,OAASw0B,MAEvB,CACD,IAAI5a,EAAO,IAAIh2B,cAAY+wC,EAAe30B,QACtC7Z,EAAW,IAAIuI,YAAU,WAAY,WAAY,MAAMwmC,GAAG,WAAY,gBAAY1rB,GAClF2rB,EAAYvb,EAAKjX,cAAa,IAAIxB,SAAQI,MAAMpb,IAChDupC,OAAa,EAEbA,EADAjrC,EAAuBmI,KAAKlJ,QACfyxC,EAGAA,EAAU5qC,OAAO,SAAUC,GACpC,OAAO/E,EAAgBwO,EAAMvQ,OAAQ8G,EAAG2qC,KAGhDR,EAAe15B,MAAQy0B,EAAWnrC,OAC9B2c,EAAQ,IAAIC,QAAhB,IACI2zB,EAAOloC,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,SACrCC,EAAUpoC,KAAKlJ,OAAOiB,KAAKgZ,aAAaoI,YACxC2pB,EAAWnrC,OAAUywC,EAAUF,IAE/BE,GADAA,EAAWzxB,KAAK6xB,MAAM1F,EAAWnrC,OAASuwC,IAAWpF,EAAWnrC,OAASuwC,EAAQ,EAAI,KACvD,EAC9BloC,KAAKlJ,OAAOiB,KAAKulB,eAAgBvM,cAAgBoI,YAAaivB,KAAa,IAE3EH,EAAOC,GAAQE,EAAU,GAC7B9zB,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9Blb,EAAKj2B,WAAW6E,KAAOknC,EACvBiF,EAAe30B,OAAS4Z,EAAKjX,aAAazB,GAE9CtU,KAAKlJ,OAAOsb,OAAO,eAAgB21B,IAEhCV,KCrJPoB,GAAyB,WACzB,SAASA,EAAQ3xC,GACb2L,OAAKC,OAAOgmC,WACZ1oC,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBA4HT,OAtHAu+B,EAAQxnC,UAAU4B,cAAgB,WAC9B,MAAO,WAKX4lC,EAAQxnC,UAAUiJ,iBAAmB,WACjClK,KAAKlJ,OAAOqT,GAAG6d,EAAoBhoB,KAAK2oC,eAAgB3oC,MACxDA,KAAKlJ,OAAOqT,GAAG8gB,EAAqBjrB,KAAK4oC,oBAAqB5oC,OAKlEyoC,EAAQxnC,UAAUuJ,oBAAsB,WAChCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAIsd,EAAoBhoB,KAAK2oC,gBACzC3oC,KAAKlJ,OAAO4T,IAAIugB,EAAqBjrB,KAAK4oC,uBAE9CH,EAAQxnC,UAAU0nC,eAAiB,SAAU3lC,GACzC,IAAIk3B,EAAOl6B,KAAKlJ,OAEU,IAAtBkM,EAAKnE,IAAI8K,UAAkBuwB,EAAKxxB,qBAAqB/Q,OAAS,EAC9DqI,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,sBAAuBgnB,EAAKjnB,QAAQC,GAAK,yBAAyB,GAGjGpb,oBAAkBoiC,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,cACpD7R,oBAAkBoiC,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,YACxDuwB,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,UAAUpP,MAC7C2/B,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,SAAW,GAAGpP,MACxDyF,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,wBAAwB,GAG5DlT,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,wBAAwB,GAE5DgnB,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,UAAUpP,QAChD2/B,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,SAAW,GAAGpP,OACpDyF,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DgnB,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,UAAUpP,OAChDyF,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DgnB,EAAK59B,wBAAwB0G,EAAKnE,IAAI8K,UAAUpP,OAChDyF,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtBlQ,EAAKnE,IAAI8K,UAAmB7R,oBAAkBkL,EAAKrE,KAAKzF,aACxD8G,KAAKwxB,aAAa0I,EAAKjnB,QAAQC,GAAK,yBAAyB,IAGrEu1B,EAAQxnC,UAAU2nC,oBAAsB,SAAU5lC,GAC9C,IAAIk3B,EAAOl6B,KAAKlJ,OAYhB,GAXsC,SAAlCkJ,KAAKlJ,OAAOkF,aAAaC,MAA0D,UAAvC+D,KAAKlJ,OAAOiB,KAAKiE,aAAaC,MAC1E+G,EAAKE,KAAKgQ,KAAOlT,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK,YAC/ClQ,EAAKiG,QAAS,EACdjJ,KAAKlJ,OAAOiB,KAAKmE,WAAW40B,YAE5B9tB,EAAKE,KAAKgQ,KAAOlT,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK,cAC/ClT,KAAKlJ,OAAOsqB,YAEZpe,EAAKE,KAAKgQ,KAAOlT,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK,gBAC/ClT,KAAKlJ,OAAOuqB,cAEZre,EAAKE,KAAKgQ,KAAOgnB,EAAKniC,KAAKkb,QAAQC,GAAK,WAAagnB,EAAKxxB,qBAAqB/Q,OAAQ,CACvF,IAAImB,EAASohC,EAAK59B,wBAAwB49B,EAAKhyB,wBAAwB,GAAK,GACxEkyB,OAAY,EAChB,GAAIthC,EAAOyB,MAAQ2/B,EAAKxxB,qBAAqB,GAAGnO,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAIyiC,EAAK59B,wBAAwB3E,OAAQF,IACjDyiC,EAAK59B,wBAAwB7E,GAAGsF,WAAajE,EAAOI,WAAW6D,WAC/Dq9B,EAAY3iC,QAKpB2iC,EAAYF,EAAKhyB,wBAAwB,GAAK,EAElDgyB,EAAK7B,aAAa6B,EAAKhyB,wBAAwB,IAAKkyB,EAAW,SAEnE,GAAIp3B,EAAKE,KAAKgQ,KAAOgnB,EAAKniC,KAAKkb,QAAQC,GAAK,YAAcgnB,EAAKxxB,qBAAqB/Q,OAAQ,CAInF,IAHD2C,EAAQ4/B,EAAKhyB,wBAAwB,GAErChP,GADAkhC,OAAY,EACCF,EAAKxxB,qBAAqB,GAAGxP,YAC9C,IAASzB,EAAI,EAAGA,EAAIyiC,EAAK59B,wBAAwB3E,OAAQF,IACjDyiC,EAAK59B,wBAAwB7E,GAAGsF,WAAa7D,EAAW6D,WACxDq9B,EAAY3iC,GAGpByiC,EAAK7B,aAAa/9B,GAAQ8/B,EAAW,WAQ7CqO,EAAQxnC,UAAU68B,WAAa,WAC3B,OAAO99B,KAAKlJ,OAAOiB,KAAKw5B,cAAcuM,cAS1C2K,EAAQxnC,UAAUuwB,YAAc,SAAUtb,EAAOob,GAC7CtxB,KAAKlJ,OAAOiB,KAAKw5B,cAAcC,YAAYtb,EAAOob,IAOtDmX,EAAQxnC,UAAU4I,QAAU,WACxB7J,KAAKwK,uBAEFi+B,KC/HPI,GAA2B,WAI3B,SAASA,EAAU/xC,GACf2L,OAAKC,OAAOomC,aACZ9oC,KAAKlJ,OAASA,EACdkJ,KAAK+oC,oBACL/oC,KAAKuY,gBA0NT,OApNAswB,EAAU5nC,UAAU4B,cAAgB,WAChC,MAAO,WAEXgmC,EAAU5nC,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAO2T,aAQpBo+B,EAAU5nC,UAAUyX,sBAAwB,SAAUH,EAAcmC,EAAcsuB,GAC9EhpC,KAAKuY,aAAeA,EACpB,IAAItf,EAEAwE,EACJA,KACA,IAAK,IAAII,EAAI,EAAGrF,EAHOC,OAAOC,KAAKgiB,GAAc/iB,OAGTkG,EAAIrF,EAAKqF,IAAK,CACjClF,YAAU,eAAgB+hB,EAAa7c,KAEpDJ,EAAW7E,KAAK8hB,EAAa7c,IAGrC,IACIorC,EADA3vB,EAAgBjhB,EAAkBoF,GAEtCwrC,EAAcxrC,EAAW8K,QACzB,IAGIo5B,EAHAuH,EAAezwC,OAAOC,KAAKsH,KAAKlJ,OAAOY,SAASC,OAChDwxC,EAAgB1wC,OAAOC,KAAKsH,KAAKlJ,OAAOshB,YAAYzgB,OACpDyxC,EAAa3wC,OAAOC,KAAK4gB,GAAe3hB,OAE5C,GAAIqI,KAAKlJ,OAAOshB,WAAWza,OAAO,SAAUg0B,GAAK,OAAOA,EAAE0X,mBAAqB1xC,OACtE,CAAA,IAAIF,EAAI,EAAb,IAAgBe,EAAM4wC,EAAY3xC,EAAIe,EAAKf,IAGvC,GAFAwB,EAAeqgB,EAAc7hB,GAC7BkqC,EAAqB3hC,KAAKspC,sBAAsBrwC,EAAcgwC,GACtC,CAyCpB,IAAK,IAxCDjsC,EAAU,SAAUusC,EAAiBC,GACrC,IAAItmC,OAAO,EACXA,KACA,IAAK,IAAI4I,EAAc,EAAG29B,EAAQP,EAAcp9B,EAAc29B,EAAO39B,IAAe,CAGhF5I,EAFYpL,oBAAkBa,YAAU,QAAS+V,EAAO5X,OAAOY,QAAQoU,KACnE4C,EAAO5X,OAAOY,QAAQoU,GAAenT,YAAU,QAAS+V,EAAO5X,OAAOY,QAAQoU,KACpE,KAGlB,GADA5I,EAAOwL,EAAOg7B,kBAAkBxmC,EAAMwL,EAAO5X,OAAOshB,WAAWmxB,EAAkB,KAC7E76B,EAAO5X,OAAOshB,WAAWmxB,EAAkB,GAAGF,iBA2B9C,MAAO,WA1BP,IAAIM,EACJV,EAAY5qC,IAAI,SAAUT,EAAGnG,GACrBmG,EAAExE,WAAaH,EAAaG,WAC5BuwC,EAAQlyC,KAIhB,IAAImyC,EAAeD,EAAQhI,EAAqB4H,EAC5CM,EAAgBttC,YAAWtD,UACxB4wC,EAAcnwC,oBACdmwC,EAAcn7B,EAAO5X,OAAOwG,cACnCiY,WAAS,aAAcs0B,EAAe3mC,GACtC,IAAI3I,EAAQ5B,YAAU,QAASkxC,GAC/Bt0B,WAAS,QAAShb,EAAQ,EAAG2I,GACjBvK,YAAU,QAASkxC,GAG/B,GAFAt0B,WAAS,gBAAgB,EAAMrS,GAC/BqS,WAAS,iBAAkBs0B,EAAczwC,SAAU8J,GAC/C8lC,EAAQ,CACR,IAAItvC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAKsK,GAG1B+lC,EAAY5rC,OAAOusC,EAAc,EAAG1mC,IAMxCwL,EAAS1O,KACJupC,EAAkB,EAAGC,EAAQL,EAAeI,GAAmBC,EAAOD,IAC3EvsC,EAAQusC,GAEZvpC,KAAK+oC,yBAIZ,CACD,IAAI7yB,OAAQ,EACZA,KACA,IAAK,IAAIpK,EAAc,EAAG6pB,EAAWuT,EAAcp9B,EAAc6pB,EAAU7pB,IAAe,CAGtFoK,EAFape,oBAAkBa,YAAU,QAASqH,KAAKlJ,OAAOY,QAAQoU,KAClE9L,KAAKlJ,OAAOY,QAAQoU,GAAenT,YAAU,QAASqH,KAAKlJ,OAAOY,QAAQoU,KAC9D,KAEXy9B,EAAkB,EAA3B,IAAK,IAAyBO,EAAWX,EAAeI,GAAmBO,EAAUP,IACjFvpC,KAAK0pC,kBAAkBxzB,EAAOlW,KAAKlJ,OAAOshB,WAAWmxB,EAAkB,IAG/E,OAAON,GAEXJ,EAAU5nC,UAAUqoC,sBAAwB,SAAU7rC,EAAYC,GAG9D,IAAK,IADD5E,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKgF,GAAU/F,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAAS4E,EAASjG,GAGlB,GAAIgG,KAFW3F,oBAAkBgB,EAAOI,YAAc,KAClDwE,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAExE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzB4G,KAAK+oC,iBAAiBnwC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAkH,KAAKspC,sBAAsBxwC,EAAQ4E,IAO/C,OAAOsC,KAAK+oC,iBAAiBpxC,QAEjCkxC,EAAU5nC,UAAUyoC,kBAAoB,SAAUK,EAAUC,GAExD,IAAK,IAAIvyC,EAAI,EAAGe,EADUC,OAAOC,KAAKsxC,EAAQtyC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHDwyC,EAAgBnyC,oBAAkBkyC,EAAQtyC,QAAQD,GAAG6D,YAAc0uC,EAAQtyC,QAAQD,GAAG2M,MACtF4lC,EAAQtyC,QAAQD,GAAG6D,WAEd2zB,EAAK,EAAGib,EADNzxC,OAAOC,KAAKqxC,GACS9a,EAAKib,EAAOvyC,OAAQs3B,IAAM,CACtD,IAAIh3B,EAAMiyC,EAAOjb,GACjB,GAAIh3B,IAAQgyC,EACR,GAAIjqC,KAAK+oC,iBAAiBpxC,OACtBoyC,EAAS9xC,GAAO+H,KAAKmqC,iBAAiBH,EAAQtyC,QAAQD,GAAIuI,KAAK+oC,uBAE9D,GAAI/oC,KAAKlJ,OAAOqjB,YAAa,CAC9B,IAAIxb,EAAOqB,KAAKlJ,OAAOC,sBAAsBC,cAAcgJ,KAAKlJ,OAAOC,WAAWA,WAAW6E,KACvFoE,KAAKlJ,OAAO4G,SAClBqsC,EAAS9xC,GAAO+H,KAAKmqC,iBAAiBH,EAAQtyC,QAAQD,GAAIkH,IAQ1E,OAAOorC,GAEXlB,EAAU5nC,UAAUkpC,iBAAmB,SAAUC,EAAe73B,GAC5D,IACI83B,EADAv1B,EAAM,IAAIP,QAEd81B,KACA,IAAI1tB,KACA1Z,EAAQnL,oBAAkBsyC,EAAchmC,YACiBwY,EAAzD5c,KAAKlJ,OAAO+jB,iBAAiBuvB,EAAchmC,OAAOnB,KACtDmnC,EAAchtB,qBAAsBjB,OAAQnc,KAAKsqC,kBAAkBF,EAAcjuB,OAAQlZ,KACzFmnC,EAAcnuB,aAAajc,KAAKlJ,OAAOiB,KAAK8nB,QAC5C,IAAIxD,EAAW+tB,EAAc3tB,gBAAwC,SAAUrU,GAAK,OAAOA,GAC3FgiC,EAAc1tB,YAAYC,GAC1B,IAAI4tB,EAAUH,EAAcjtB,YAAY,GACxCrI,EAAIE,QAAUhV,KAAKuY,aACnBzD,EAAI01B,gBACJ,IAEIC,EAFAC,EAAU,IAAI1zC,cAAYub,GAAawD,aAAajB,GACpD/R,EAAQqnC,EAAcnnC,KAE1BF,GAASqnC,EAAcnnC,MACvB,IAAK,IAAIxL,EAAI,EAAGA,EAAIsL,EAAMpL,OAAQF,IAAK,CACnCgzC,EAAa1nC,EAAMtL,GACnB,IAAIQ,EAAMmyC,EAAchmC,MAAQ,MAAQrB,EAAMtL,GAAGkzC,cAC7CC,EAAmB,WAAb7nC,EAAMtL,GAAkBkB,YAAU,aAAc+xC,GACtDG,qBAAmB9nC,EAAMtL,GAAIizC,EAASN,EAAepqC,KAAKlJ,QAC1Dg0C,EAAOV,EAAc9uC,WACrByvC,EAAuB,WAAbhoC,EAAMtL,GAAkBmzC,EAAI3yC,GAAO2yC,EACjDP,EAAOS,GAAQT,EAAOS,OACtBT,EAAOS,GAAM7yC,GAAO8yC,EACpBV,EAAOS,GAAM/nC,EAAMtL,IAAOK,oBAAkB8yC,GAA2B,IAApBvuB,EAAS0uB,GAEhEpuB,EAAOR,OAASiuB,EAAc3tB,eAC9B,IAAIrL,EAAc9E,gBAAc,MAC5BC,UAAW,cAEfuG,iBAAe1B,EAAam5B,EAAQzyB,GAAGuyB,EAAOD,EAAc9uC,YAAa0E,KAAKlJ,OAAQyzC,EAAQrtB,WAC9F,IAAI7iB,EAAQgwC,EAAOD,EAAc9uC,YAAYmvC,GAE7C,OAA8C,IAA1Cr5B,EAAY5D,UAAU9O,QAAQrE,GACf+W,EAAY5D,UAAYnT,EAIhC+W,EAAY5D,WAG3Bq7B,EAAU5nC,UAAUqpC,kBAAoB,SAAUU,EAAe/nC,GAC7D,GAAInL,oBAAkBmL,IAAkC,iBAAlB+nC,EAClC,OAAOA,EAEX,IAAI/wC,EACJ,OAAQgJ,GACJ,IAAK,SACDhJ,GAAQkiB,OAAQ6uB,GAChB,MACJ,IAAK,WACD/wC,GAAQgJ,KAAM,WAAYmZ,SAAU4uB,GACpC,MACJ,IAAK,OACD/wC,GAAQgJ,KAAMA,EAAMmZ,SAAU4uB,GAGtC,OAAO/wC,GAOX4uC,EAAU5nC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAEFq+B,KClOPoC,GAAsB,WACtB,SAASA,EAAKlzC,GACV0K,OAAKC,OAAOwoC,QACZlrC,KAAKlJ,OAASiB,EACdiI,KAAKwT,WACLxT,KAAKmrC,kBACLnrC,KAAK0T,aAAe,EACpB1T,KAAK7E,iBAAmBrD,oBAAkBkI,KAAKlJ,OAAOqG,iBACtD6C,KAAKkK,mBAyFT,OAnFA+gC,EAAKhqC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXooC,EAAKhqC,UAAUiJ,iBAAmB,WAC9BlK,KAAKlJ,OAAOqT,GAAG,cAAenK,KAAKorC,YAAaprC,MAChDA,KAAKlJ,OAAOqT,GAAG,aAAcnK,KAAKqrC,qBAAsBrrC,OAK5DirC,EAAKhqC,UAAUuJ,oBAAsB,WAC7BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,cAAe1K,KAAKorC,aACpCprC,KAAKlJ,OAAO4T,IAAI,aAAc1K,KAAKqrC,wBAEvCJ,EAAKhqC,UAAUoqC,qBAAuB,SAAUC,GAC5C,IAAI3sC,EAAO2sC,EAAWzvC,aAClB8e,EAAS2wB,EAAW3wB,OACxB3a,KAAKurC,YAAY5sC,EAAMgc,GACvB3a,KAAK0T,aAAe,EACpB43B,EAAWzvC,aAAemE,KAAKmrC,eAC/BnrC,KAAKmrC,mBAETF,EAAKhqC,UAAUsqC,YAAc,SAAU5sC,EAAMgc,GACzC,IAAK,IAAIha,EAAI,EAAGA,EAAIhC,EAAKhH,OAAQgJ,IAW7B,GAVIX,KAAKlJ,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxCqI,KAAKlJ,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAc6G,KAAKlJ,OAAQ6H,EAAKgC,GAAGvH,UAAU,MAChE4G,KAAK0T,cACL1T,KAAKmrC,eAAenrC,KAAK0T,aAAe/U,EAAKgC,KAIjDX,KAAK0T,cACL1T,KAAKmrC,eAAenrC,KAAK0T,aAAe/U,EAAKgC,IAE7ChC,EAAKgC,GAAGlH,gBAAiB,CACzB,IAAI+xC,EAAa,IAAIx0C,cAAY2H,EAAKgC,GAAGjH,cAAcqc,aAAa4E,GACpE3a,KAAKurC,YAAYC,EAAW7wB,KAWxCswB,EAAKhqC,UAAUgf,WAAa,SAAU3kB,EAAY2f,EAAW8E,GACzD/f,KAAKlJ,OAAOiB,KAAKkoB,WAAW3kB,EAAY2f,EAAW8E,IAEvDkrB,EAAKhqC,UAAUkf,iBAAmB,SAAU/b,GACxCpE,KAAKlJ,OAAOiB,KAAKooB,iBAAiB/b,IAOtC6mC,EAAKhqC,UAAUmqC,YAAc,WACzBprC,KAAKlJ,OAAOwmB,eAAgB7e,aAAcqoB,sBAAoB9mB,KAAKlJ,OAAOiB,KAAK0G,gBAAiB,IAMpGwsC,EAAKhqC,UAAUif,aAAe,WAC1BlgB,KAAKlJ,OAAOiB,KAAKmoB,eACjBlgB,KAAKorC,eAOTH,EAAKhqC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAEFygC,KCpGPQ,GAA4B,WAI5B,SAASA,EAAW30C,GAChB2L,OAAKC,OAAOgpC,cACZ1rC,KAAKlJ,OAASA,EAelB,OAbA20C,EAAWxqC,UAAU0qC,cAAgB,WACjC,OAAO3rC,KAAKlJ,OAAOiB,KAAK6zC,iBAAiBD,iBAE7CF,EAAWxqC,UAAU4I,QAAU,aAO/B4hC,EAAWxqC,UAAU4B,cAAgB,WACjC,MAAO,cAEJ4oC,KCpBPI,GAA6B,WAC7B,SAASA,EAAY/0C,GACjB2L,OAAKC,OAAOopC,eACZ9rC,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBAgET,OA3DA2hC,EAAY5qC,UAAUiJ,iBAAmB,WACrClK,KAAKlJ,OAAOqT,GAAG,kBAAmBnK,KAAKuF,gBAAiBvF,MACxDA,KAAKlJ,OAAOqT,GAAG,mBAAoBnK,KAAKwF,iBAAkBxF,OAK9D6rC,EAAY5qC,UAAUuJ,oBAAsB,WACpCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,kBAAmB1K,KAAKuF,iBACxCvF,KAAKlJ,OAAO4T,IAAI,mBAAoB1K,KAAKwF,oBAE7CqmC,EAAY5qC,UAAUsE,gBAAkB,SAAUvC,GAC9C,IAAI+oC,EAAS/oC,EAAKiQ,QAAQnI,cAAc,IAAM9K,KAAKlJ,OAAOmc,QAAQC,GAAK,6BACnE84B,EAAahpC,EAAKiQ,QAAQnI,cAAc,IAAM9K,KAAKlJ,OAAOmc,QAAQC,GAAK,2BACvE64B,KACkD,IAA9C/rC,KAAKlJ,OAAOiB,KAAKiE,aAAaqoB,YAC9B0nB,EAAOpxC,MAAMG,QAAU,OAGvBixC,EAAOpxC,MAAMG,QAAU,SAGQ,SAAlCkF,KAAKlJ,OAAOkF,aAAaC,MAAqD,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,MACjEnE,oBAAkBk0C,IAAkBA,EAAW3jC,UAAUC,SAAS,iBACvE0jC,EAAWrxC,MAAMG,QAAU,SAGnC+wC,EAAY5qC,UAAUuE,iBAAmB,SAAUxC,GAC1B,UAAjBA,EAAKE,KAAKgQ,IAAmC,UAAjBlQ,EAAKE,KAAKgQ,KACtClT,KAAKlJ,OAAOsb,OAAO,0BAA2BpP,GAC9ChD,KAAKlJ,OAAOwmB,eAAgBthB,cAAgBQ,eAAgBwG,EAAKE,KAAKgQ,MAAQ,GAC9ElT,KAAKlJ,OAAO85B,cAOpBib,EAAY5qC,UAAU4B,cAAgB,WAClC,MAAO,eAOXgpC,EAAY5qC,UAAU4I,QAAU,WAC5B7J,KAAKwK,uBAMTqhC,EAAY5qC,UAAUwmB,eAAiB,WACnC,OAAOznB,KAAKlJ,OAAOiB,KAAK+zB,kBAAkBrE,kBAEvCokB,KChEPI,GAA2B,WAC3B,SAASA,EAAUn1C,GACfkJ,KAAKksC,gBAAkB,EACvBlsC,KAAKsT,aAAe,eACpBtT,KAAK+d,eAAiB,iBACtB/d,KAAKmsC,qBACLnsC,KAAKosC,uBACLpsC,KAAKqsC,qBACLrsC,KAAKlJ,OAASA,EACdkJ,KAAK7E,iBAAmBrD,oBAAkBhB,EAAOqG,iBACjD6C,KAAKssC,gBACLtsC,KAAK3D,sBACL2D,KAAKusC,OAAQ,EACbvsC,KAAKkK,mBAugBT,OArgBA+hC,EAAUhrC,UAAUiJ,iBAAmB,WACnClK,KAAKlJ,OAAOqT,GAAGgiB,GAAkBnsB,KAAK8F,UAAW9F,MACjDA,KAAKlJ,OAAOqT,GAAGmiB,GAAiBtsB,KAAKkG,SAAUlG,MAC/CA,KAAKlJ,OAAOqT,GAAGqiB,GAAuBxsB,KAAKoG,eAAgBpG,MAC3DA,KAAKlJ,OAAOqT,GAAGuR,GAAkB1b,KAAKsG,UAAWtG,MACjDA,KAAKlJ,OAAOqT,GAAGuiB,GAA0B1sB,KAAKmG,kBAAmBnG,MACjEA,KAAKlJ,OAAOqT,GAAGoiB,GAAwBvsB,KAAKqG,gBAAiBrG,MAC7DA,KAAKlJ,OAAOqT,GAAG,kBAAmBnK,KAAKwsC,gBAAiBxsC,MACxDA,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAKysC,kBAAmBzsC,OAKhEisC,EAAUhrC,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAIyhB,GAAkBnsB,KAAK8F,WACvC9F,KAAKlJ,OAAO4T,IAAI4hB,GAAiBtsB,KAAKkG,UACtClG,KAAKlJ,OAAO4T,IAAIgR,GAAkB1b,KAAKsG,WACvCtG,KAAKlJ,OAAO4T,IAAI8hB,GAAuBxsB,KAAKoG,gBAC5CpG,KAAKlJ,OAAO4T,IAAIgiB,GAA0B1sB,KAAKmG,mBAC/CnG,KAAKlJ,OAAO4T,IAAI6hB,GAAwBvsB,KAAKqG,iBAC7CrG,KAAKlJ,OAAO4T,IAAI,kBAAmB1K,KAAKwsC,iBACxCxsC,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAKysC,qBAO9CR,EAAUhrC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAKTyhC,EAAUhrC,UAAUyrC,gBAAkB,WAClC,OAAO1sC,KAAKssC,cAKhBL,EAAUhrC,UAAU0rC,eAAiB,WACjC,OAAO3sC,KAAK5E,aAKhB6wC,EAAUhrC,UAAU2rC,iBAAmB,WACnC,OAAO5sC,KAAK3E,eAKhB4wC,EAAUhrC,UAAU4rC,mBAAqB,WACrC,OAAO7sC,KAAKksC,iBAEhBD,EAAUhrC,UAAUurC,gBAAkB,WAClC,IAGIlyC,EAHAqE,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Di7B,EAAahyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAE5D,IAAK5D,oBAAkBkI,KAAKmsC,oBAAsBnsC,KAAKmsC,kBAAkBx0C,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAIuI,KAAKmsC,kBAAkBx0C,OAAQF,IAC/C6C,EAAQqE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEo0B,KAAgBtzB,QAAQsB,KAAKmsC,kBAAkB10C,GAAGu6B,IAC3FrzB,EAAKtB,OAAO/C,EAAO,GAG3B0F,KAAKmsC,kBAAoBnsC,KAAKssC,aAAetsC,KAAKqsC,kBAAoBrsC,KAAKosC,oBAAsBpsC,KAAK3D,uBAE1G4vC,EAAUhrC,UAAU6E,UAAY,SAAU9C,GACtC,IAAI8pC,EAAkB9pC,EAAKzD,KAAKwiB,UAC5BgrB,EAAa/sC,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,mBAS1D,GARI4tC,GAAc/pC,EAAKgqC,aAAa1yC,MAAQyyC,IACxCD,GAAoCC,GAEpCD,IAAoB9sC,KAAKlJ,OAAO2I,iBAChCO,KAAKlJ,OAAOuI,aAAaC,YAAaX,KAAMqE,EAAKyI,QAASlM,KAAMyD,EAAKzD,KACjEI,OAAQK,KAAKlJ,OAAOiB,KAAKk1C,iBAAiBjqC,EAAKzD,KAAKwiB,aAGxD/hB,KAAKusC,OAA2C,UAAlCvsC,KAAKlJ,OAAOkF,aAAaC,MAAgE,WAA5C+D,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACjH,IAAImC,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Dm2C,OAAQ,EAGRC,EAAentC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAC1D0xC,OAAmB,EACnBn0C,OAAe,EACfo0C,OAAa,EAEbn0C,EAAa,aAEjBD,EAAe+G,KAAK3E,eAAiB,EAAI2E,KAAKssC,aAAatsC,KAAK5E,aAAalC,GAAc,KAC3F,IAAIkE,OAAY,EACZoB,OAAiB,EACjBrB,OAAkB,EAClBmwC,EAA6D,QAA5CttC,KAAKlJ,OAAOkF,aAAaQ,iBAAoD,IAAxBwD,KAAK3E,cAAuB,EACtD,UAA5C2E,KAAKlJ,OAAOkF,aAAaQ,eAA6BwD,KAAK5E,YACrD4E,KAAK5E,YAAc,EAE7B,GADAkyC,EAAiBttC,KAAKutC,wBAAwBD,GAC1CttC,KAAKwtC,iBAAkB,CAcvB,GAbIxtC,KAAKssC,aAAa30C,SAClByF,EAAY4C,KAAKssC,aAAatsC,KAAK5E,aAAa4E,KAAKlJ,OAAOsG,WAC5DD,EAAkB6C,KAAKssC,aAAatsC,KAAK5E,aAAa4E,KAAKlJ,OAAOqG,iBAC9D6C,KAAKssC,aAAatsC,KAAK5E,aAAalC,KACpCsF,EAAiBwB,KAAKssC,aAAatsC,KAAK5E,aAAalC,GAAoB,WAGjF8G,KAAKmsC,kBAAoBpyC,EAAYiG,KAAKmsC,mBAC1CnsC,KAAKqsC,kBAAoBtyC,EAAYiG,KAAKqsC,mBAC1CrsC,KAAKqsC,kBAAkBzzC,KAAKoH,KAAKssC,aAAatsC,KAAK5E,cACnD8xC,EAAQltC,KAAKlJ,OAAOiB,KAAKu+B,gBAAgBgX,GAAgBG,QACzDP,EAAM9zC,SAAWsd,SAAO1W,KAAKlJ,OAAOmc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwB23B,EAAM9zC,SAAU8zC,EAAOltC,KAAKlJ,SACxDo2C,EAAMjwC,eAAe,SAAU,CAEhC,GADA+C,KAAK0tC,YAAqC,IAAxB1tC,KAAK3E,cAAuB,EAAI2E,KAAK0tC,WACP,UAA5C1tC,KAAKlJ,OAAOkF,aAAaQ,gBAEzB,GADA0wC,EAAMS,cAAgB10C,EAClB+G,KAAK3E,eAAiB,EAAG,CACzB6xC,EAAMh0C,WAAaqD,YAAWyD,KAAKssC,aAAatsC,KAAK5E,cACrD8xC,EAAM1uC,eAAiB0uC,EAAMh0C,WAAWE,gBACjC8zC,EAAMh0C,WAAWQ,oBACjBwzC,EAAMh0C,WAAW8G,KAAKlJ,OAAOwG,cACpC4vC,EAAM3yC,MAAQ2yC,EAAMh0C,WAAWqB,MAAQ,EACvC2yC,EAAM5yC,MAAQ0F,KAAK0tC,WACnB,IAAIE,EAAmBp0C,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAczD,OAC5EmB,EAASU,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAcwyC,EAAmB,GACzF90C,EAAShB,oBAAkBgB,GAAUkH,KAAKssC,aAAatsC,KAAK5E,aAAetC,EAC3Es0C,EAAmBzuC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEuvC,KAAkBzuC,QAAQ5F,EAAOq0C,IACjFntC,KAAK7E,kBACL+xC,EAAMltC,KAAKlJ,OAAOqG,iBAAmBC,GAEzCG,EAAgB4vC,EAAcD,EAAMh0C,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB+xC,SAG7F,IAAiD,UAA5CltC,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAClF1E,oBAAkBkI,KAAKssC,aAAatsC,KAAK5E,cAAe,CAS5D,GARA8xC,EAAM3yC,MAAQyF,KAAKssC,aAAatsC,KAAK5E,aAAkB,MACnD8xC,EAAM3yC,OAASyF,KAAK3E,eAAiB,IACrC6xC,EAAMh0C,WAAaD,EACnBi0C,EAAM1uC,eAAiBA,SAChB0uC,EAAMh0C,WAAWQ,oBACjBwzC,EAAMh0C,WAAW8G,KAAKlJ,OAAOwG,eAExC4vC,EAAM5yC,MAAoD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA6BwD,KAAK0tC,WAAa1tC,KAAK0tC,WAAa,EACxD,UAA5C1tC,KAAKlJ,OAAOkF,aAAaQ,gBAA8BwD,KAAK3E,eAAiB,EAAG,CAC5EuyC,EAAmBp0C,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAczD,OAC5EmB,EAASU,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAcwyC,EAAmB,GACzF90C,EAAShB,oBAAkBgB,GAAUkH,KAAKssC,aAAatsC,KAAK5E,aAAetC,EAC3Es0C,EAAmBzuC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEuvC,KAAkBzuC,QAAQ5F,EAAOq0C,IAEzF,GAAgD,UAA5CntC,KAAKlJ,OAAOkF,aAAaQ,gBAA8BwD,KAAK3E,eAAiB,EAAG,CAC5EvC,EAASkH,KAAKssC,aAAatsC,KAAK5E,aACpCgyC,EAAmBzuC,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEuvC,KAAkBzuC,QAAQ5F,EAAOq0C,IAErFntC,KAAK7E,kBACL+xC,EAAMltC,KAAKlJ,OAAOqG,iBAAmBA,GAG7C+vC,EAAM5yC,OAAyB,IAAjB4yC,EAAM5yC,MAAe,EAAI4yC,EAAM5yC,MAC7C4yC,EAAMzzC,iBAAkB,EACxByzC,EAAMxzC,gBACNsG,KAAKssC,aAAajvC,OAAO6vC,EAAM5yC,MAAO,EAAG4yC,GACzCltC,KAAK3D,mBAAmBgB,OAAO6vC,EAAM5yC,MAAO,EAAG4yC,GAE3CG,EADAD,GAIaF,EAAM5yC,MAEyB,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,iBACzB6wC,EAA6B,IAAhBH,EAAM5yC,MAAc+yC,EAAaA,EAAa,GAE/D1uC,EAAKtB,OAAOgwC,EAAY,EAAGH,GAC3BltC,KAAKmsC,kBAAkBvzC,KAAKs0C,GAEhCltC,KAAKlJ,OAAOiB,KAAKu+B,gBAAgBgX,GAAgB3uC,KAAOuuC,EACxDltC,KAAKwtC,kBAAmB,GAExBxtC,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,oBACoB,QAA1Da,KAAKlJ,OAAOiB,KAAKu+B,gBAAgBgX,GAAgBptC,OACpDM,QAAMR,KAAK3D,mBAAmBixC,GAAiBttC,KAAKlJ,OAAOiB,KAAKu+B,gBAAgBgX,GAAgBG,WAI5GxB,EAAUhrC,UAAUmF,eAAiB,SAAUxI,GAE3C,GAAsC,SAAlCoC,KAAKlJ,OAAOkF,aAAaC,MAAmB+D,KAAKlJ,OAAOoF,WAAuB,aAG/E,OAFA0B,EAAEqL,QAAS,OACXjJ,KAAKlJ,OAAOoF,WAAuB,cAAI,GAG3C8D,KAAK3E,cAAgB2E,KAAKlJ,OAAOiB,KAAKyvB,iBACtCxnB,KAAK5E,YAAc4E,KAAKlJ,OAAOiB,KAAKyvB,kBAAoB,EAAIxnB,KAAKlJ,OAAOiB,KAAKyvB,iBAAmB,EAChGxnB,KAAKzE,aAAeyE,KAAKlJ,OAAO4R,qBAAqB,IAEzDujC,EAAUhrC,UAAUiF,SAAW,SAAUtI,GACrC,GAAgD,WAA5CoC,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACtDwD,KAAKusC,OAAQ,EACbvsC,KAAKwtC,kBAAmB,EACxB,IAAI7M,EAAc,EAMlB,GALK3gC,KAAKssC,aAAa30C,SACnBqI,KAAKmsC,qBACLnsC,KAAKssC,aAAevyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,0BAEX,QAA5C0D,KAAKlJ,OAAOkF,aAAaQ,eAA0B,CACnD,IAAIlE,EAAU0H,KAAKlJ,OAAOiB,KAAKuE,wBACO,UAAlC0D,KAAKlJ,OAAOkF,aAAaC,OAAqB+D,KAAKlJ,OAAOqF,kBAAkB6D,KAAKsT,cAAc3b,OAAS,GACrGqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAK+d,gBAAgBpmB,UACtDW,EAAU0H,KAAKssC,cAEnBtsC,KAAK6tC,iBAAiBv1C,GACtB0H,KAAKlJ,OAAOsb,OAAOib,OACnBrtB,KAAKksC,gBAAkB,EAE3BlsC,KAAK8tC,iBAEL,IAAIC,EAAcxvC,WAAS,cAAeyB,KAAKlJ,OAAOiB,MAClDi2C,EAAQhuC,KAAKlJ,OAAOmgB,kBACpBjX,KAAKlJ,OAAOqF,kBAAkB6D,KAAK+d,gBAAgBpmB,QAAsD,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,gBACtFmkC,EAAc/iC,EAAEiB,IAAI8K,SACpBokC,EAAY1a,aAAa4a,OAAOA,OAASjuC,KAAKiuC,QAG9CtN,EAAcqN,EAAM52B,uBAAuB,cAAc,GAAGzN,SAKhEokC,EAAY1a,aAAa4a,OAAO7F,SAAWzH,EAAaoN,EAAY1a,aAAa4a,OAAO7F,QAAQ,MAGxG6D,EAAUhrC,UAAUkF,kBAAoB,SAAUvI,GACzCoC,KAAKssC,aAAa30C,SACnBqI,KAAKssC,aAAevyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,0BAE3D,IAAIyxC,EAAcxvC,WAAS,cAAeyB,KAAKlJ,OAAOiB,MACtDiI,KAAKiuC,OAASF,EAAY1a,aAAa4a,OAAOA,OAC9CjuC,KAAKlJ,OAASkJ,KAAKlJ,OACnB,IACIwB,EACAqG,EAFAE,KAGAqvC,EAAaluC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAExDyyC,EAAS30C,EADbmF,EAAOqB,KAAKlJ,OAAOiB,KAAK2Q,qBAAqB1I,KAAKlJ,OAAOiB,KAAK2Q,qBAAqB/Q,OAAS,IAE5F,GAAIw2C,EAAOx2C,OACP,IAAK,IAAIF,EAAI,EAAGA,EAAI02C,EAAOx2C,OAAQF,IAAK,CACpC,IAAI6C,EAAQ0F,KAAKlJ,OAAOiB,KAAKiH,wBAAwBmvC,EAAO12C,GAAGy2C,IAC/DrvC,EAAIjG,KAAKoH,KAAKlJ,OAAOiB,KAAKgH,UAAUzE,KAChC0F,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAO4I,eAAiBM,KAAKlJ,OAAOqI,qBACnEN,EAAIjG,KAAKoH,KAAKlJ,OAAOiB,KAAKk+B,iBAAiB37B,IAIvD,IAAKxC,oBAAkB6G,EAAKzF,YAAa,CACrC,IAAIA,EAAaC,EAAc6G,KAAKlJ,OAAQ6H,EAAKzF,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIwoC,EAAa/oC,EAAWQ,aAAagF,QAAQC,GACjDzF,EAAWQ,aAAa2D,OAAO4kC,EAAY,GAE/CjiC,KAAKosC,oBAAsBryC,EAAYiG,KAAKosC,qBAC5CpsC,KAAKosC,oBAAoBxzC,KAAK+F,GAElCwvC,EAAOv1C,KAAK+F,GACZrG,EAAU61C,EACV,IAAS12C,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAI41C,EAAartC,KAAKssC,aAAajuC,IAAI,SAAUT,GAAK,OAAOA,EAAEswC,KAAgBxvC,QAAQpG,EAAQb,GAAGy2C,KAC9E,IAAhBb,GACArtC,KAAKssC,aAAajvC,OAAOgwC,EAAY,GAG7C,IAAS51C,EAAI,EAAGA,EAAIoH,EAAIlH,OAAQF,IACvBK,oBAAkB+G,EAAIpH,KACvBuI,KAAKlJ,OAAOiB,KAAKuuB,gBAAgB8nB,gBAAgBx1C,KAAKiG,EAAIpH,KAItEw0C,EAAUhrC,UAAU6sC,eAAiB,WAEjC,IAAK,IADD/lC,EAAO/H,KAAKlJ,OAAOiB,KAAKy7B,cACnB/7B,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAC7BsQ,EAAKtQ,GAAGwV,aAAa,gBAAiBxV,EAAEoQ,YAE5C,GAAI7H,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,cAEnE,CAAA,IADD2uC,EAAQruC,KAAKlJ,OAAOiB,KAAKqX,qBAC7B,IAAS3X,EAAI,EAAGA,EAAI42C,EAAM12C,OAAQF,IAC9B42C,EAAM52C,GAAGwV,aAAa,gBAAiBxV,EAAEoQ,cAIrDokC,EAAUhrC,UAAU4sC,iBAAmB,SAAUv1C,GAK7C,IAAK,IAJD05B,EAAahyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACxD4X,EAAe,eAEfpa,EAAyD,UAA5C8G,KAAKlJ,OAAOkF,aAAaQ,eAA6B,gBAAkB,aAChF/E,EAAI,EAAGA,EAAIuI,KAAKlJ,OAAOqF,kBAAkBmX,GAAc3b,OAAQF,IAC/DK,oBAAkBkI,KAAKlJ,OAAOqF,kBAAkBmX,GAAc7b,GAAGyB,KAC9D8G,KAAKlJ,OAAOqF,kBAAkBmX,GAAc7b,GAAGyB,GAAY84B,KAAgB15B,EAAQ0H,KAAK5E,aAAa42B,KACrGhyB,KAAKksC,gBAAkBlsC,KAAKksC,gBAAkB,IAK9DD,EAAUhrC,UAAUoF,gBAAkB,SAAUzI,GAC5C,IACI0wC,EAAgB,iBAChBxwB,EAAiBlgB,EAAEpC,aAA0B,eACjD,GAAIoC,EAAEpC,aAA0B,eAAE7D,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAIqmB,EAAenmB,OAAQF,IACvCuD,GAAaX,MAAOyjB,EAAermB,GAAIgE,OAAQ,QAAUuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,mBAFtG,GAKrB,GAAIuC,EAAEpC,aAAa8yC,GAAe32C,OAGzB,CAAA,IADDmB,EADiB8E,EAAEpC,aAAa8yC,GAEpC,IAAS72C,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpCuI,KAAKuuC,eAAez1C,EAAOrB,GAAG2B,UAE9B,IAAK,IADD+0C,EAAS30C,EAAoBV,EAAOrB,IAC/B8J,EAAI,EAAGA,EAAI4sC,EAAOx2C,OAAQ4J,IAC/BvB,KAAKuuC,eAAeJ,EAAO5sC,GAAGnI,UAElCwE,EAAEpC,aAAa8yC,GAAiB1wC,EAAEpC,aAAa8yC,GAAe30C,OAAOw0C,IAG7EnuC,KAAKusC,OAAQ,GAEjBN,EAAUhrC,UAAUstC,eAAiB,SAAUl0C,UAEpC2F,KAAKlJ,OAAe,yBAAEuD,UAEtB2F,KAAKlJ,OAAS,mBAAEuD,IAE3B4xC,EAAUhrC,UAAUwrC,kBAAoB,WACpC,IACInyC,EADA65B,EAAgB,gBAEhBj7B,EAAa,aAEbmD,EAAqB2D,KAAKlJ,OAAOiB,KAAKuE,wBACtC5C,EAAe,eACfiF,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/Di7B,EAAahyB,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAC5D,IAAK5D,oBAAkBkI,KAAKlJ,OAAOq9B,IAAiB,CAChD,IAAIt1B,EAAMmB,KAAKlJ,OAAOq9B,GAAeppB,QAAQ,MAC7C/K,KAAKlJ,OAAOyqB,YAAY1iB,GACxBmB,KAAKlJ,OAAOq9B,GAAiB,KAEjC,IAAKr8B,oBAAkBkI,KAAKmsC,mBACxB,IAAK,IAAI10C,EAAI,EAAGA,EAAIuI,KAAKmsC,kBAAkBx0C,OAAQF,IAG/C,GAFA6C,EAAQqE,EAAKN,IAAI,SAAUT,GAAK,OAAOA,EAAEo0B,KAAgBtzB,QAAQsB,KAAKmsC,kBAAkB10C,GAAGu6B,IAC3FrzB,EAAKtB,OAAO/C,EAAO,GAC6B,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,iBACzBlC,EAAQ+B,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAEo0B,KAClDtzB,QAAQsB,KAAKmsC,kBAAkB10C,GAAGyB,GAAc8G,KAAKmsC,kBAAkB10C,GAAGyB,GAAY84B,GACrFhyB,KAAKmsC,kBAAkB10C,GAAGu6B,KAC3Bl6B,oBAAkBuE,EAAmB/B,KAEtC,IAAK,IADDyY,EAAW1W,EAAmB/B,GAAOZ,GAChCS,EAAI,EAAG4Y,GAAY5Y,EAAI4Y,EAASpb,OAAQwC,IACzC4Y,EAAS5Y,GAAG63B,KAAgBhyB,KAAKmsC,kBAAkB10C,GAAGu6B,IACtD31B,EAAmB/B,GAAOZ,GAAc2D,OAAOlD,EAAG,GAO1E,IAAKrC,oBAAkBkI,KAAKosC,qBACxB,IAAS30C,EAAI,EAAGA,EAAIuI,KAAKosC,oBAAoBz0C,OAAQF,IACjD,IAAKK,oBAAkBkI,KAAKosC,oBAAoB30C,GAAGyB,IAAc,CAC7DoB,EAAQ+B,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAEo0B,KAClDtzB,QAAQsB,KAAKosC,oBAAoB30C,GAAGyB,GAAY84B,IACrD,IAAIwc,EAA4D,IAA5CxuC,KAAKosC,oBAAoB30C,GAAa,MAAUuI,KAAKosC,oBAAoB30C,GAAa,MACtGuI,KAAKosC,oBAAoB30C,GAAa,MAAI,EACzCK,oBAAkBuE,EAAmB/B,KACtC+B,EAAmB/B,GAAOZ,GAAc2D,OAAOmxC,EAAe,EAAGxuC,KAAKosC,oBAAoB30C,IAK1GuI,KAAKmsC,kBAAoBnsC,KAAKssC,aAAetsC,KAAKqsC,kBAAoBrsC,KAAK3D,sBAC3E2D,KAAKssC,aAAevyC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACjD0D,KAAK0tC,WAAa,EAClB1tC,KAAK3D,mBAAqBtC,EAAYiG,KAAKlJ,OAAOiB,KAAKuE,yBACvD0D,KAAKosC,uBACLpsC,KAAKlJ,OAAOiB,KAAKsH,aAAawwB,WAElCoc,EAAUhrC,UAAUqF,UAAY,SAAUtD,GACtC,GAAsC,UAAlChD,KAAKlJ,OAAOkF,aAAaC,KAAkB,CAC3C,IAAIxE,OAAI,EACJ+D,EAAewE,KAAKlJ,OAAOqF,kBAC3B4hB,EAAiB,iBAIjBpf,EAAQqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC/CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC/DsF,EAAqB2D,KAAKlJ,OAAOiB,KAAKuE,wBACtCmyC,EAAezuC,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GAE1DgzC,EAAalzC,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHImzC,EAAW/2C,OAAS,GAAiD,WAA5CqI,KAAKlJ,OAAOkF,aAAaQ,gBAClDkyC,EAAWC,UAEiC,WAA5C3uC,KAAKlJ,OAAOkF,aAAaQ,eAEzB,GADAmC,EAAKtB,OAAOsB,EAAKhH,OAAS+2C,EAAW/2C,OAAQ+2C,EAAW/2C,QACnDqI,KAAKlJ,OAAOga,YAKZ,CACD,IAAI89B,EAAe70C,EAAY4E,GAC3Bm2B,EAAa8Z,EAAavwC,IAAI,SAAUT,GAAK,OAAOA,EAAE6wC,KACrD/vC,QAAQrC,EAAmB,GAAGoyC,IAC/BI,EAAW/Z,EAAa90B,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,SAC1D9rC,EAAqBuyC,EAAavxC,OAAOy3B,EAAY+Z,QATjDxyC,EAAmB1E,OAAS+2C,EAAW/2C,QACvC0E,EAAmBgB,OAAOhB,EAAmB1E,OAAS+2C,EAAW/2C,OAAQ+2C,EAAW/2C,QAWhG,IAAKF,EAAI,EAAGA,EAAIi3C,EAAW/2C,OAAQF,IAAK,CACpC,IAAIsF,EAAWR,YAAWmyC,EAAWj3C,IAgCrC,UA/BOsF,EAAS7D,kBACT6D,EAAS3D,gBACT2D,EAASzC,aACTyC,EAASxC,aACTwC,EAAStD,uBACTsD,EAASrD,oBACTqD,EAASyB,eACX1G,oBAAkBiF,EAAS4wC,uBACrB5wC,EAAS4wC,cAEpBe,EAAWj3C,GAAGsF,SAAWA,EACzBxB,EAAeyE,KAAKqsC,kBAAkB50C,GAClCK,oBAAkByD,KAClBA,EAAeyE,KAAKqsC,kBAAkB50C,EAAI,IAE1CuI,KAAK7E,kBACArD,oBAAkB42C,EAAWj3C,GAAGyB,aACjCqE,EAAgBkxC,EAAcC,EAAWj3C,GAAGyB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBuzC,EAAWj3C,KAGhHK,oBAAkByD,KACnBH,EAAcG,EAAajB,OAEiB,QAA5C0F,KAAKlJ,OAAOkF,aAAaQ,gBAAwE,WAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBAC1E1E,oBAAkB42C,EAAWj3C,GAAGyB,cAAuC,IAAxB8G,KAAK3E,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaX,MAAOq0C,EAAWj3C,GAAIgE,OAAQ,OAASuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBC,EAAaC,OApDvF,EAoDkHE,GAC/HF,EAAgB,KACgC,UAA5C2E,KAAKlJ,OAAOkF,aAAaQ,iBAA+B1E,oBAAkB42C,EAAWj3C,GAAa,YAIlG,IAAK,IAHDq3C,EAAazyC,EAAmBgC,IAAI,SAAUT,GAAK,OAAOA,EAAE6wC,KAC3D/vC,QAAQgwC,EAAWj3C,GAAa,WAAEg3C,IACnC17B,EAAW1W,EAAmByyC,GAAwB,aACjD30C,EAAI,EAAGA,EAAI4Y,EAASpb,OAAQwC,IAC7B4Y,EAAS5Y,GAAGs0C,KAAkBC,EAAWj3C,GAAGg3C,IAC5CpyC,EAAmByyC,GAAwB,aAAEzxC,OAAOlD,EAAG,GAKvE,GAAIqB,EAAauiB,GAAgBpmB,OAC7B,IAAKF,EAAI,EAAGA,EAAI+D,EAAauiB,GAAgBpmB,OAAQF,IACjDuD,GAAaX,MAAOmB,EAAauiB,GAAgBtmB,GAAIgE,OAAQ,UAAYuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBC,EAAaC,OAnEhH,EAmE2IE,GAG5JyE,KAAKlJ,OAAO2G,cACZ,IAAK,IAAIm5B,EAAM,EAAGA,EAAMj4B,EAAKhH,OAAQi/B,IACjCj4B,EAAKi4B,GAAU,MAAIA,EACnBrhB,WAAS,sBAAwB5W,EAAKi4B,GAAa,SAAI,SAAUA,EAAK52B,KAAKlJ,QACtE6H,EAAKi4B,GAAU,OAChB52B,KAAKlJ,OAAO2G,WAAW7E,KAAK+F,EAAKi4B,IAI7C52B,KAAKqsC,kBAAoBrsC,KAAKmsC,kBAAoBnsC,KAAKssC,aAAetsC,KAAKosC,oBAAsBpsC,KAAK3D,uBAE1G4vC,EAAUhrC,UAAUssC,wBAA0B,SAAUjzC,GACpD,IAAIyN,EAAO/H,KAAKlJ,OAAOiB,KAAKy7B,cAC5B,IAAiD,UAA5CxzB,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,iBAC9EwD,KAAK3E,eAAiB,EAAG,CAC5B,IAAKvD,oBAAkBkI,KAAKssC,aAAatsC,KAAK5E,eAAiB4E,KAAKssC,aAAatsC,KAAK5E,aAAa7B,SAC/F,GAAIyG,KAAKlJ,OAAOqF,kBAAkB6D,KAAKsT,cAAc3b,OAAS,GACvDqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAK+d,gBAAgBpmB,QAEtD,GADA2C,GAASd,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAczD,OAClB,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAErDlC,GADsB0F,KAAK6sC,2BAK/BvyC,GAASd,EAAoBwG,KAAKssC,aAAatsC,KAAK5E,cAAczD,OAGtE2C,GAASyN,EAAKpQ,SACd2C,EAAQyN,EAAKpQ,OAAS,GAE1BqI,KAAK6tC,iBAAiB7tC,KAAKlJ,OAAOiB,KAAKuE,yBACnC0D,KAAKksC,kBACL5xC,GAAS0F,KAAKksC,iBAElBlsC,KAAKksC,gBAAkB,EAE3B,OAAO5xC,GAEJ2xC,KCjhBP8C,GAAsB,WAItB,SAASA,EAAKj4C,GACVkJ,KAAKsT,aAAe,eACpBtT,KAAK+d,eAAiB,iBACtB/d,KAAKgvC,iBAAmB,KACxBvsC,OAAKC,OAAOusC,QACZjvC,KAAKlJ,OAASA,EACdkJ,KAAK7E,iBAAmBrD,oBAAkBhB,EAAOqG,iBACjD6C,KAAKkvC,uBAAyB,KAC9BlvC,KAAKmvC,sBACLnvC,KAAKovC,gBAAkB,IAAInD,GAAUjsC,KAAKlJ,QAC1CkJ,KAAKkK,mBAmvBT,OA7uBA6kC,EAAK9tC,UAAU4B,cAAgB,WAC3B,MAAO,QAKXksC,EAAK9tC,UAAUiJ,iBAAmB,WAC9BlK,KAAKlJ,OAAOqT,GAAGsR,GAAmBzb,KAAKyF,WAAYzF,MACnDA,KAAKlJ,OAAOqT,GAAGkhB,GAAkBrrB,KAAK0F,UAAW1F,MACjDA,KAAKlJ,OAAOqT,GAAGkjB,GAAiBrtB,KAAK2F,SAAU3F,MAC/CA,KAAKlJ,OAAOqT,GAAGmjB,GAA0BttB,KAAK4F,kBAAmB5F,MACjEA,KAAKlJ,OAAOqT,GAAG6hB,GAAiBhsB,KAAK6F,SAAU7F,MAC/CA,KAAKlJ,OAAOqT,GAAGwiB,GAAoB3sB,KAAKiG,YAAajG,MACrDA,KAAKlJ,OAAOiB,KAAKoS,GAAGklC,GAAmBrvC,KAAKuG,WAAYvG,MACxDA,KAAKlJ,OAAOiB,KAAKoS,GAAG,iBAAkBnK,KAAKsvC,YAAatvC,MACxDA,KAAKlJ,OAAOiB,KAAKoS,GAAG,gBAAiBnK,KAAKuvC,aAAcvvC,MACxDA,KAAKlJ,OAAOqT,GAAGkiB,GAAiBrsB,KAAK+F,SAAU/F,MAC/CA,KAAKlJ,OAAOqT,GAAG,cAAenK,KAAKwvC,iBAAkBxvC,MACrDA,KAAKlJ,OAAOqT,GAAG,iBAAkBnK,KAAKwvC,iBAAkBxvC,MACxDA,KAAKlJ,OAAOiB,KAAKoS,GAAGslC,GAAkBzvC,KAAK4F,kBAAmB5F,MAC9DA,KAAKlJ,OAAOiB,KAAKoS,GAAG,WAAYnK,KAAK0vC,aAAc1vC,MACnDA,KAAKlJ,OAAOqT,GAAG,0BAA2BnK,KAAK2vC,wBAAyB3vC,MAExEA,KAAKlJ,OAAOiB,KAAKoS,GAAGylC,GAAwB5vC,KAAK4G,gBAAiB5G,MAClEA,KAAKlJ,OAAOiB,KAAKoS,GAAG0lC,GAA0B7vC,KAAK6G,kBAAmB7G,MACtEA,KAAKlJ,OAAOiB,KAAKoS,GAAG,mBAAoBnK,KAAK8vC,eAAgB9vC,MAC7DA,KAAKlJ,OAAOiB,KAAKoS,GAAG,mBAAoBnK,KAAK+vC,eAAgB/vC,OAEjE+uC,EAAK9tC,UAAUyuC,aAAe,SAAU9xC,GACpCoC,KAAKgwC,kBAAoBpyC,EAAEyD,QAE/B0tC,EAAK9tC,UAAU8uC,eAAiB,SAAUE,GACtCA,EAAQzzC,eAAiBwD,KAAKlJ,OAAOkF,aAAaQ,eAClDyzC,EAAQ70C,YAAc4E,KAAK5E,YAC3B60C,EAAQC,cAAgBlwC,KAAKgvC,kBAEjCD,EAAK9tC,UAAU2F,gBAAkB,SAAU5D,GACvChD,KAAKlJ,OAAOoS,QAAQgkB,EAAoBlqB,IAE5C+rC,EAAK9tC,UAAU4F,kBAAoB,SAAU7D,GACH,SAAlChD,KAAKlJ,OAAOkF,aAAaC,MACzB+D,KAAKlJ,OAAOoS,QAAQiP,EAAuBnV,IAMnD+rC,EAAK9tC,UAAUuJ,oBAAsB,WAC7BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI+Q,GAAmBzb,KAAKyF,YACxCzF,KAAKlJ,OAAO4T,IAAI2gB,GAAkBrrB,KAAK0F,WACvC1F,KAAKlJ,OAAO4T,IAAI2iB,GAAiBrtB,KAAK2F,UACtC3F,KAAKlJ,OAAO4T,IAAI4iB,GAA0BttB,KAAK4F,mBAC/C5F,KAAKlJ,OAAO4T,IAAIiiB,GAAoB3sB,KAAKiG,aACzCjG,KAAKlJ,OAAOiB,KAAK2S,IAAI2kC,GAAmBrvC,KAAKuG,YAC7CvG,KAAKlJ,OAAOiB,KAAK2S,IAAI,iBAAkB1K,KAAKsvC,aAC5CtvC,KAAKlJ,OAAOiB,KAAK2S,IAAI,gBAAiB1K,KAAKuvC,cAC3CvvC,KAAKlJ,OAAO4T,IAAI2hB,GAAiBrsB,KAAK+F,UACtC/F,KAAKlJ,OAAO4T,IAAI,cAAe1K,KAAKwvC,kBACpCxvC,KAAKlJ,OAAO4T,IAAI,iBAAkB1K,KAAKwvC,kBACvCxvC,KAAKlJ,OAAOiB,KAAK2S,IAAI+kC,GAAkBzvC,KAAK4F,mBAC5C5F,KAAKlJ,OAAO4T,IAAI,0BAA2B1K,KAAK2vC,yBAChD3vC,KAAKlJ,OAAOiB,KAAK2S,IAAIklC,GAAwB5vC,KAAK4G,iBAClD5G,KAAKlJ,OAAOiB,KAAK2S,IAAImlC,GAA0B7vC,KAAK6G,mBACpD7G,KAAKlJ,OAAOiB,KAAK2S,IAAI,WAAY1K,KAAK0vC,cACtC1vC,KAAKlJ,OAAOiB,KAAK2S,IAAI,mBAAoB1K,KAAK8vC,gBAC9C9vC,KAAKlJ,OAAOiB,KAAK2S,IAAI,mBAAoB1K,KAAK+vC,kBAQlDhB,EAAK9tC,UAAU4I,QAAU,WACrB7J,KAAKwK,uBAKTukC,EAAK9tC,UAAUkvC,oBAAsB,SAAUtc,GAC3C7zB,KAAKlJ,OAAOiB,KAAKmE,WAAWi0C,oBAAoBtc,IAEpDkb,EAAK9tC,UAAUuuC,iBAAmB,SAAUxsC,GACxC,IAAIotC,EAAYz3C,YAAU,aAAcqK,GACpCygB,EAAY9qB,YAAU,OAAQy3C,GAC9BC,EAAUrwC,KAAKlJ,OACfG,EAAUo5C,EAAQt5C,WAAWE,QACjC,IAAKJ,EAAaw5C,IAAYp5C,aAAmBisB,sBAClB,SAA1BktB,EAAUvwC,aAA+C,QAArBuwC,EAAU30C,SACN,UAAxC40C,EAAQr0C,aAAaQ,gBAAsE,UAAxC6zC,EAAQr0C,aAAaQ,gBAC1B,UAAxC6zC,EAAQr0C,aAAaQ,gBAC5B,GAAkB,gBAAdinB,EAA6B,CAC7B,IAAI9Z,EAAW7R,oBAAkBs4C,EAAUvxC,OAASpG,OAAOC,KAAK03C,EAAUvxC,KAAKlH,OAASqI,KAAK3E,cACzF+0C,EAAUvxC,IAAI8K,SAAW,EACzB2mC,EAAYx4C,oBAAkB6R,KAA2B,IAAdA,GACwC,EAAnF0mC,EAAQ/zC,wBAAwBqN,GAAU0mC,EAAQ30C,0BAA0B,IAChF20C,EAAQt4C,KAAKuc,MAAMM,UAAU,gBAAiB07B,QAE7C,GAAkB,mBAAd7sB,EAEL,IAAK,IADD8sB,EAAeF,EAAQt4C,KAAKuc,MAAMG,OAAO9c,OACpCF,EAAI,EAAGA,EAAI84C,EAAc94C,IACW,kBAArC44C,EAAQt4C,KAAKuc,MAAMG,OAAOhd,GAAGQ,KAC7Bo4C,EAAQt4C,KAAKuc,MAAMG,OAAOpX,OAAO5F,GAKX,UAAlCuI,KAAKlJ,OAAOkF,aAAaC,MAA8C,WAA1Bm0C,EAAUvwC,aACvDG,KAAKlJ,OAAOsb,OAAO,uBAG3B28B,EAAK9tC,UAAU2E,kBAAoB,SAAU5C,GACzC,IAAI3B,EAAS2B,EAAK3B,OAClB,IAAIvJ,oBAAkBuJ,EAAO0J,QAAQ,iBAArC,CAGA,IAAIpL,EAASK,KAAKlJ,OAAOiB,KAAKk1C,kBAAkB5rC,EAAO0J,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlCnM,KAAKlJ,OAAOkF,aAAaC,OAAoB+D,KAAKwwC,WAAa7wC,IAAWA,EAAO8wC,cACjF9wC,EAAOM,eAAkBoB,EAAOgH,UAAUC,SAAS,sBACnDjH,EAAOgH,UAAUC,SAAS,uBAA0BtI,KAAKlJ,OAAOkF,aAAakyB,oBAAqB,CAGlG,GAFAluB,KAAKwwC,WAAY,EACjBxwC,KAAKlJ,OAAOiB,KAAKulB,eAAgBkK,iBAAkBxkB,EAAK2G,WAAY,GAChE3J,KAAKlJ,OAAOwH,qBAAsB,CAClC,IAAI4Q,EAAKrE,eAAa7H,EAAK3B,OAAQ,SACnCrB,KAAKgvC,iBAAmB9/B,EAAG/C,aAAa,iBACxC+C,EAAGjC,aAAa,gBAAiBiC,EAAGvF,SAAW,IAEnD3J,KAAK0wC,mBAAmB,YAGhC3B,EAAK9tC,UAAUyvC,mBAAqB,SAAUz0C,GAC1C+D,KAAKlJ,OAAOiB,KAAKulB,eAAgBthB,cAAgBC,KAAMA,KAAU,GAC9CtD,YAAU,gBAAiBqH,KAAKlJ,OAAOiB,KAAKmE,YAClD8F,MAAMhC,KAAKlJ,OAAOiB,KAAKmE,YACpC8D,KAAKlJ,OAAOiB,KAAK81B,QAAS,GAE9BkhB,EAAK9tC,UAAU6uC,eAAiB,WACxB9vC,KAAKlJ,OAAOwH,sBAA0D,SAAlC0B,KAAKlJ,OAAOkF,aAAaC,OAC7D+D,KAAKwwC,WAAY,EACjBxwC,KAAK0wC,mBAAmB,YAGhC3B,EAAK9tC,UAAUsF,WAAa,SAAUvD,IAC9BhD,KAAKwwC,WAAgD,SAAlCxwC,KAAKlJ,OAAOkF,aAAaC,MAAmB4R,cAAc7N,KAAKlJ,OAAOogB,oBACzFlX,KAAK2wC,SAAW3tC,EAAKvH,QAEL,OAAhBuH,EAAKvH,QACLuE,KAAK4F,kBAAkB5C,IAG/B+rC,EAAK9tC,UAAUstC,eAAiB,SAAUl0C,UAE/B2F,KAAKlJ,OAAe,yBAAEuD,UAEtB2F,KAAKlJ,OAAS,mBAAEuD,IAE3B00C,EAAK9tC,UAAU8E,SAAW,SAAU/C,GAChC,IAAIqE,EAAQrH,KAER4wC,EAAO5tC,EAAY,QAoBvB,UAnBOA,EAAY,QACfhD,KAAKlJ,OAAOwH,uBAAyBxG,oBAAkBkI,KAAKgvC,oBAC5DhsC,EAAKnE,IAAIoO,aAAa,gBAAiBjN,KAAKgvC,kBAC5ChvC,KAAKgvC,sBAAmBpyB,GAEN,UAAlB5c,KAAK2wC,UACL3wC,KAAKlJ,OAAOoS,QAAQmjB,GAAiBrpB,EAAM,SAAU6tC,GAC5CA,EAAa5nC,QAA6C,SAAnC5B,EAAMvQ,OAAOkF,aAAaC,KAG7C40C,EAAa5nC,QAA6C,SAAnC5B,EAAMvQ,OAAOkF,aAAaC,OACtDoL,EAAMmpC,WAAY,EAClBnpC,EAAMqpC,mBAAmB,WAJzBrpC,EAAMgqB,mBAAmB,QAMxBv5B,oBAAkB84C,IACnBA,EAAK7lB,QAAQ8lB,KAIrB7wC,KAAKgwC,oBAAsBhwC,KAAKgwC,kBAAkB3nC,UAAUC,SAAS,qBACrEtI,KAAKgwC,kBAAkB3nC,UAAUC,SAAS,uBAG1C,OAFAtF,EAAKiG,QAAS,OACdjJ,KAAKgwC,kBAAoB,MAGS,SAAlChwC,KAAKlJ,OAAOkF,aAAaC,OACH,QAAlB+D,KAAK2wC,UAAwC,aAAlB3wC,KAAK2wC,SAChC3wC,KAAK2wC,SAAW,KAEO,UAAlB3wC,KAAK2wC,WACV3tC,EAAKiG,QAAS,EACdjJ,KAAK2wC,SAAW,QAO5B5B,EAAK9tC,UAAUowB,mBAAqB,SAAUyf,GAC1C,IAAKh5C,oBAAkBkI,KAAKlJ,OAAOiB,KAAKw5B,eAAgB,CACpD,IAAIwf,EAAY/wC,KAAKlJ,OAAOmc,QAAQC,GAAK,gBACzClT,KAAKlJ,OAAOiB,KAAKw5B,cAAcC,aAAauf,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1G9wC,KAAKlJ,OAAOiB,KAAKw5B,cAAcC,aAAauf,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjG/B,EAAK9tC,UAAUgF,YAAc,SAAUrI,GACnC,GAAsC,SAAlCoC,KAAKlJ,OAAOkF,aAAaC,KAAiB,CAC1C,IAAI+0C,EAAczyC,WAAS,yBAA0ByB,KAAKlJ,OAAOiB,KAAKmE,YAClE+0C,EAAiBD,EAAYrnC,SAC7BunC,OAAW,EAKXA,GAJoC,IAApClxC,KAAKlJ,OAAOkN,qBAAkChE,KAAKlJ,OAAOuuB,gBAAwB,SAIvErlB,KAAKlJ,OAAOiI,UAAUkyC,GAAgBzxC,MAAMQ,KAAKlJ,OAAO2I,iBAHxDO,KAAKlJ,OAAOiI,UAAUkyC,GAAgBzxC,MAAMQ,KAAKlJ,OAAO2I,gBAAkB,GAKzFO,KAAKlJ,OAAOuI,aAAaC,YACrBX,KAAMqyC,EAAYvlC,QAClBlM,KAAM2xC,EACNvxC,OAAQK,KAAKlJ,OAAOiB,KAAK6H,aAAaI,KAAKlJ,OAAO2I,mBAEtDO,KAAK0wC,mBAAmB,UACxB1wC,KAAKwwC,WAAY,EAEiB,UAAlCxwC,KAAKlJ,OAAOkF,aAAaC,MACzB+D,KAAKlJ,OAAOsb,OAAO,yBAG3B28B,EAAK9tC,UAAU4E,SAAW,SAAU7C,GAChC,GAAsC,SAAlChD,KAAKlJ,OAAOkF,aAAaC,MAAmB+D,KAAKlJ,OAAOmc,QAAQnI,cAAc,QAAS,CACvF9H,EAAKiG,QAAS,EAEdsM,WAAS,UAAU,EAAOvV,KAAKlJ,OAAOiB,MACtCwd,WAAS,kBAAkB,EAAMvV,KAAKlJ,QACtCkM,EAAKyI,QAAQzI,EAAK1H,YAAc0H,EAAK3I,MACrC,IAAIwE,OAAM,EACNsyC,OAAO,EAEPtyC,EADA/G,oBAAkBkL,EAAKzD,MACjBS,KAAKlJ,OAAOiB,KAAKmE,WAAqB,WAAEk1C,KAAKzvB,cAAcmd,WAG3D97B,EAAKzD,KAAKu/B,WAEpB,IAAIuS,EACAC,EAAgBtxC,KAAKlJ,OAAO4E,0BAC5B5D,oBAAkB+G,GAClBmB,KAAKlJ,OAAOiB,KAAKuE,wBAAwBqB,OAAO,SAAUC,EAAGnG,GACrDmG,EAAE0zC,EAAc,MAAQtuC,EAAKyI,QAAQ6lC,EAAc,MACnDD,EAAa55C,KAMrB45C,GAAsD,IAAxCrxC,KAAKlJ,OAAOiI,UAAUL,QAAQG,IAAemB,KAAKlJ,OAAO4I,cAAgB,EACnFM,KAAKlJ,OAAOiB,KAAKk+B,iBAAiBv3B,QAAQG,GAAOmB,KAAKlJ,OAAOiI,UAAUL,QAAQG,GAEvF,IAAIw3B,KAMJ,GALA95B,SAAO85B,EAAKrzB,GACZqzB,EAAIptB,QAAS,EACbotB,EAAIpzB,KAAO,OACXpE,EAAMmB,KAAKlJ,OAAOiB,KAAKgH,UAAUF,EAAI8K,UACrC3J,KAAKlJ,OAAOoS,QAAQgkB,EAAoBmJ,GACnCA,EAAIptB,OAmCLjJ,KAAKlJ,OAAOiB,KAAK81B,QAAS,MAnCb,CACRhvB,EAAI8K,WAAa3J,KAAKlJ,OAAOwF,wBAAwB3E,OAAS,GAAwB,QAAlBqI,KAAK2wC,WAC1E3wC,KAAKuxC,cAAe,GAExBvxC,KAAKwxC,gBAAgBxuC,GACrBhD,KAAK+wB,WAAW/tB,EAAMquC,GAClBrxC,KAAKlJ,OAAOiB,KAAK05C,iBACjBzxC,KAAKlJ,OAAOiB,KAAK05C,gBAAgB5hB,QAAQ7sB,EAAKyI,SAElDzL,KAAKlJ,OAAOiB,KAAKmE,WAAWw1C,gBAAgB1xC,KAAKlJ,OAAOiB,KAAK8iB,iBAAiB7X,EAAK1H,cACnF0E,KAAKlJ,OAAOiB,KAAKmE,WAAWy1C,QAAQ9nC,UACd,QAAlB7J,KAAK2wC,UAAwC,aAAlB3wC,KAAK2wC,WAChC3wC,KAAK0wC,mBAAmB,UACxB1wC,KAAKwwC,WAAY,GAErBxwC,KAAKqxB,mBAAmB,QACpBrxB,KAAKlJ,OAAO4I,cAAgB,IAC5ByxC,EAAOnxC,KAAKlJ,OAAOiB,KAAKk+B,iBAAiBob,GACzCjkC,eAAa+jC,IAAQ,cAAe,eACpC/jC,cAAY+jC,EAAK3oC,iBAAiB,eAAgB,oBAAqB,iBAE3E4E,eAAavO,IAAO,cAAe,eACnCuO,cAAYvO,EAAI2J,iBAAiB,eAAgB,oBAAqB,gBACtExI,KAAKlJ,OAAOiB,KAAKg2C,YAAY6D,eAC7B52C,GAAaX,MAAO2I,EAAKyI,QAAShQ,OAAQ,QAAUuE,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,cAAe2H,EAAK1H,YAC7HuD,EAAI8K,WAAa3J,KAAKlJ,OAAOwF,wBAAwB3E,OAAS,GAAwB,UAAlBqI,KAAK2wC,WAC1E3wC,KAAK2wC,SAAW,MAEpB,IAAIkB,GACA5uC,KAAM,OAAQtD,OAAQK,KAAKlJ,OAAO+jB,iBAAiB7X,EAAK1H,YAAaqD,KAAMqE,EAAKyI,QAChFqmC,aAAc9uC,EAAK+uC,cAAelzC,IAAKA,EAAKwC,OAAQ2B,EAAKzD,MAE7DS,KAAKlJ,OAAOoS,QAAQiP,EAAuB05B,MAOvD9C,EAAK9tC,UAAUquC,YAAc,SAAUqC,IAC9B3xC,KAAKlJ,OAAOiB,KAAK81B,QAAU7tB,KAAKwwC,WAA+B,QAAlBxwC,KAAK2wC,UAAwD,SAAlC3wC,KAAKlJ,OAAOkF,aAAaC,OAClG+D,KAAK0wC,mBAAmB,UACxB1wC,KAAKwwC,WAAY,EACjBxwC,KAAK2wC,SAAW,OAGxB5B,EAAK9tC,UAAUuwC,gBAAkB,SAAUxuC,GACvC,GAAI6K,cAAc7N,KAAKlJ,OAAOogB,iBAK1B,IAAK,IAJD2c,EAAO7zB,KAAKlJ,OAAOiB,KAAK6H,aAExB2iB,EAAcviB,KAAKlJ,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAIo8B,EAAKl8B,OAAQF,IAAK,CAClC,GAAI8qB,EAAY9qB,GAAGkb,SAAU,CACzB,IAAIq/B,EAAahyC,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK2gB,EAAKp8B,GAAGuU,IACvDuW,EAAY9qB,GAAGw6C,mBAAf1vB,CAAmChmB,UAASjC,OAAU7C,IAAMuL,EAAKyI,SAAUzL,KAAKlJ,OAAOiB,KAAM,WAAYi6C,EAAYhyC,KAAKlJ,OAAOiB,KAAQ,iBAAG,MAE5I87B,EAAKp8B,GAAGy6C,cACRC,uBAAqBnyC,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK2gB,EAAKp8B,GAAGuU,IAAM,eAAgB,eAAgB6nB,EAAKp8B,IAEtGo8B,EAAKp8B,GAAGkb,UACRw/B,uBAAqBnyC,KAAKlJ,OAAOiB,KAAKkb,QAAQC,GAAK2gB,EAAKp8B,GAAGuU,IAAK,WAAY6nB,EAAKp8B,IAAI,KAKrGs3C,EAAK9tC,UAAU8vB,WAAa,SAAU/tB,EAAM2G,GACxC3J,KAAKlJ,OAAOiB,KAAKmE,WAAW80B,UAAUrnB,EAAU3G,EAAKyI,SACrDzL,KAAKlJ,OAAOiB,KAAKu+B,gBAAgB3sB,GAAUhL,KAAOqE,EAAKyI,SAE3DsjC,EAAK9tC,UAAUwE,WAAa,SAAUxK,EAASK,GAC3CN,EAAWC,EAAS+E,KAAKlJ,OAAQkJ,KAAK7E,gBAAiB6E,KAAK5E,YAAa4E,KAAK3E,cAAeC,EAAY0E,KAAKzE,cAC9GyE,KAAKlJ,OAAO2G,cAGZ,IAAK,IAFDkB,EAAOqB,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cAC9CgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAAK,CAClCkH,EAAKlH,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAM+H,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACjDT,EAAQZ,MAAMpC,KAAS0G,EAAKlH,GAAGQ,IACR,QAAnBgD,EAAQQ,SACRkD,EAAKlH,GAAG8C,MAAQyF,KAAKmvC,mBAAmB50C,MACxCoE,EAAKlH,GAAGsF,SAAWiD,KAAKmvC,mBAAmBpyC,SAC3C4B,EAAKlH,GAAG2B,SAAW4G,KAAKmvC,mBAAmB/1C,SACtCtB,oBAAkBkI,KAAKmvC,mBAAmBj2C,cAC3CyF,EAAKlH,GAAGyB,WAAa8G,KAAKmvC,mBAAmBj2C,WAC7CyF,EAAKlH,GAAG+G,eAAiBwB,KAAKmvC,mBAAmB3wC,gBAErDG,EAAKlH,GAAGiC,aAAesG,KAAKmvC,mBAAmBz1C,cAGvD6b,WAAS,sBAAwB5W,EAAKlH,GAAG2B,SAAW,SAAU3B,EAAGuI,KAAKlJ,QACjE6H,EAAKlH,GAAG8C,OACTyF,KAAKlJ,OAAO2G,WAAW7E,KAAK+F,EAAKlH,IAGlB,QAAnBwD,EAAQQ,QAAmD,MAA/BuE,KAAKkvC,yBACjClvC,KAAKlJ,OAAOwmB,eAAgBthB,cAAgBQ,eAAgBwD,KAAKkvC,0BAA4B,GAC7FlvC,KAAKkvC,uBAAyB,OAGtCH,EAAK9tC,UAAUmxC,YAAc,SAAUzzC,EAAMoJ,EAAMzP,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAI6F,KAAKlJ,OAAO08B,cAAc77B,OAAQwC,IAAK,CACvD,IAAIk4C,EAAQ/5C,EAAQ6B,GAChBG,EAAQiE,WAAS,sBAAwB8zC,EAAMj5C,SAAW,SAAU4G,KAAKlJ,QAE7E,GADAu7C,EAAM/3C,MAAQA,GACTxC,oBAAkBu6C,EAAMn5C,YAAa,CACtC,IAAImpC,EAAc9jC,WAAS,sBAAwB8zC,EAAMn5C,WAAWE,SAAW,SAAU4G,KAAKlJ,QAC9Fu7C,EAAMn5C,WAAWoB,MAAQ+nC,GAIjC,IAAK,IADDh0B,GAAS,EACJvR,EAAI,EAAGA,EAAIkD,KAAKlJ,OAAOiI,UAAUpH,OAAQmF,IAAK,CAC9CiL,EAAKjL,GAAGuL,UAAUC,SAAS,gBAC5B+F,IAEJ,IAAIikC,EAAQh6C,EAAQ+V,GAEhB9T,GADAD,EAAQg4C,EAAMh4C,MACNg4C,EAAM/3C,OACdsE,EAAMkJ,EAAKjL,GACVhF,oBAAkBw6C,EAAMp5C,cACzBoB,EAAQiE,WAAS,sBAAwB+zC,EAAMp5C,WAAWE,SAAW,SAAU4G,KAAKlJ,SAExF,IAAIy7C,EAAW1zC,EAAIW,MAAMQ,KAAKlJ,OAAO2I,iBACrC,IAAK3H,oBAAkBy6C,GAAW,CAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAASlqC,UAAU1Q,OAAQ66C,IAAK,CAChD,IAAIn4C,EAAQk4C,EAASlqC,UAAUmqC,GAG3Bp/B,EAAS/Y,EAAMgP,MAFN,mBAGTgR,EAAUhgB,EAAMgP,MAFN,yBAGA,MAAV+J,GACAhG,eAAamlC,GAAWl4C,GAEb,MAAXggB,GACAjN,eAAamlC,GAAWl4C,GAG3B0N,EAAKjL,GAAGuL,UAAUC,SAAS,eAI5B+H,YAAUkiC,GAAW,uBAAyBj4C,EAAQ,QAAUC,GAHhE8V,YAAUkiC,GAAW,iBAAmBj4C,EAAQ,QAAUC,MAQ1Ew0C,EAAK9tC,UAAU0E,SAAW,SAAU3C,GAChC,IAAI6tB,EACAv2B,EAAQ0F,KAAK5E,YACb9C,EAAU0H,KAAKlJ,OAAOiB,KAAKuE,wBACO,UAAlC0D,KAAKlJ,OAAOkF,aAAaC,OACzB3B,EAAQ0F,KAAKovC,gBAAgBzC,iBAC7B3sC,KAAK3E,cAAgB2E,KAAKovC,gBAAgBxC,oBACtC5sC,KAAKlJ,OAAOqF,kBAAkB6D,KAAKsT,cAAc3b,OAAS,GACvDqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAK+d,gBAAgBpmB,UACtDW,EAAU0H,KAAKovC,gBAAgB1C,oBAGvC,IAAI3kC,EAAO/H,KAAKlJ,OAAOiB,KAAKy7B,cACxBif,EAAiB1qC,EAAKpQ,QAAUoQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxEumC,EAAgB3qC,EAAKpQ,QAAUoQ,EAAKA,EAAKpQ,OAAS,GAAGwU,aAAa,iBAAmB,EACrFwmC,EAAc3yC,KAAK3E,eAAiBo3C,GAAkBzyC,KAAK3E,eAAiBq3C,EAC5EE,EAAmB5yC,KAAKlJ,OAAOwH,sBAAwB0B,KAAK5E,aAAe,GAA+B,OAA1B4E,KAAKgvC,iBACzF,GAAsC,WAAlChvC,KAAKlJ,OAAOkF,aAAaC,KAAmB,CAC5C,GAAgD,UAA5C+D,KAAKlJ,OAAOkF,aAAaQ,eACzBq0B,EAAW,cAEV,IAAiD,UAA5C7wB,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAClFwD,KAAK3E,eAAiB,GAAKu3C,IAAqBD,IACpD9hB,EAAW,SACN/4B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlCyG,KAAKlJ,OAAOkF,aAAaC,OAAqB+D,KAAKlJ,OAAOqF,kBAAkB6D,KAAKsT,cAAc3b,OAAS,GACrGqI,KAAKlJ,OAAOqF,kBAAkB6D,KAAK+d,gBAAgBpmB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5CqI,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAErDlC,GADsB0F,KAAKovC,gBAAgBvC,2BAK/CvyC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAKqI,KAAK3E,eAAiB,GAAKu3C,IAAqBD,IAC7Cr4C,GAAsD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,gBACY,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBAA8B,CAC1DlC,GAASyN,EAAKpQ,SACd2C,EAAQyN,EAAKpQ,OAAS,GAE1B,IACIk7C,EAAe7yC,KAAKlJ,OAAOiB,KAAKghB,cAAe,KAAE,GACjD+5B,EAAkBhX,SAASiX,cAC/BhrC,EAAKzN,EAAQ,GAAGu2B,GAAU9oB,EAAK,IAC/BwN,WAAS,aAAcjb,EAAQ,EAAG0F,KAAKovC,iBACvC,IAAI9B,EAA6D,UAA5CttC,KAAKlJ,OAAOkF,aAAaQ,eAA6BlC,EAAQA,EAAQ,EAG3F,GAFA0F,KAAKlJ,OAAOiB,KAAKghB,cAAe,KAAE1b,OAAO,EAAG,GAC5C2C,KAAKlJ,OAAOiB,KAAKghB,cAAe,KAAE1b,OAAOiwC,EAAgB,EAAGuF,GACxD7yC,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,cAAe,CACvF,IAAIq2B,EAAc/1B,KAAKlJ,OAAOsY,qBAE1B4jC,EAAqBhzC,KAAKlJ,OAAOiB,KAAKu+B,gBAAgB,GAC1DP,EAAYz7B,EAAQ,GAAGu2B,GAAUkF,EAAY,IAC7C/1B,KAAKlJ,OAAOiB,KAAKghB,cAAmB,WAAE1b,OAAO,EAAG,GAChD2C,KAAKlJ,OAAOiB,KAAKghB,cAAmB,WAAE1b,OAAOiwC,EAAgB,EAAG0F,GAChEz9B,WAAS,aAAcjb,EAAQ,EAAG0F,KAAKovC,iBAE3C,GAAsC,QAAlCpvC,KAAKlJ,OAAOkF,aAAaC,MAAoD,SAAlC+D,KAAKlJ,OAAOkF,aAAaC,KAAiB,CAErF,IAAK,IADDg3C,EAASjzC,KAAKlJ,OAAOiB,KAAKkf,kBAAkBzO,iBAAiB,gBACxD/Q,EAAI,EAAGA,EAAIw7C,EAAOt7C,OAAQF,IAC/Bw7C,EAAOx7C,GAAGotB,SAEdtP,WAAS,gBAAkBvV,KAAKlJ,OAAOiB,KAAKmE,WAAWy1C,SAEvDiB,IACA5yC,KAAKgvC,iBAAmB,MAE5B8D,EAAgBI,WAsB5BnE,EAAK9tC,UAAUyE,UAAY,SAAU1C,GACjC,GAAyB,YAArBA,EAAKnD,aAA6BG,KAAKwwC,UACvCxtC,EAAKiG,QAAS,OAGlB,GAAsC,SAAlCjJ,KAAKlJ,OAAOkF,aAAaC,MAAwC,cAArB+G,EAAKnD,YAArD,CAIA,GAAIG,KAAKgwC,oBAAsBhwC,KAAKgwC,kBAAkB3nC,UAAUC,SAAS,qBACrEtI,KAAKgwC,kBAAkB3nC,UAAUC,SAAS,uBAAyBtI,KAAKgwC,kBAAkB3nC,UAAUC,SAAS,YAG7G,OAFAtF,EAAKiG,QAAS,OACdjJ,KAAKgwC,kBAAoB,MAG7B,GAAyB,WAArBhtC,EAAKnD,YAEL,IAAK,IADDlB,EAAOqE,EAAKrE,KACPlH,EAAI,EAAGA,EAAIkH,EAAKhH,OAAQF,IAAK,CAClCuI,KAAKuuC,eAAe5vC,EAAKlH,GAAG2B,UAE5B,IAAK,IADD+0C,EAAS30C,EAAoBmF,EAAKlH,IAC7B8J,EAAI,EAAGA,EAAI4sC,EAAOx2C,OAAQ4J,IAC/BvB,KAAKuuC,eAAeJ,EAAO5sC,GAAGnI,UAElC4J,EAAKrE,KAAOA,EAAKhF,OAAOw0C,GAGhC,GAAyB,QAArBnrC,EAAKnD,YAAuB,CAE5B,GADAG,KAAK3E,cAAgB2E,KAAKlJ,OAAOiB,KAAKyvB,iBAClCxnB,KAAKlJ,OAAOwH,qBAAsB,CAClC,IAAI60C,EAAW,yBAA2BnzC,KAAK3E,cAAgB,KAC3DwD,OAAM,EACNmB,KAAK3E,eAAiB,GAAiD,QAA5C2E,KAAKlJ,OAAOkF,aAAaQ,gBACR,WAA5CwD,KAAKlJ,OAAOkF,aAAaQ,gBACzBwD,KAAKgvC,iBAAmBhvC,KAAK3E,cAAcwM,WAC3ChJ,EAAMmB,KAAKlJ,OAAOu8B,aAAavoB,cAAcqoC,GAC7CnzC,KAAK5E,YAAcyD,EAAMA,EAAI8K,SAAW,GAGpC3J,KAAKgvC,kBAA8C,OAA1BhvC,KAAKgvC,kBAC9BmE,EAAW,yBAA2BnzC,KAAKgvC,iBAAmB,KAC9DnwC,EAAMmB,KAAKlJ,OAAOu8B,aAAavoB,cAAcqoC,GAC7CnzC,KAAK5E,YAAcyD,EAAMA,EAAI8K,SAAW,GAGxC3J,KAAK5E,YAAc,OAK3B4E,KAAK5E,YAAc4E,KAAKlJ,OAAOiB,KAAKyvB,kBAAoB,EAAIxnB,KAAKlJ,OAAOiB,KAAKyvB,iBAAmB,EAEpGxnB,KAAKzE,aAAeyE,KAAKlJ,OAAO4R,qBAAqB,GAEzD1F,EAAOhD,KAAKozC,aAAapwC,QA/CrBA,EAAKiG,QAAS,GAyDtB8lC,EAAK9tC,UAAU0uC,wBAA0B,SAAU3sC,GACX,OAAhChD,KAAKkvC,yBACLlvC,KAAKkvC,uBAAyBlvC,KAAKlJ,OAAOkF,aAAaQ,iBAG/DuyC,EAAK9tC,UAAUmyC,aAAe,SAAUpwC,GACpC,IAAI3I,EAAQ2I,EAAKrE,KACjB,GAAoB,QAAhBqE,EAAKvH,OAAkB,CACvB,IAAIxD,EAAM+H,KAAKlJ,OAAOiB,KAAK2D,0BAA0B,GACjDm1B,EAAW,KACfx2B,EAAM0C,SAAWjF,oBAAkBuC,EAAM0C,UAAYR,YAAWyG,EAAKrE,MAAQtE,EAAM0C,SAGnF,IAAIyc,EAAcxZ,KAAKlJ,OAAOiB,KAAKuE,wBAC/BhC,EAAQ0F,KAAK5E,YACjBf,EAAMjB,SAAWsd,SAAO1W,KAAKlJ,OAAOmc,QAAQC,GAAK,UACjDqC,WAAS,sBAAwBlb,EAAMjB,SAAUiB,EAAO2F,KAAKlJ,QAC7D,IAAIyD,EAAQ,EAER6C,OAAY,EACZoB,OAAiB,EACjBtF,OAAa,EACbiE,OAAkB,EAClBy1C,EAAmB5yC,KAAKlJ,OAAOwH,sBAAwB0B,KAAK5E,aAAe,GAA+B,OAA1B4E,KAAKgvC,iBACrFjnC,EAAO/H,KAAKlJ,OAAOiI,UACnB0zC,EAAiB1qC,EAAKpQ,QAAUoQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxEumC,EAAgB3qC,EAAKpQ,QAAUoQ,EAAKA,EAAKpQ,OAAS,GAAGwU,aAAa,iBAAmB,EACrFwmC,EAAc3yC,KAAK3E,eAAiBo3C,GAAkBzyC,KAAK3E,eAAiBq3C,EAUhF,GATIl5B,EAAY7hB,SACA6hB,EAAYxZ,KAAK5E,aAAad,MAC1C8C,EAAYoc,EAAYxZ,KAAK5E,aAAa4E,KAAKlJ,OAAOsG,WACtDD,EAAkBqc,EAAYxZ,KAAK5E,aAAa4E,KAAKlJ,OAAOqG,iBACxDqc,EAAYxZ,KAAK5E,aAAalC,aAC9BsF,EAAiBgb,EAAYxZ,KAAK5E,aAAalC,WAAWE,UAE9DF,EAAasgB,EAAYxZ,KAAK5E,aAAalC,YAEC,QAA5C8G,KAAKlJ,OAAOkF,aAAaQ,gBAA4Bgd,EAAY7hB,OAAQ,CAEzE,GADA4C,EAAQif,EAAYxZ,KAAK5E,aAAab,MACU,UAA5CyF,KAAKlJ,OAAOkF,aAAaQ,eACzBq0B,EAAW,SACXv2B,EAAQkf,EAAYxZ,KAAK5E,aAAad,WAErC,GAAgD,UAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAC1Dq0B,EAAW,QACX,IAAI+c,EAAmBp0C,EAAoBggB,EAAYxZ,KAAK5E,cAAczD,OACtEy1C,EAAmB5zB,EAAYxZ,KAAK5E,aAAad,MACrDA,EAASszC,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5C5tC,KAAKlJ,OAAOkF,aAAaQ,eAA4B,CAC1Dq0B,EAAW,SACN7wB,KAAK3E,eAAiB,GAAKu3C,IAAqBD,IACjDt4C,EAAMnB,WAAaqD,YAAWid,EAAYxZ,KAAK5E,cAC/Cf,EAAMmE,eAAiBnE,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAW8G,KAAKlJ,OAAOwG,eAExC,IAAI+1C,EAAoB75C,EAAoBggB,EAAYxZ,KAAK5E,cAAczD,OACvE27C,EAAoB95B,EAAYxZ,KAAK5E,aAAad,MACtDD,EAAME,MAAQA,EAAQ,EACtBD,EAAS+4C,EAAoB,EAAMC,EAAoBD,IACnDrzC,KAAK7E,kBACLd,EAAM0C,SAASiD,KAAKlJ,OAAOqG,iBAAmB9C,EAAM2F,KAAKlJ,OAAOqG,iBAAmBC,EAC9EtF,oBAAkBuC,EAAMnB,aACzBqE,EAAgBtF,EAAKoC,EAAMnB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBd,IAsB7F,GAlBgD,UAA5C2F,KAAKlJ,OAAOkF,aAAaQ,gBAA0E,UAA5CwD,KAAKlJ,OAAOkF,aAAaQ,kBAC3EwD,KAAK3E,eAAiB,GAAKu3C,IAAqBr4C,GAASo4C,IAC1Dt4C,EAAMmE,eAAiBA,EACvBnE,EAAMnB,WAAaqD,YAAWrD,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAW8G,KAAKlJ,OAAOwG,eAExCjD,EAAME,MAAQA,EACVyF,KAAK7E,kBACLd,EAAM0C,SAASiD,KAAKlJ,OAAOqG,iBAAmB9C,EAAM2F,KAAKlJ,OAAOqG,iBAAmBA,EAC9ErF,oBAAkBuC,EAAMnB,aACzBqE,EAAgBtF,EAAKoC,EAAMnB,WAAY,MAAO8G,KAAKlJ,OAAQkJ,KAAK7E,gBAAiBd,KAI7E,MAAZw2B,IAAqB7wB,KAAK3E,eAAiB,GAAKu3C,IAAqBD,IACrE3vC,EAAK1I,MAAqB,WAAbu2B,EAAwBv2B,EAAQA,EAAQ,GAET,WAA5C0F,KAAKlJ,OAAOkF,aAAaQ,eAA6B,CACtD,IAAIzF,EAAciJ,KAAKlJ,OAAOiB,KAAKhB,sBAAsBC,cACrDgJ,KAAKlJ,OAAOiB,KAAKhB,WAAWA,WAAW6E,KAAOoE,KAAKlJ,OAAOiB,KAAKhB,WACnEiM,EAAK1I,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAGlBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhB0I,EAAKvH,SACLuE,KAAKmvC,oBAAuB50C,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1F2D,SAAU1C,EAAM0C,SAAUyB,eAAgB1G,oBAAkBuC,EAAMnB,iBAAc0jB,EAAYviB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArBsJ,EAAKnD,YAEL,IAAK,IADD0zC,EAAgBvwC,EAAKrE,KAChBlH,EAAI,EAAGA,EAAI87C,EAAc57C,OAAQF,IACtC,GAAI87C,EAAc97C,GAAGyB,WAAY,CACzBA,EAAaC,EAAc6G,KAAKlJ,OAAQy8C,EAAc97C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIwoC,EAAa/oC,EAAWQ,aAAagF,QAAQ60C,EAAc97C,IAC/DyB,EAAWQ,aAAa2D,OAAO4kC,EAAY,IAK3D,OAAOj/B,GAMX+rC,EAAK9tC,UAAU2vB,UAAY,SAAUjyB,EAAMrE,EAAOu2B,GAC9C7wB,KAAKkvC,uBAAyBlvC,KAAKlJ,OAAOkF,aAAaQ,eACnDmC,GACIrE,GAAS,GACT0F,KAAK3E,cAAgBf,EACrB0F,KAAK5E,YAAcd,IAGnB0F,KAAK3E,cAAgB2E,KAAKlJ,OAAO0wB,iBACjCxnB,KAAK5E,YAAc4E,KAAKlJ,OAAO0wB,kBAE/BqJ,GACA7wB,KAAKlJ,OAAOwmB,eAAgBthB,cAAgBQ,eAAgBq0B,KAAc,GAE9E7wB,KAAKlJ,OAAOiB,KAAKmE,WAAW00B,UAAUjyB,EAAMrE,IAG5C0F,KAAKlJ,OAAOiB,KAAKmE,WAAW00B,UAAUjyB,EAAMrE,IAOpDy0C,EAAK9tC,UAAUuyC,iBAAmB,WAC9B,OAAOxzC,KAAKlJ,OAAOiB,KAAKmE,WAAWs3C,oBAKvCzE,EAAK9tC,UAAUwyC,YAAc,WACzBzzC,KAAKlJ,OAAOiB,KAAKmE,WAAWu3C,eAEhC1E,EAAK9tC,UAAUsuC,aAAe,SAAU3xC,GAC/B9F,oBAAkB8F,EAAEoF,KAAKnD,cACY,WAAlCjC,EAAEoF,KAAKnD,YAAYgI,YAA6D,SAAlCjK,EAAEoF,KAAKnD,YAAYgI,aAC3B,UAAlC7H,KAAKlJ,OAAOkF,aAAaC,MAAsD,cAAlC2B,EAAEoF,KAAKnD,YAAYgI,cACxE7H,KAAKoyC,YAAYpyC,KAAKlJ,OAAOiB,KAAKhB,WAAYiJ,KAAKlJ,OAAOiI,UAAWiB,KAAKlJ,OAAOwF,0BAC7E0D,KAAKlJ,OAAOoI,YAAcc,KAAKlJ,OAAOqI,oBAAsBa,KAAKlJ,OAAO4I,gBACpEM,KAAKlJ,OAAOiB,KAAKhB,WAAWY,SAAWqI,KAAKlJ,OAAOsY,qBAAqBzX,QACxEqI,KAAKoyC,YAAYpyC,KAAKlJ,OAAOiB,KAAKhB,WAAYiJ,KAAKlJ,OAAOsY,qBAAsBpP,KAAKlJ,OAAOwF,2BAS5GyyC,EAAK9tC,UAAUmwB,SAAW,SAAUznB,EAAUvF,GACJ,SAAlCpE,KAAKlJ,OAAOkF,aAAaC,MAAqD,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,OAC/B,UAAlC+D,KAAKlJ,OAAOkF,aAAaC,OACzB+D,KAAKwwC,WAAY,EACjBxwC,KAAK0wC,mBAAmB,UAE5B1wC,KAAKlJ,OAAOiB,KAAKmE,WAAWk1B,SAASznB,EAAUvF,KAGhD2qC,KCzwBP2E,GAA+B,WAC/B,SAASA,EAAc58C,GACnB2L,OAAKC,OAAOixC,iBACZ3zC,KAAKlJ,OAASA,EAiBlB,OAXA48C,EAAczyC,UAAU4B,cAAgB,WACpC,MAAO,iBAOX6wC,EAAczyC,UAAU4I,QAAU,aAG3B6pC,KCjBPE,GAA2B,WAC3B,SAASA,EAAU98C,GACf2L,OAAKC,OAAOmxC,aACZ7zC,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBAwGT,OA/FA0pC,EAAU3yC,UAAU4B,cAAgB,WAChC,MAAO,aAEX+wC,EAAU3yC,UAAUiJ,iBAAmB,WACnClK,KAAKlJ,OAAOqT,GAAG,eAAgBnK,KAAK8zC,aAAc9zC,MAClDA,KAAKlJ,OAAOqT,GAAG,kBAAmBnK,KAAK+zC,gBAAiB/zC,MACxDA,KAAKlJ,OAAOiB,KAAKoS,GAAG,yBAA0BnK,KAAKg0C,oBAAqBh0C,MACxEA,KAAKlJ,OAAOqT,GAAG,iBAAkBnK,KAAKi0C,eAAgBj0C,MACtDA,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAKk0C,kBAAmBl0C,MAC5DA,KAAKlJ,OAAOqT,GAAG,iBAAkBnK,KAAKm0C,eAAgBn0C,OAK1D4zC,EAAU3yC,UAAUuJ,oBAAsB,WAClCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,eAAgB1K,KAAK8zC,cACrC9zC,KAAKlJ,OAAO4T,IAAI,kBAAmB1K,KAAK+zC,iBACxC/zC,KAAKlJ,OAAO4T,IAAI,iBAAkB1K,KAAKi0C,gBACvCj0C,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAKk0C,mBAC1Cl0C,KAAKlJ,OAAO4T,IAAI,iBAAkB1K,KAAKm0C,gBACvCn0C,KAAKlJ,OAAOiB,KAAK2S,IAAI,yBAA0B1K,KAAKg0C,uBAExDJ,EAAU3yC,UAAU+yC,oBAAsB,SAAUhxC,GAEhDA,EAAY,SAAI,GAEpB4wC,EAAU3yC,UAAU6yC,aAAe,WAI/B,IAAK,IAHDM,EAAYp0C,KAAKlJ,OAAOiI,UAAUpB,OAAO,SAAUC,GACnD,OAAQA,EAAEyK,UAAUC,SAAS,iBAExB7Q,EAAI,EAAGA,EAAI28C,EAAUz8C,OAAQF,IAAK,CACvC,IAAI48C,EAAWD,EAAU38C,GAAG2f,uBAAuB,uBAC/Ck9B,EAAat0C,KAAKlJ,OAAOiB,KAAKsf,oBAAoB+8B,EAAU38C,GAAG0U,aAAa,aAC5EjT,EAAaP,YAAU,aAAcqH,KAAKlJ,OAAOiB,KAAKuE,wBAAwB7E,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgBmH,KAAKlJ,OAAQw9C,EAAW31C,KAAMqB,KAAKlJ,OAAOiB,KAAKuE,2BAC/D0D,KAAKlJ,OAAOiB,KAAK0f,gBAAgBxF,OAAOoiC,EAAS,MAI7DT,EAAU3yC,UAAUgzC,eAAiB,SAAUjxC,GAC3C,IAAIuxC,EAAmBvxC,EAAKnE,IAAIuY,uBAAuB,uBAClDtf,oBAAkBy8C,EAAiB,KACpCv0C,KAAKlJ,OAAOiB,KAAK0f,gBAAgBxF,OAAOsiC,EAAiB,KAGjEX,EAAU3yC,UAAUizC,kBAAoB,SAAUlxC,GAC9C,IAAInM,EAAamJ,KAAKlJ,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAIuL,EAAKmyB,WAAWx9B,OAAQF,IACxCuL,EAAKmyB,WAAW19B,GAAGkD,MAAMG,QAAUkI,EAAKvH,QAGhDm4C,EAAU3yC,UAAU8yC,gBAAkB,SAAU/wC,GAC5C,IAAK6K,eAAe7N,KAAKlJ,OAAOogB,iBAAkB,CAC9C,IAAIvY,EAAOqE,EAAKrE,KACZE,EAAMmE,EAAKwxC,cAAc7yB,cAAc8yB,gBAEvCC,EAAgB,kBADP58C,oBAAkB6G,EAAKzF,YAAsCyF,EAAKrE,MAA7BqE,EAAKzF,WAAWoB,OACnB,QAAUqE,EAAKpE,MAC1Do6C,EAAY91C,EAAIiM,cAAc,IAAM4pC,GAAersC,UACnDusC,KAAcrsC,MAAM3F,KAAK+xC,GAAWh3C,OAAO,SAAUk3C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAGj9C,OAEpBo9C,EAAc,eADDH,EAAS/sC,WAAWU,MAAM,EAAGusC,GAE9CzkC,YAAUrN,EAAKwxC,cAAc7yB,eAAgBozB,KAIrDnB,EAAU3yC,UAAUkzC,eAAiB,SAAUnxC,GAC3C,GAAyB,cAArBA,EAAKnD,aAAoD,QAArBmD,EAAKnD,YAAuB,CAChE,IAAIm1C,EAAShyC,EAAKnE,IAAI2J,iBAAiB,eAAe,GAAG2D,aAAa,WAElE8oC,GADQ3iC,SAAS0iC,EAAO,IAAM,GACXntC,WACvB7E,EAAKnE,IAAI2J,iBAAiB,eAAe,GAAGyE,aAAa,UAAWgoC,GAGxE,IAAK,IADDC,EAAel1C,KAAKlJ,OAAOiB,KAAKghB,cAAcha,UACzCtH,EAAI,EAAGA,EAAIy9C,EAAav9C,OAAQF,IACrCy9C,EAAaz9C,GAAG+H,MAAM,GAAGs0B,SAAU,EAErBn7B,YAAU,cAAeqH,KAAKlJ,OAAOiB,MAErC,eAAE,EAApBg2C,EAA4BhmC,KAAM/H,KAAKlJ,OAAOiB,KAAKghB,cAAcha,aAOrE60C,EAAU3yC,UAAU4I,QAAU,WAC1B7J,KAAKwK,uBAEFopC,KCpHPnzC,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAoBxCo0C,GAA4C,SAAUpzC,GAEtD,SAASozC,EAA2Br+C,EAAQs+C,GACxC,IAAI/tC,EAAQtF,EAAOa,KAAK5C,KAAMlJ,EAAQs+C,IAAYp1C,KAalD,OAZAqH,EAAMguC,kBAAmB,EACzBhuC,EAAMiuC,WAAa,EACnBjuC,EAAMkuC,SAAW,EACjBluC,EAAMmuC,aAAc,EAEpBnuC,EAAMytB,YAAc,EACpBztB,EAAMwnC,UAAY,EAClBxnC,EAAMouC,aAAe,EACrBpuC,EAAMquC,gBAAiB,EAEvBruC,EAAMqoB,qBAAsB,EAC5BroB,EAAM6C,mBACC7C,EAqTX,OApUA5G,GAAU00C,EAA4BpzC,GAiBtCozC,EAA2Bl0C,UAAU00C,kBAAoB,WACrD,OAAO,IAAIhT,GAA6B3iC,KAAKlJ,SAEjDq+C,EAA2Bl0C,UAAUnC,cAAgB,SAAUxE,GAC3D,OAAO0F,KAAKlJ,OAAO08B,cAAc71B,OAAO,SAAUC,GAAK,OAAO0U,SAAS1U,EAAEuO,aAAa,iBAAkB,KAAO7R,IAAU,IAE7H66C,EAA2Bl0C,UAAUiJ,iBAAmB,WACpDlK,KAAKlJ,OAAOqT,GAAGyrC,GAA0B51C,KAAK61C,mBAAoB71C,MAClEA,KAAKlJ,OAAOqT,GAAG2rC,GAAsB91C,KAAK2G,cAAe3G,OAE7Dm1C,EAA2Bl0C,UAAU40C,mBAAqB,SAAU7yC,GAC5DA,EAAK+yC,QACL/1C,KAAKs1C,WAAa,EAClBt1C,KAAK80B,WAAa,EAClB90B,KAAK6uC,SAAW7uC,KAAKlJ,OAAOia,aAAao3B,SAAW,GAE/CnlC,EAAKqyC,mBACVr1C,KAAKq1C,kBAAmB,IAGhCF,EAA2Bl0C,UAAU0F,cAAgB,SAAU3D,GAC3D,IAAI67B,EAAU7+B,KAAKlJ,OAAOu8B,aAAavoB,cAAc,cACrD,GAAI9K,KAAKw1C,aAAex1C,KAAK80B,YAAc,GAAK90B,KAAK6uC,UAAY,EAAG,CAChE,GAAI7uC,KAAK6uC,SAAW7rC,EAAKqL,MAAQrO,KAAKlJ,OAAOia,aAAao3B,SAAU,CAChE,IAAI6N,KAAqBnX,EAAQxC,UAAYr8B,KAAKlJ,OAAOm/C,gBACrDC,EAAYF,EAAkBh2C,KAAKlJ,OAAOiI,UAAUpH,OACpDu+C,EAAYlzC,EAAKqL,QACjB6nC,EAAYF,GACPhzC,EAAKqL,MAAQ2nC,IAEtBh2C,KAAK80B,WAAaohB,EAAYl2C,KAAKlJ,OAAOiI,UAAUpH,OACpDqI,KAAK6uC,SAAWqH,OAGhBl2C,KAAK80B,YAAc,EACnB90B,KAAK6uC,UAAY,EAErB7uC,KAAKw1C,aAAc,EAEnBx1C,KAAK0vB,sBACL1vB,KAAK80B,WAAa,EAClB90B,KAAK6uC,SAAW7uC,KAAKlJ,OAAOia,aAAao3B,SAAW,GAExDnlC,EAAK8xB,WAAa90B,KAAK80B,WACvB9xB,EAAK6rC,SAAW7uC,KAAK6uC,UAEzBsG,EAA2Bl0C,UAAU0uB,cAAgB,SAAUl0B,GAC3D,IAAI4L,EAAQrH,KACNA,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACxC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAgB1rC,EAAgByI,KAAKlJ,QAiB1EiL,EAAOd,UAAU0uB,cAAc/sB,KAAK5C,KAAM,OAhB1CA,KAAKlJ,OAAO2E,GAAQ,aAAcuE,KAAKm2C,YAAan2C,MAEpDA,KAAK8X,GAAK,WACNzQ,EAAM+uC,UAAUC,SAAS,SAAUC,GAAc,OAAOjvC,EAAMkvC,gBAAgBD,KAC9EjvC,EAAMvQ,OAAO4T,IAAI,gBAAiBrD,EAAMyQ,KAE5C9X,KAAKlJ,OAAOqT,GAAG,gBAAiBnK,KAAK8X,GAAI9X,MACzCA,KAAKlJ,OAAOoT,iBAAiBiO,EAAuBnY,KAAKw2C,iBAAiBx7B,KAAKhb,OAC/EA,KAAKlJ,OAAO2E,GAAQ,mCAAoCuE,KAAK0F,UAAW1F,MACxEA,KAAKlJ,OAAO2E,GAAQ,kCAAmCuE,KAAK2F,SAAU3F,MACtEA,KAAKlJ,OAAO2E,GAAQ,8BAA+BuE,KAAKy2C,mBAAoBz2C,MAC5EA,KAAKlJ,OAAO2E,GAAQ,aAAcuE,KAAK02C,iBAAkB12C,MACzDA,KAAKlJ,OAAO2E,GAAQ,mBAAoBuE,KAAK22C,QAAS32C,MACtDA,KAAKlJ,OAAO2E,GAAQ,6BAA8BuE,KAAK42C,WAAY52C,QAM3Em1C,EAA2Bl0C,UAAUk1C,YAAc,SAAUv4C,GACzDmE,EAAOd,UAAUk1C,YAAYvzC,KAAK5C,KAAMpC,GAClCoC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACxC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAgB1rC,EAAgByI,KAAKlJ,UACrEgB,oBAAkB8F,EAAEyQ,SACrBrO,KAAK4uC,aAAehxC,EAAEyQ,MACtB9P,WAAS,aAAcyB,MAAM62C,iBAAiB72C,KAAKlJ,OAAOm/C,eAAiBr4C,EAAEyQ,MAAO,WAGlFvW,oBAAkB8F,EAAEiC,cAA6C,gBAA7BjC,EAAEiC,YAAYgI,YAAiC7H,KAAK0vB,uBAC1F1vB,KAAK82C,SAASza,UAAY,EAC1Br8B,KAAK0vB,qBAAsB,KAIvCylB,EAA2Bl0C,UAAU2uB,YAAc,WAC/C7tB,EAAOd,UAAU2uB,YAAYhtB,KAAK5C,MAC5BA,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACxC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAgB1rC,EAAgByI,KAAKlJ,UAC1EyH,WAAS,WAAYyB,MAAMD,QAAQg3C,eAAgB,EACnD/2C,KAAKo2C,UAAY,IAAIY,GAAyBz4C,WAAS,WAAYyB,MAAMiT,QAAS1U,WAAS,WAAYyB,MAAMD,SAC7GC,KAAK82C,SAAW92C,KAAKi3C,WAAWlqC,aAGxCooC,EAA2Bl0C,UAAUi2C,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAKt3C,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACvC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAe1rC,EAAgByI,KAAKlJ,QACrEkJ,KAAK01C,gBACL11C,KAAK01C,gBAAiB,EACf11C,KAAKy1C,eAGZz1C,KAAKy1C,aAAe1zC,EAAOd,UAAUi2C,cAAct0C,KAAK5C,KAAMm3C,EAAMC,EAASC,EAAMC,GAC5Ev1C,EAAOd,UAAUi2C,cAAct0C,KAAK5C,KAAMm3C,EAAMC,EAASC,EAAMC,IAInEv1C,EAAOd,UAAUi2C,cAAct0C,KAAK5C,KAAMm3C,EAAMC,EAASC,EAAMC,IAG9EnC,EAA2Bl0C,UAAUyE,UAAY,SAAU9H,GACvD,IAAIu1C,EAAW,yBAA2Bv1C,EAAEtD,MAAQ,KAChDA,EAAQ0F,KAAKlJ,OAAOu8B,aAAavoB,cAAcqoC,GAAUxpC,SACzD8B,EAAUzL,KAAKlJ,OAAOwF,wBAAwBhC,GAClDsD,EAAEe,KAAO8M,GAEb0pC,EAA2Bl0C,UAAU0E,SAAW,SAAU3C,GACtD,IAEIitC,GAAYzzC,eAAgBwD,KAAKu3C,YAAan8C,YAAa4E,KAAK5E,YAAa80C,aAAclwC,KAAKkwC,cACpGlwC,KAAKlJ,OAAOsb,OAAO,mBAAoB69B,GACvCjwC,KAAKu3C,YAActH,EAAQzzC,eAC3BwD,KAAK5E,YAAc60C,EAAQ70C,YAC3B4E,KAAKkwC,aAAeD,EAAQC,aAC5B,IAAInoC,EAAO/H,KAAKlJ,OAAOiI,UACnB0zC,EAAiB1qC,EAAKpQ,QAAUoQ,EAAK,GAAGoE,aAAa,iBAAmB,EACxEumC,EAAgB3qC,EAAKpQ,QAAUoQ,EAAKA,EAAKpQ,OAAS,GAAGwU,aAAa,iBAAmB,EACrFqrC,EAAcx3C,KAAKlJ,OAAO0wB,kBAAoBirB,GAAkBzyC,KAAKlJ,OAAO0wB,kBAAoBkrB,EACzE,QAArB1yC,KAAKu3C,aAA8C,WAArBv3C,KAAKu3C,cACrCv3C,KAAU,OAAI,GAEO,QAArBA,KAAKu3C,aAA8C,WAArBv3C,KAAKu3C,cAChCv3C,KAAK5E,cAAqC,IAAtB4E,KAAK5E,cAA0D,IAAlC4E,KAAKlJ,OAAO0wB,kBAA4BgwB,IAC5Fz1C,EAAOd,UAAmB,eAAE2B,KAAK5C,KAAMgD,IAG/CmyC,EAA2Bl0C,UAAUw2C,iBAAmB,WAEpD11C,EAAOd,UAAqB,YAAE2B,KAAK5C,OAEvCm1C,EAA2Bl0C,UAAUy1C,iBAAmB,WAGpD12C,KAAKlJ,OAAOsb,OAAO,uBACO,QAArBpS,KAAKu3C,aAA8C,WAArBv3C,KAAKu3C,cAA6Bv3C,KAAU,OAC3E+B,EAAOd,UAAqB,YAAE2B,KAAK5C,OAG3Cm1C,EAA2Bl0C,UAAUw1C,mBAAqB,SAAUzzC,GAChE,IACI67B,EAAU7+B,KAAKlJ,OAAOu8B,aAAavoB,cAAc,cACjD9K,KAAU,OAAK6+B,EAAQ/zB,cAAc,iBACrC9K,KAAKw1C,aAAc,IAG3BL,EAA2Bl0C,UAAU21C,WAAa,SAAU5zC,GAExDjB,EAAOd,UAAoB,WAAE2B,KAAK5C,KAAMgD,IAE5CmyC,EAA2Bl0C,UAAUy2C,cAAgB,WACjD,IACI7Y,EAAU7+B,KAAKlJ,OAAOu8B,aAAavoB,cAAc,cACjD9K,KAAU,QAAM6+B,EAAQ/zB,cAAc,iBACtC9K,KAAKlJ,OAAO+2B,QAAS,EACrB7tB,KAAKlJ,OAAO85B,cAGpBukB,EAA2Bl0C,UAAU01C,QAAU,SAAUh4C,GAErDoD,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMrB,IAEhDw2C,EAA2Bl0C,UAAUu1C,iBAAmB,SAAUxzC,GAC9D,GAAyB,QAArBA,EAAKnD,YAAuB,CAC5B,IAAIowC,GAAYzzC,eAAgBwD,KAAKu3C,YAAan8C,YAAa4E,KAAK5E,YAAa80C,aAAclwC,KAAKkwC,cACpGlwC,KAAKlJ,OAAOsb,OAAO,mBAAoB69B,GACvCjwC,KAAKu3C,YAActH,EAAQzzC,eAC3BwD,KAAK5E,YAAc60C,EAAQ70C,YAC3B4E,KAAKkwC,aAAeD,EAAQC,aAGhCnuC,EAAOd,UAAwB,eAAE2B,KAAK5C,KAAMgD,IAEhDmyC,EAA2Bl0C,UAAUs1C,gBAAkB,SAAUD,GAC7D,IAAIe,EAAOf,EAAWqB,SAElB9Y,EAAU7+B,KAAKlJ,OAAOu8B,aAAavoB,cAAc,cACjDwqB,EAFY,GAEet1B,KAAKlJ,OAAOm/C,eACvC2B,EAAYtB,EAAWuB,OAAOzb,IAAMp8B,KAAKs1C,WAAc,EACvDwC,EAAcxB,EAAWuB,OAAOzb,IAAMp8B,KAAKs1C,WAAchgB,EAC7D,GAAIsiB,EAAU,CACV,IAAIG,IAAY/3C,KAAKlJ,OAAO2uB,OAAO5d,WAAWnJ,QAAQ,KAAO,EAAIsB,KAAKlJ,OAAO2uB,OACzEzlB,KAAKlJ,OAAOmc,QAAQosB,wBAAwB5Z,QAC5CnrB,KAAYukC,EAAQxC,UAAYr8B,KAAKlJ,OAAOm/C,gBAC1Ct/B,KAAKC,KAAKmhC,EAAU/3C,KAAKlJ,OAAOm/C,gBAChCj2C,KAAKlJ,OAAOiI,UAAUpH,OAI5B,GAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9B0F,KAAK80B,WAAax6B,EAClB0F,KAAK6uC,SAAWv0C,EAAQ0F,KAAKlJ,OAAOiI,UAAUpH,OAC1CqI,KAAK6uC,SAAW7uC,KAAK4uC,aAAc,CACnC,IAAIoJ,EAAUh4C,KAAK4uC,aAAe,EAC9BqJ,EAAUj4C,KAAK6uC,SAAWmJ,EAC9Bh4C,KAAK6uC,SAAWmJ,EAChBh4C,KAAK80B,WAAa90B,KAAK80B,WAAamjB,EAGxC,IAAIC,EAAQvhC,KAAKC,KAAK0/B,EAAWuB,OAAOzb,IAAMp8B,KAAKlJ,OAAOm/C,gBAC1DiC,GAAgBl4C,KAAKlJ,OAAOia,aAAao3B,SACzC,IAAIgQ,EAAa,EACjB,IAAKrgD,oBAAkBkI,KAAKlJ,OAAOiI,UAAUm5C,IAAS,CAGlDC,GAFWn4C,KAAKlJ,OAAOu8B,aAAa7qB,iBAAiB,iBAAiB0vC,GACjEptC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAfgsC,EACAn4C,KAAKs1C,WAAagB,EAAWuB,OAAOzb,QAEnC,CACD,IAAI3W,EAASzlB,KAAKlJ,OAAOm/C,eACzBj2C,KAAKs1C,WAAcgB,EAAWuB,OAAOzb,IAlC7B,GAkCgD3W,EAAU,EAC9D6wB,EAAWuB,OAAOzb,IAnCd,GAmCiC3W,EAAU,GAAK,QAG3D,GAAIqyB,EAAY,CACjB,IAAI9B,KAAqBnX,EAAQxC,UAAYr8B,KAAKlJ,OAAOm/C,gBACrDC,EAAYF,EAAkBh2C,KAAKlJ,OAAOiI,UAAUpH,OACpDu+C,EAAYl2C,KAAK4uC,eACjBsH,EAAYF,GACPh2C,KAAK4uC,aAAeoH,IAE7Bh2C,KAAK80B,WAAaohB,EAAYl2C,KAAKlJ,OAAOiI,UAAUpH,OACpDqI,KAAK6uC,SAAWqH,EACZI,EAAWuB,OAAOzb,IAAOp8B,KAAKlJ,OAAOm/C,eAAiBj2C,KAAK4uC,aAC3D5uC,KAAKs1C,WAAat1C,KAAKk3C,cAAcZ,EAAWuB,OAAOzb,IAAKyC,EAAQQ,wBAAwB5Z,QAG5FzlB,KAAKs1C,WAAagB,EAAWuB,OAAOzb,IAG5C,GAAK0b,GAAexB,EAAWuB,OAAOzb,IAAOp8B,KAAKlJ,OAAOm/C,eAAiBj2C,KAAK4uC,gBAC5D,CACf,IAAIwJ,EAAW75C,WAAS,kBAAmByB,MAAMgC,MAAMhC,MAAOs2C,EAAWr7B,UAAWo8B,EAAMf,EAAWuB,SACrG73C,KAAKq4C,aAAeD,EACpB,IAAI/+B,EAAO++B,EAASl/B,WAAak/B,EAASE,SAAWF,EAASh/B,SAASC,KAAO++B,EAAS/+B,KACvFrZ,KAAKlJ,OAAOwmB,eAAgBvM,cAAgBoI,YAAaE,KAAU,GACnE++B,EAASG,MAA2B,0BAAnBH,EAASG,MAAoC,gBAAkBH,EAASG,MACzFv4C,KAAKlJ,OAAOsb,OAAOgmC,EAASG,OAAS14C,YAAa,gBAAiBq1C,aAAcoB,EAAWpB,iBAGpGC,EAA2Bl0C,UAAUu3C,cAAgB,SAAUn3C,EAAQo3C,EAAU76C,GAC7E,GAAKoC,KAAKlJ,OAAOC,sBAAsBC,oBAAyD4lB,IAA1C5c,KAAKlJ,OAAOC,WAAWA,WAAWksC,KACvC,KAA1CjjC,KAAKlJ,OAAOC,WAAWA,WAAWksC,KAAe1rC,EAAgByI,KAAKlJ,QACrEyH,WAAS,mBAAoBX,KAC7BoC,KAAK01C,gBAAiB,GAE1B3zC,EAAOd,UAAUu3C,cAAc51C,KAAK5C,KAAMqB,EAAQo3C,EAAU76C,OAE3D,CACD,IAAIy5C,EAAOz5C,EAAE86C,YAAYC,cAAoD,MAApC/6C,EAAE86C,YAAYC,aAAaC,MAChEr6C,WAAS,cAAeyB,MAAMqZ,MAAQ9a,WAAS,cAAeyB,MAAMqZ,OAASzb,EAAE86C,YAAYr/B,KAC3F9a,WAAS,cAAeyB,MAAQpC,EAAE86C,YAClCG,EAAUxB,EAAKyB,cAAc,GAAM,EACnCC,EAAU/4C,KAAKg5C,gBAAgBH,IAEnCx3C,EAASrB,KAAKlJ,OAAOwV,cAAc,UAC5BoB,YAAY+qC,GAEnBz4C,KAAKi5C,WAAWnuC,cAAc,SAAgB,YAAEzJ,GAC3CrB,KAAKq1C,kBAAwC,IAApBr1C,KAAKs1C,WAI/Bt1C,KAAKq1C,kBAAmB,EAHxB92C,WAAS,aAAcyB,MAAMk5C,YAAYH,EAAS/4C,KAAKs1C,YAK3D//B,WAAS,WAAYvV,KAAKq4C,aAAer4C,KAAKq4C,aAAehB,EAAMr3C,MAGnE+B,EAAOd,UAAmB,UAAE2B,KAAK5C,KAAMpC,GAEnCoC,KAAU,QAAMA,KAAKlJ,OAAOu8B,aAAavoB,cAAc,cAAcA,cAAc,gBACxD,QAArB9K,KAAKu3C,aAA8C,WAArBv3C,KAAKu3C,cACjCv3C,KAAKkwC,cAAgBlwC,KAAK80B,WAC1B90B,KAAK03C,gBAEA13C,KAAK5E,aAAe4E,KAAK5E,aAAe,IAC7C4E,KAAU,OAAI,EACdA,KAAKlJ,OAAO+2B,QAAS,IAIjC7tB,KAAKy3C,mBACL11C,EAAOd,UAAoB,WAAE2B,KAAK5C,QAG1Cm1C,EAA2Bl0C,UAAUuJ,oBAAsB,WACnDxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,aAAc1K,KAAKm2C,aACnCn2C,KAAKlJ,OAAO4T,IAAI,gBAAiB1K,KAAK8X,IACtC9X,KAAKlJ,OAAO4T,IAAIkrC,GAA0B51C,KAAK61C,oBAC/C71C,KAAKlJ,OAAO4T,IAAIorC,GAAsB91C,KAAK2G,eAC3C3G,KAAKlJ,OAAO4T,IAAI,mCAAoC1K,KAAK0F,WACzD1F,KAAKlJ,OAAO4T,IAAI,kCAAmC1K,KAAK2F,UACxD3F,KAAKlJ,OAAO4T,IAAI,8BAA+B1K,KAAKy2C,oBACpDz2C,KAAKlJ,OAAO4T,IAAI,aAAc1K,KAAK02C,kBACnC12C,KAAKlJ,OAAO4T,IAAI,mBAAoB1K,KAAK22C,SACzC32C,KAAKlJ,OAAO4T,IAAI,6BAA8B1K,KAAK42C,cAEhDzB,GACTgE,0BAEEnC,GAA0C,SAAUj1C,GAEpD,SAASi1C,IACL,IAAI3vC,EAAmB,OAAXtF,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAKhE,OAJAqH,EAAM+xC,YAAa,EACnB/xC,EAAMgyC,OAAS,EACfhyC,EAAMiyC,QAAU,EAChBjyC,EAAMkyC,MAAQ,EACPlyC,EA8CX,OArDA5G,GAAUu2C,EAA0Bj1C,GASpCi1C,EAAyB/1C,UAAUo1C,SAAW,SAAUmD,GACpDjkC,WAAS,gBAAiBhX,WAAS,UAAWyB,MAAMqN,UAAUgyB,wBAAyBr/B,MACvFojB,eAAazW,IAAIpO,WAAS,UAAWyB,MAAMqN,UAAW,SAAUrN,KAAKy5C,sBAAsBD,GAAWx5C,OAE1Gg3C,EAAyB/1C,UAAUkiC,MAAQ,WACvCnjC,KAAKs5C,QAAU,MAEnBtC,EAAyB/1C,UAAUw4C,sBAAwB,SAAUD,GACjE,IAAInyC,EAAQrH,KACR05C,EAAU,EACVC,EAAW,EACf,OAAO,SAAU/7C,GACb,IAAIy+B,EAAYz+B,EAAEyD,OAAOg7B,UACrBqD,EAAa9hC,EAAEyD,OAAOq+B,WACtBzkB,EAAYy+B,EAAUrd,EAAY,OAAS,KAC/CphB,EAAY0+B,IAAaja,EAAazkB,EAAY0+B,EAAWja,EAAa,QAAU,OACpFga,EAAUrd,EACVsd,EAAWja,EACX,IAAI0I,EAAU7pC,WAAS,eAAgB8I,GAAO4T,GAC1C2+B,EAAQ,EACZvyC,EAAMgyC,OAAShd,EACM,MAAjBh1B,EAAMiyC,UACNM,EAAQvyC,EAAMgyC,OAAShyC,EAAMiyC,SAEjCjyC,EAAMiyC,QAAUjyC,EAAMgyC,OAClBhyC,EAAMkyC,OACNM,aAAaxyC,EAAMkyC,OAEvBlyC,EAAMkyC,MAAQ3sB,WAAWvlB,EAAM87B,MAAO,IAOjCyW,EAAQ,KAAOA,GAAS,MAASh8C,GAAKA,EAAEk8C,iBACzCl8C,EAAEm8C,aAAc,EAChBn8C,EAAEk8C,kBAENN,GAAWv+B,UAAWA,EAAW++B,QAAS3yC,EAAM+xC,WAC5CzB,SAAUvP,EAASyP,QAAUzb,IAAKC,EAAWQ,KAAM6C,GACnDwV,aAAcpZ,SAASiX,kBAG5BiE,GACTiD,wBCnZEx5C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBjI,OAAOoI,iBAChBC,wBAA2BjE,OAAS,SAAU8D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI/C,KAAK+C,EAAOA,EAAE3D,eAAeY,KAAI8C,EAAE9C,GAAK+C,EAAE/C,MACpD8C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAanI,OAAOyI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAwBxCm5C,GAA+B,WAI/B,SAASA,EAAcpjD,GACnBkJ,KAAKm6C,gBAAkB,EACvBn6C,KAAKo6C,cAAgB,EACrBp6C,KAAKlJ,OAASA,EAId,IAAK,IADD8sB,EAAUnhB,OAAKxB,UAAyB,gBACnCxJ,EAAI,EAAGA,EAAImsB,EAAQjsB,OAAQF,IAChC,GAAImsB,EAAQnsB,KAAO4iD,gBAAmB,CAClCz2B,EAAQvmB,OAAO5F,EAAG,GAClB,MAGRgL,OAAKC,OAAO43C,IACZt6C,KAAKkK,mBA6GT,OA3GAgwC,EAAcj5C,UAAUs5C,iBAAmB,SAAUv3C,GACjDA,EAAKrE,KAAOqB,KAAK8iC,YAMrBoX,EAAcj5C,UAAU4B,cAAgB,WACpC,MAAO,iBAKXq3C,EAAcj5C,UAAUiJ,iBAAmB,WACvClK,KAAKlJ,OAAOqT,GAAGqrB,EAAiCx1B,KAAKw6C,4BAA6Bx6C,MAClFA,KAAKlJ,OAAOqT,GAAGoR,EAAsBvb,KAAKy6C,kBAAmBz6C,OAKjEk6C,EAAcj5C,UAAUuJ,oBAAsB,WACtCxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI8qB,EAAiCx1B,KAAKw6C,6BACtDx6C,KAAKlJ,OAAO4T,IAAI6Q,EAAsBvb,KAAKy6C,qBAE/CP,EAAcj5C,UAAUu5C,4BAA8B,SAAU37C,GAC5DmB,KAAKlJ,OAAOiB,KAAKqa,OAAOwjC,IAA4BP,kBAAkB,IACtEr1C,KAAK06C,kBAAoB77C,EAAI/F,OAC7B+F,EAAI/F,OAAOS,SAA0B,aAAfsF,EAAIpD,OAC1B,IAAIgsC,GACAr0B,OAAQpT,KAAKlJ,OAAO4G,SACpBmB,IAAKA,EAAIA,IACTpD,OAAQoD,EAAIpD,OACZ3C,OAAQ+F,EAAI/F,OACZuV,MAAOrO,KAAKlJ,OAAO4G,SAAS/F,QAEhCqI,KAAKlJ,OAAOiB,KAAKiqB,iBACjB,IAAIniB,EAActB,WAAS,gBAAiByB,KAAKlJ,QAAU,cAAgB,UAC3EyH,WAAS,oBAAqByB,KAAKlJ,QAAQ2e,mBAAmBgyB,GAAO5nC,YAAaA,KAEtFq6C,EAAcj5C,UAAUw5C,kBAAoB,SAAU1S,GAClD,IAAI1gC,EAAQrH,KACRnG,EAAK,IAAI7C,cAAY+wC,EAAe30B,QACpC7Z,EAAW,IAAIuI,YAAU,WAAY,WAAY,MAAMwmC,GAAG,WAAY,gBAAY1rB,GAClF7jB,EAAUc,EAAGkc,cAAa,IAAIxB,SAAQI,MAAMpb,IAC5CupC,EAAa/pC,EAAQ4E,OAAO,SAAUC,GACtC,OAAO/E,EAAgBwO,EAAMvQ,OAAQ8G,EAAG7E,KAE5CiH,KAAK8iC,WAAaA,EAClB9iC,KAAKlJ,OAAOiB,KAAKqa,OAAOwwB,IAAuBjkC,KAAMmkC,IACrD,IAAI6X,GAAW7lB,YAAa,EAAG+Z,UAAW,EAAGxgC,MAAO05B,EAAe15B,OACnErO,KAAKlJ,OAAOiB,KAAKqa,OAAO0jC,GAAsB6E,GAC9C,IAAI7lB,EAAa6lB,EAAO7lB,WACpB+Z,EAAW8L,EAAO9L,SAEtB,GADA9G,EAAe15B,MAAQy0B,EAAWnrC,QACd,IAAhBm9B,IAAmC,IAAd+Z,EAAiB,CACtC,IAAIv6B,EAAQ,IAAIC,QACZ2zB,EAAOloC,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,SAErCF,EAAOC,GADGloC,KAAKlJ,OAAOiB,KAAKgZ,aAAaoI,YACf,GAC7B7E,EAAQA,EAAM2zB,KAAKA,GAAMI,KAAKH,GAC9BruC,EAAG9C,WAAW6E,KAAOknC,EACrBiF,EAAe30B,OAASvZ,EAAGkc,aAAazB,OAEvC,CASD,GAPoB,cADFyzB,EAAejuB,WAAWja,cAExCi1B,EAAa,EACb+Z,EAAW7uC,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,SAAW,EACpDnoC,KAAKlJ,OAAOiB,KAAKqa,OAAOwjC,IAA4BG,QAAQ,MAI3Dj+C,oBAAkBkI,KAAK06C,mBAAoB,CAC5C,IAAIE,EAAgB56C,KAAKlJ,OAAOiI,UAC5B87C,EAAS/X,EAAWpkC,QAAQsB,KAAK06C,mBACtB5X,EAAWv6B,MAAMsyC,EAAQA,EAASD,EAAcjjD,QAClDA,OAASijD,EAAcjjD,QAAUkjD,GAAU,GAGpD/lB,EADA+lB,GADAA,EAAS/X,EAAWnrC,OAASijD,EAAcjjD,QACzB,EAAIkjD,EAAS,EAE/BhM,EAAW/L,EAAWnrC,QAEjB4G,WAAS,gBAAiByB,KAAKlJ,UACpCg+B,EAAa,EACb+Z,EAAW7uC,KAAKlJ,OAAOiB,KAAKgZ,aAAao3B,SAAW,EACpDnoC,KAAKlJ,OAAOiB,KAAKqa,OAAOwjC,IAA4BG,QAAQ,KAEhE/1C,KAAK06C,kBAAoB,KAG7B3S,EAAe30B,OAAS0vB,EAAWv6B,MAAMusB,EAAY+Z,GACrD7uC,KAAKm6C,eAAiBrlB,EACtB90B,KAAKo6C,aAAevL,EAExB7uC,KAAKlJ,OAAOsb,OAAO,eAAgB21B,IAOvCmS,EAAcj5C,UAAU4I,QAAU,WAC9B7J,KAAKwK,uBAEF0vC,KAGPI,GAA6B,SAAUv4C,GAEvC,SAASu4C,EAAYxjD,EAAQs+C,GACzB,IAAI/tC,EAAQtF,EAAOa,KAAK5C,KAAMlJ,EAAQs+C,IAAYp1C,KAGlD,OAFAzB,WAAS,SAAU8I,GAAOqD,IAAI,eAAgBnM,WAAS,sBAAuB8I,GAAQA,GACtF9I,WAAS,SAAU8I,GAAO8C,GAAG,eAAgB9C,EAAMyzC,qBAAsBzzC,GAClEA,EAuBX,OA5BA5G,GAAU65C,EAAav4C,GAOvBu4C,EAAYr5C,UAAU65C,qBAAuB,WACzCv8C,WAAS,SAAUyB,MAAM8C,KAAK,aAAc,kBAAmB,kBAC/D,IAAIi4C,EAAWx8C,WAAS,UAAWyB,MAAMg7C,WAAW,mBACpDz8C,WAAS,cAAew8C,GACnB/4C,MAAM+4C,GAAWE,aAAWC,QAAS,IAAI/F,GAA2B52C,WAAS,SAAUyB,MAAOzB,WAAS,UAAWyB,SAEvHA,KAAKm7C,kBAETb,EAAYr5C,UAAUk6C,eAAiB,WACnC,IAAIC,EAAa78C,WAAS,SAAUyB,MAChCmnB,EAAYi0B,EAAWnF,eACtBn+C,oBAAkBsjD,EAAW31B,SAA0C,iBAAvB21B,EAAiB,SAAsD,IAApCA,EAAW31B,OAAO/mB,QAAQ,OAC9G08C,EAAWnoC,QAAQtY,MAAM8qB,OAAS21B,EAAW31B,QAEjD,IAGIA,EAAqB,MAHX21B,EAAW31B,OAAO5d,WAAWnJ,QAAQ,KAAO,EAAI08C,EAAW31B,OACrE21B,EAAWnoC,QAAQosB,wBAAwB5Z,QAClB0B,GAEzB+gB,EAAOkT,EAAWrqC,aAAao3B,SACnCiT,EAAW99B,eAAgBvM,cAAgBo3B,SAAUD,EAAOziB,EAASA,EAASyiB,KAAU,IAErFoS,GACTD,iBCjLEgB,GAAwB,WAIxB,SAASA,EAAOvkD,GACZ2L,OAAKC,OAAO44C,UACZt7C,KAAKlJ,OAASA,EACdkJ,KAAKkK,mBAqET,OAnEAmxC,EAAOp6C,UAAUiJ,iBAAmB,WAChClK,KAAKlJ,OAAOqT,GAAG,oBAAqBnK,KAAKk0C,kBAAmBl0C,MAC5DA,KAAKlJ,OAAOqT,GAAG,eAAgBnK,KAAK8zC,aAAc9zC,MAClDA,KAAKlJ,OAAOiB,KAAKoS,GAAG,WAAYnK,KAAKu7C,gBAAiBv7C,OAE1Dq7C,EAAOp6C,UAAUuJ,oBAAsB,WAC/BxK,KAAKlJ,OAAO2T,cAGhBzK,KAAKlJ,OAAO4T,IAAI,oBAAqB1K,KAAKk0C,mBAC1Cl0C,KAAKlJ,OAAO4T,IAAI,eAAgB1K,KAAK8zC,cACrC9zC,KAAKlJ,OAAOiB,KAAK2S,IAAI,WAAY1K,KAAKu7C,mBAE1CF,EAAOp6C,UAAUizC,kBAAoB,SAAUlxC,GAC3C,IAEI+E,EAFAguB,EAAc/1B,KAAKlJ,OAAOsY,qBAC1BosC,EAAax7C,KAAKlJ,OAAOiI,UAQzBgJ,EANC/E,EAAKmyB,WAAWx9B,OAMVqL,EAAKmyB,WALLY,EAAYp4B,OAAO,SAAUC,GAChC,OAAOA,EAAEkN,cAAc,kBAAoB9H,EAAKlK,OAAOwB,MAAQ,SAAW0I,EAAKlK,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAIsQ,EAAKpQ,OAAQF,IAAK,CAClC,IAAIgkD,EAAQz7C,KAAKlJ,OAAOiB,KAAKsf,oBAAoBtP,EAAKtQ,GAAG0U,aAAa,aAAaxN,KACnFoJ,EAAKtQ,GAAGkD,MAAMG,QAAUkI,EAAKvH,OAC7B,IAAIigD,EAAgC,SAAhB14C,EAAKvH,OAAoB,8CACvC,4CACN,GAAI+/C,EAAWzzC,EAAKtQ,GAAGkS,UAAUmB,cAAc4wC,GAAgB,CAE3D,IAAK,IADDhlB,KACKE,EAAM,EAAGA,EAAMb,EAAYp+B,OAAQi/B,IACpCb,EAAYa,GAAK9rB,cAAc,kBAAoB2wC,EAAMnhD,MAAQ,SAAWmhD,EAAMlhD,MAAQ,KAC1Fm8B,EAAK99B,KAAKm9B,EAAYa,IAG1BF,EAAK/+B,QACLqI,KAAKk0C,mBAAoB/e,WAAYuB,EAAMj7B,OAAQuH,EAAKvH,YAKxE4/C,EAAOp6C,UAAUs6C,gBAAkB,SAAU39C,GACrCiN,eAAajN,EAAEyD,OAAQ,cACvBrB,KAAKlJ,OAAOiB,KAAKiE,aAAakyB,qBAAyD,SAAlCluB,KAAKlJ,OAAOkF,aAAaC,MAC9E+D,KAAKlJ,OAAOiB,KAAKmE,WAAWi1B,UAAUtmB,eAAajN,EAAEyD,OAAQ,WAGrEg6C,EAAOp6C,UAAU6yC,aAAe,SAAU9wC,GACjBhD,KAAKlJ,OAAO8I,aAAajC,OAAO,SAAUC,GAC3D,OAAOA,EAAEhG,eAEMD,QAAUqI,KAAKlJ,OAAO6kD,cAAgB37C,KAAKlJ,OAAOuC,eACjEgX,YAAUrQ,KAAKlJ,OAAOmc,QAAQmE,uBAAuB,UAAU,IAAK,qBAG5EikC,EAAOp6C,UAAU4I,QAAU,WACvB7J,KAAKwK,uBAMT6wC,EAAOp6C,UAAU4B,cAAgB,WAC7B,MAAO,UAEJw4C,KC9EPO,GAA+B,WAI/B,SAASA,EAAc9kD,GACnB2L,OAAKC,OAAOm5C,iBACZ77C,KAAKlJ,OAASA,EA0BlB,OAlBA8kD,EAAc36C,UAAUywB,kBAAoB,SAAUoqB,EAAGC,GACrD,OAAO/7C,KAAKlJ,OAAOiB,KAAK85B,oBAAoBH,kBAAkBoqB,EAAGC,IAOrEH,EAAc36C,UAAU4I,QAAU,aAOlC+xC,EAAc36C,UAAU4B,cAAgB,WACpC,MAAO,iBAEJ+4C,0BnClCO,oCAIK,wHAYG,4IAcF,sCAID,uCAIC,qJAcA,2BAEC,wCAEY,qSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}